<configuration>
<logical-systems><name>logicalRouterName</name>
		

		/* ospf configuration */
<protocols>
<ospf operation="replace">
		if (namePolicy!=null) {
<export>namePolicy</export>
		}
		if (ospfRouterConfig.getListAreas()!=null) {
			for (OSPFAreaConfiguration areaConfig: ospfRouterConfig.getListAreas()) {
				<area>;
	
				/* Config for OSPF */
				<name>areaConfig.getAreaID()</name>
				if (areaConfig.getListSubInterfaceIDs()!=null) {
					for (String interfaceId: areaConfig.getListSubInterfaceIDs()) {
						<interface>	
						<name>"+interfaceId+"</name>
						if(areaConfig.getAuthenticationType()!=null && areaConfig.getAuthenticationType().compareTo("")!=0){
//							if(areaConfig.getAuthenticationType().compareTo(EngineConstants.ROUTING_AUTH_SIMPLE_PASSWORD)==0){
//								command+="<authentication><simple-password>"+areaConfig.getAuthentication().getPassword()+"</simple-password></authentication>";
//							}else{
//								command+="<authentication><md5><name>"+areaConfig.getAuthentication().getKeyId()</name>
//								"<key>"+areaConfig.getAuthentication().getKey()+"</key>
//								"<start-time>"+areaConfig.getAuthentication().getStartTime()+"</start-time></md5></authentication>
//							}
						}
						<dead-interval>"+areaConfig.getDeadInterval()+"</dead-interval>
						<hello-interval>"+areaConfig.getHelloInterval()+"</hello-interval>
						<retransmit-interval>"+areaConfig.getLSA_RestransmitInterval()+"</retransmit-interval>
						<transit-delay>"+areaConfig.getTransitDelayInterval()+"</transit-delay>
						
						OSPFInterfaceConfiguration subIntOSPFConfig = ospfSubIntConfigurations.get(interfaceId);
						if(subIntOSPFConfig!=null){
							command+="<priority>"+subIntOSPFConfig.getPriority()+"</priority>"+'\n';
							command+="<metric>"+subIntOSPFConfig.getCost()+"</metric>"+'\n';
							if(subIntOSPFConfig.isPassive()){
//								command+="<passive><traffic-engineering><remote-node-id>"+remote-node-id+
//								"</remote-node-id></trafic-engineering></passive>"+'\n';					
							}

						}
						command+="</interface>"+'\n';	
					}
					
					if(areaConfig.getAreaType().compareTo(EngineConstants.OSPF_TYPE_BACKBONE)==0){
						List<VirtualLink> virtualLinks = areaConfig.getListVirtualLinks();
						if(virtualLinks!=null){
							for(VirtualLink vlink : virtualLinks){
								command+="<virtual-link><neighbor-id>"+vlink.getRouterId()+"</neighbor-id><transit-area>" +
										vlink.getAreaId()+"</transit-area></virtual-link>";
							}
						}
					}else if(areaConfig.getAreaType().compareTo(EngineConstants.OSPF_TYPE_NSSA)==0){
						command+="<nssa><default-lsa><default-metric>" +areaConfig.getNSSADefaultRouteMetric()+
								"</default-metric><metric-type>"+areaConfig.getNSSAMetricType()+"</metric-type>" + 
								"<type-7/></default-lsa>";
						if(areaConfig.isNSSASummaries()){
							command+="<summaries/>";
						}
						command+="</nssa>";
						
					}else if(areaConfig.getAreaType().compareTo(EngineConstants.OSPF_TYPE_STUB)==0){
						<stub><default-metric> +areaConfig.getNSSADefaultRouteMetric()</default-metric>
						if(areaConfig.isStubSummaries()){
							<summaries/>;
						}
						</stub>
					}
				}
				</area>	
			}
		}
		</ospf></protocols>;
		
		if((logicalRouterName!=null)&&(!logicalRouterName.equals(""))){
			</logical-systems>
		}
		
</configuration>