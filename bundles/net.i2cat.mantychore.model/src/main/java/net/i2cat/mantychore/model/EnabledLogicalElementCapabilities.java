/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class EnabledLogicalElementCapabilities as well as methods 
 * comparable to the invokeMethods defined for this class. This Class 
 * implements the EnabledLogicalElementCapabilitiesBean Interface. The CIM 
 * class EnabledLogicalElementCapabilities is described as follows: 
 * 
 * EnabledLogicalElementCapabilities describes the capabilities supported for 
 * changing the state of the associated EnabledLogicalElement. 
 */
public class EnabledLogicalElementCapabilities extends Capabilities implements 
    Serializable {

    /**
     * This constructor creates a EnabledLogicalElementCapabilitiesBeanImpl 
     * Class which implements the EnabledLogicalElementCapabilitiesBean 
     * Interface, and encapsulates the CIM class 
     * EnabledLogicalElementCapabilities in a Java Bean. The CIM class 
     * EnabledLogicalElementCapabilities is described as follows: 
     * 
     * EnabledLogicalElementCapabilities describes the capabilities supported 
     * for changing the state of the associated EnabledLogicalElement. 
     */
    public EnabledLogicalElementCapabilities(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ElementNameEditSupported. 
     */
    private boolean elementNameEditSupported;
    /**
     * This method returns the 
     * EnabledLogicalElementCapabilities.ElementNameEditSupported property 
     * value. This property is described as follows: 
     * 
     * Boolean indicating whether the ElementName can be modified.
     * 
     * @return	boolean	current ElementNameEditSupported property 
     * value 
     * @exception	Exception	
     */
    public boolean isElementNameEditSupported(){

    return this.elementNameEditSupported;
    } // getElementNameEditSupported

    /**
     * This method sets the 
     * EnabledLogicalElementCapabilities.ElementNameEditSupported property 
     * value. This property is described as follows: 
     * 
     * Boolean indicating whether the ElementName can be modified.
     * 
     * @param	boolean	new ElementNameEditSupported property 
     * value 
     * @exception	Exception	
     */
    public void setElementNameEditSupported(boolean elementNameEditSupported) 
	{

    this.elementNameEditSupported = elementNameEditSupported;
    } // setElementNameEditSupported


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property MaxElementNameLen. 
     */
    private short maxElementNameLen;
    /**
     * This method returns the 
     * EnabledLogicalElementCapabilities.MaxElementNameLen property value. 
     * This property is described as follows: 
     * 
     * Maximum supported ElementName length.
     * 
     * @return	short	current MaxElementNameLen property value
     * @exception	Exception	
     */
    public short getMaxElementNameLen(){

    return this.maxElementNameLen;
    } // getMaxElementNameLen

    /**
     * This method sets the 
     * EnabledLogicalElementCapabilities.MaxElementNameLen property value. 
     * This property is described as follows: 
     * 
     * Maximum supported ElementName length.
     * 
     * @param	short	new MaxElementNameLen property value
     * @exception	Exception	
     */
    public void setMaxElementNameLen(short maxElementNameLen) {

    this.maxElementNameLen = maxElementNameLen;
    } // setMaxElementNameLen


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RequestedStatesSupported. 
     */

    public enum RequestedStatesSupported{
    ENABLED,
    DISABLED,
    SHUT_DOWN,
    OFFLINE,
    TEST,
    DEFER,
    QUIESCE,
    REBOOT,
    RESET
    }
 public RequestedStatesSupported requestedStatesSupported;
    /**
     * This method returns the 
     * EnabledLogicalElementCapabilities.RequestedStatesSupported property 
     * value. This property is described as follows: 
     * 
     * RequestedStatesSupported indicates the possible states that can be 
     * requested when using the method RequestStateChange on the 
     * EnabledLogicalElement. 
     * 
     * @return	short	current RequestedStatesSupported property 
     * value 
     * @exception	Exception	
     */
    public RequestedStatesSupported getRequestedStatesSupported(){

    return this.requestedStatesSupported;
    } // getRequestedStatesSupported

    /**
     * This method sets the 
     * EnabledLogicalElementCapabilities.RequestedStatesSupported property 
     * value. This property is described as follows: 
     * 
     * RequestedStatesSupported indicates the possible states that can be 
     * requested when using the method RequestStateChange on the 
     * EnabledLogicalElement. 
     * 
     * @param	short	new RequestedStatesSupported property value
     * @exception	Exception	
     */
    public void setRequestedStatesSupported(RequestedStatesSupported 
	requestedStatesSupported){

    this.requestedStatesSupported = requestedStatesSupported;
    } // setRequestedStatesSupported


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ElementNameMask. 
     */
    private String elementNameMask;
    /**
     * This method returns the 
     * EnabledLogicalElementCapabilities.ElementNameMask property value. This 
     * property is described as follows: 
     * 
     * This string expresses the restrictions on ElementName.The mask is 
     * expressed as a regular expression.See DMTF standard ABNF with the 
     * Management Profile Specification Usage Guide, appendix C for the 
     * regular expression syntax permitted. Since the ElementNameMask can 
     * describe the maximum length of the ElementName,any length defined in 
     * the regexp is in addition to the restriction defined in 
     * MaxElementNameLen (causing the smaller value to be the maximum length) 
     * The ElementName value satisfies the restriction, if and only if it 
     * matches the regular expression 
     * 
     * @return	String	current ElementNameMask property value
     * @exception	Exception	
     */
    public String getElementNameMask(){

    return this.elementNameMask;
    } // getElementNameMask

    /**
     * This method sets the EnabledLogicalElementCapabilities.ElementNameMask 
     * property value. This property is described as follows: 
     * 
     * This string expresses the restrictions on ElementName.The mask is 
     * expressed as a regular expression.See DMTF standard ABNF with the 
     * Management Profile Specification Usage Guide, appendix C for the 
     * regular expression syntax permitted. Since the ElementNameMask can 
     * describe the maximum length of the ElementName,any length defined in 
     * the regexp is in addition to the restriction defined in 
     * MaxElementNameLen (causing the smaller value to be the maximum length) 
     * The ElementName value satisfies the restriction, if and only if it 
     * matches the regular expression 
     * 
     * @param	String	new ElementNameMask property value
     * @exception	Exception	
     */
    public void setElementNameMask(String elementNameMask) {

    this.elementNameMask = elementNameMask;
    } // setElementNameMask



} // Class EnabledLogicalElementCapabilities
