/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Nov 29 
 * 11:50:57 CET 2010. 
 */

package net.i2cat.mantychore.model;

import javax.wbem.client.*;
import javax.wbem.cim.*;
import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class HostedService as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * HostedServiceBean Interface. The CIM class HostedService is described as 
 * follows: 
 * 
 * CIM_HostedService is an association between a Service and the System on 
 * which the functionality is located. The cardinality of this association is 
 * one-to-many. A System can host many Services. Services are weak with 
 * respect to their hosting System. Heuristic: A Service is hosted on the 
 * System where the LogicalDevices or SoftwareFeatures that implement the 
 * Service are located. The model does not represent Services hosted across 
 * multiple systems. The model is as an ApplicationSystem that acts as an 
 * aggregation point for Services that are each located on a single host. 
 */
public class HostedService extends HostedDependency implements Serializable 
    {

    /**
     * This constructor creates a HostedServiceBeanImpl Class which implements 
     * the HostedServiceBean Interface, and encapsulates the CIM class 
     * HostedService in a Java Bean. The CIM class HostedService is described 
     * as follows: 
     * 
     * CIM_HostedService is an association between a Service and the System on 
     * which the functionality is located. The cardinality of this 
     * association is one-to-many. A System can host many Services. Services 
     * are weak with respect to their hosting System. Heuristic: A Service is 
     * hosted on the System where the LogicalDevices or SoftwareFeatures that 
     * implement the Service are located. The model does not represent 
     * Services hosted across multiple systems. The model is as an 
     * ApplicationSystem that acts as an aggregation point for Services that 
     * are each located on a single host. 
     */
    public HostedService(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Antecedent. 
     */
    private System antecedent;
    /**
     * This method returns the HostedService.Antecedent property value. This 
     * property is described as follows: 
     * 
     * The hosting System.
     * 
     * @return	CIM_System	current Antecedent property value
     * @exception	Exception	
     */
    public System getAntecedent(){

    return (System)antecedent;
    } // getAntecedent

    /**
     * This method sets the HostedService.Antecedent property value. This 
     * property is described as follows: 
     * 
     * The hosting System.
     * 
     * @param	CIM_System	new Antecedent property value
     * @exception	Exception	
     */
    public void setAntecedent(System antecedent) {

    this.antecedent = antecedent;
    } // setAntecedent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Dependent. 
     */
    private Service dependent;
    /**
     * This method returns the HostedService.Dependent property value. This 
     * property is described as follows: 
     * 
     * The Service hosted on the System.
     * 
     * @return	CIM_Service	current Dependent property value
     * @exception	Exception	
     */
    public Service getDependent(){

    return (Service)dependent;
    } // getDependent

    /**
     * This method sets the HostedService.Dependent property value. This 
     * property is described as follows: 
     * 
     * The Service hosted on the System.
     * 
     * @param	CIM_Service	new Dependent property value
     * @exception	Exception	
     */
    public void setDependent(Service dependent) {

    this.dependent = dependent;
    } // setDependent



} // Class HostedService
