/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 17 
 * 13:56:59 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class ConditioningServiceOnEndpoint as well as methods 
 * comparable to the invokeMethods defined for this class. This Class 
 * implements the ConditioningServiceOnEndpointBean Interface. The CIM class 
 * ConditioningServiceOnEndpoint is described as follows: 
 * 
 * The QoS Model describes the traffic conditioning functions in place for a 
 * network device. In order to 'be conditioned', a packet is received at a 
 * ProtocolEndpoint. After 'conditioning', a packet is dropped or leaves the 
 * device via a ProtocolEndpoint. This dependency on ProtocolEndpoints is 
 * defined by the ConditioningServiceOn Endpoint association. A property of 
 * the association, ServiceType, indicates whether the ConditioningService 
 * handles incoming ("Ingress") or out-going ("Egress") packets. This 
 * association is deprecated since different cardinalities are needed on the 
 * ingress and egress classes. This cannot be done using a single 
 * association. 
 */
public class ConditioningServiceOnEndpoint extends Dependency implements 
    Serializable {

    /**
     * This constructor creates a ConditioningServiceOnEndpointBeanImpl Class 
     * which implements the ConditioningServiceOnEndpointBean Interface, and 
     * encapsulates the CIM class ConditioningServiceOnEndpoint in a Java 
     * Bean. The CIM class ConditioningServiceOnEndpoint is described as 
     * follows: 
     * 
     * The QoS Model describes the traffic conditioning functions in place for 
     * a network device. In order to 'be conditioned', a packet is received 
     * at a ProtocolEndpoint. After 'conditioning', a packet is dropped or 
     * leaves the device via a ProtocolEndpoint. This dependency on 
     * ProtocolEndpoints is defined by the ConditioningServiceOn Endpoint 
     * association. A property of the association, ServiceType, indicates 
     * whether the ConditioningService handles incoming ("Ingress") or 
     * out-going ("Egress") packets. This association is deprecated since 
     * different cardinalities are needed on the ingress and egress classes. 
     * This cannot be done using a single association. 
     */
    public ConditioningServiceOnEndpoint(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Antecedent. 
     */
    @Deprecated    private ProtocolEndpoint antecedent;
    /**
     * This method returns the ConditioningServiceOnEndpoint.Antecedent 
     * property value. This property is described as follows: 
     * 
     * The ProtocolEndpoint through which traffic arrives at or leaves from a 
     * network device. 
     * 
     * @return	CIM_ProtocolEndpoint	current Antecedent property 
     * value 
     * @exception	Exception	
     */
    @Deprecated
    public ProtocolEndpoint getAntecedent(){

    return (ProtocolEndpoint)antecedent;
    } // getAntecedent

    /**
     * This method sets the ConditioningServiceOnEndpoint.Antecedent property 
     * value. This property is described as follows: 
     * 
     * The ProtocolEndpoint through which traffic arrives at or leaves from a 
     * network device. 
     * 
     * @param	CIM_ProtocolEndpoint	new Antecedent property value
     * @exception	Exception	
     */
    @Deprecated
    public void setAntecedent(ProtocolEndpoint antecedent) {

    this.antecedent = antecedent;
    } // setAntecedent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Dependent. 
     */
    @Deprecated    private ConditioningService dependent;
    /**
     * This method returns the ConditioningServiceOnEndpoint.Dependent 
     * property value. This property is described as follows: 
     * 
     * The ConditioningService which begins or ends the traffic conditioning 
     * processing within a network device. 
     * 
     * @return	CIM_ConditioningService	current Dependent 
     * property value 
     * @exception	Exception	
     */
    @Deprecated
    public ConditioningService getDependent(){

    return (ConditioningService)dependent;
    } // getDependent

    /**
     * This method sets the ConditioningServiceOnEndpoint.Dependent property 
     * value. This property is described as follows: 
     * 
     * The ConditioningService which begins or ends the traffic conditioning 
     * processing within a network device. 
     * 
     * @param	CIM_ConditioningService	new Dependent property 
     * value 
     * @exception	Exception	
     */
    @Deprecated
    public void setDependent(ConditioningService dependent) {

    this.dependent = dependent;
    } // setDependent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ServiceType. 
     */
    @Deprecated
    public enum ServiceType{
    UNKNOWN,
    INGRESS,
    EGRESS
    }
 private ServiceType serviceType;
    /**
     * This method returns the ConditioningServiceOnEndpoint.ServiceType 
     * property value. This property is described as follows: 
     * 
     * Indicates whether a packet is incoming (value = 1, "Ingress") or 
     * out-going (value = 2, "Egress") at the ProtocolEndpoint, relative to 
     * the ConditioningService. 
     * 
     * @return	short	current ServiceType property value
     * @exception	Exception	
     */
    @Deprecated
    public ServiceType getServiceType(){

    return this.serviceType;
    } // getServiceType

    /**
     * This method sets the ConditioningServiceOnEndpoint.ServiceType property 
     * value. This property is described as follows: 
     * 
     * Indicates whether a packet is incoming (value = 1, "Ingress") or 
     * out-going (value = 2, "Egress") at the ProtocolEndpoint, relative to 
     * the ConditioningService. 
     * 
     * @param	short	new ServiceType property value
     * @exception	Exception	
     */
    @Deprecated
    public void setServiceType(ServiceType serviceType){

    this.serviceType = serviceType;
    } // setServiceType



} // Class ConditioningServiceOnEndpoint
