/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Tue Nov 30 
 * 10:54:51 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class NetworkAdapter as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * NetworkAdapterBean Interface. The CIM class NetworkAdapter is described as 
 * follows: 
 * 
 * Note: The use of the CIM_NetworkAdpater class has been deprecated in lieu 
 * of CIM_NetworkPort. CIM_NetworkPort better reflects that the hardware of a 
 * single port is described and managed. Deprecated description: 
 * NetworkAdapter is an Abstract class that defines general networking 
 * hardware concepts (for example, PermanentAddress or Speed of operation). 
 */
public class NetworkAdapter extends LogicalDevice implements Serializable {

    /**
     * This constructor creates a NetworkAdapterBeanImpl Class which 
     * implements the NetworkAdapterBean Interface, and encapsulates the CIM 
     * class NetworkAdapter in a Java Bean. The CIM class NetworkAdapter is 
     * described as follows: 
     * 
     * Note: The use of the CIM_NetworkAdpater class has been deprecated in 
     * lieu of CIM_NetworkPort. CIM_NetworkPort better reflects that the 
     * hardware of a single port is described and managed. Deprecated 
     * description: NetworkAdapter is an Abstract class that defines general 
     * networking hardware concepts (for example, PermanentAddress or Speed 
     * of operation). 
     */
    protected NetworkAdapter(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PermanentAddress. 
     */
    @Deprecated    private String permanentAddress;
    /**
     * This method returns the NetworkAdapter.PermanentAddress property value. 
     * This property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: PermanentAddress defines the network address that is 
     * hardcoded into an adapter. This 'hardcoded' address might be changed 
     * through a firmware upgrade or software configuration. If so, this 
     * field should be updated when the change is made. PermanentAddress 
     * should be left blank if no 'hardcoded' address exists for the 
     * NetworkAdapter. 
     * 
     * @return	String	current PermanentAddress property value
     * @exception	Exception	
     */
    @Deprecated
    public String getPermanentAddress(){

    return this.permanentAddress;
    } // getPermanentAddress

    /**
     * This method sets the NetworkAdapter.PermanentAddress property value. 
     * This property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: PermanentAddress defines the network address that is 
     * hardcoded into an adapter. This 'hardcoded' address might be changed 
     * through a firmware upgrade or software configuration. If so, this 
     * field should be updated when the change is made. PermanentAddress 
     * should be left blank if no 'hardcoded' address exists for the 
     * NetworkAdapter. 
     * 
     * @param	String	new PermanentAddress property value
     * @exception	Exception	
     */
    @Deprecated
    public void setPermanentAddress(String permanentAddress) {

    this.permanentAddress = permanentAddress;
    } // setPermanentAddress


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property NetworkAddresses. 
     */
    @Deprecated    private String[] networkAddresses;
    /**
     * This method returns the NetworkAdapter.NetworkAddresses property value. 
     * This property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: An array of strings that indicates the network addresses 
     * for an adapter. 
     * 
     * @return	String[]	current NetworkAddresses property value
     * @exception	Exception	
     */
    @Deprecated
    public String[] getNetworkAddresses(){

    return this.networkAddresses;
    } // getNetworkAddresses

    /**
     * This method sets the NetworkAdapter.NetworkAddresses property value. 
     * This property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: An array of strings that indicates the network addresses 
     * for an adapter. 
     * 
     * @param	String[]	new NetworkAddresses property value
     * @exception	Exception	
     */
    @Deprecated
    public void setNetworkAddresses(String[] networkAddresses) {

    this.networkAddresses = networkAddresses;
    } // setNetworkAddresses


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Speed. 
     */
    @Deprecated    private long speed;
    /**
     * This method returns the NetworkAdapter.Speed property value. This 
     * property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: An estimate of the current bandwidth in Bits per Second. 
     * For Adapters that vary in bandwidth or for those where no accurate 
     * estimation can be made, this property should contain the nominal 
     * bandwidth. 
     * 
     * @return	long	current Speed property value
     * @exception	Exception	
     */
    @Deprecated
    public long getSpeed(){

    return this.speed;
    } // getSpeed

    /**
     * This method sets the NetworkAdapter.Speed property value. This property 
     * is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: An estimate of the current bandwidth in Bits per Second. 
     * For Adapters that vary in bandwidth or for those where no accurate 
     * estimation can be made, this property should contain the nominal 
     * bandwidth. 
     * 
     * @param	long	new Speed property value
     * @exception	Exception	
     */
    @Deprecated
    public void setSpeed(long speed) {

    this.speed = speed;
    } // setSpeed


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property MaxSpeed. 
     */
    @Deprecated    private long maxSpeed;
    /**
     * This method returns the NetworkAdapter.MaxSpeed property value. This 
     * property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: The maximum speed, in Bits per Second, for the Network 
     * Adapter. 
     * 
     * @return	long	current MaxSpeed property value
     * @exception	Exception	
     */
    @Deprecated
    public long getMaxSpeed(){

    return this.maxSpeed;
    } // getMaxSpeed

    /**
     * This method sets the NetworkAdapter.MaxSpeed property value. This 
     * property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: The maximum speed, in Bits per Second, for the Network 
     * Adapter. 
     * 
     * @param	long	new MaxSpeed property value
     * @exception	Exception	
     */
    @Deprecated
    public void setMaxSpeed(long maxSpeed) {

    this.maxSpeed = maxSpeed;
    } // setMaxSpeed


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property FullDuplex. 
     */
    @Deprecated    private boolean fullDuplex;
    /**
     * This method returns the NetworkAdapter.FullDuplex property value. This 
     * property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: A Boolean that indicates that the Adapter is operating in 
     * full duplex mode. 
     * 
     * @return	boolean	current FullDuplex property value
     * @exception	Exception	
     */
    @Deprecated
    public boolean isFullDuplex(){

    return this.fullDuplex;
    } // getFullDuplex

    /**
     * This method sets the NetworkAdapter.FullDuplex property value. This 
     * property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: A Boolean that indicates that the Adapter is operating in 
     * full duplex mode. 
     * 
     * @param	boolean	new FullDuplex property value
     * @exception	Exception	
     */
    @Deprecated
    public void setFullDuplex(boolean fullDuplex) {

    this.fullDuplex = fullDuplex;
    } // setFullDuplex


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property AutoSense. 
     */
    @Deprecated    private boolean autoSense;
    /**
     * This method returns the NetworkAdapter.AutoSense property value. This 
     * property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: A Boolean that indicates whether the NetworkAdapter is 
     * capable of automatically determining the speed or other communications 
     * characteristics of the attached network media. 
     * 
     * @return	boolean	current AutoSense property value
     * @exception	Exception	
     */
    @Deprecated
    public boolean isAutoSense(){

    return this.autoSense;
    } // getAutoSense

    /**
     * This method sets the NetworkAdapter.AutoSense property value. This 
     * property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: A Boolean that indicates whether the NetworkAdapter is 
     * capable of automatically determining the speed or other communications 
     * characteristics of the attached network media. 
     * 
     * @param	boolean	new AutoSense property value
     * @exception	Exception	
     */
    @Deprecated
    public void setAutoSense(boolean autoSense) {

    this.autoSense = autoSense;
    } // setAutoSense


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OctetsTransmitted. 
     */
    @Deprecated    private long octetsTransmitted;
    /**
     * This method returns the NetworkAdapter.OctetsTransmitted property 
     * value. This property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. The replacement is 
     * CIM_NetworkPortStatistics.BytesTransmitted. 
     * 
     * @return	long	current OctetsTransmitted property value
     * @exception	Exception	
     */
    @Deprecated
    public long getOctetsTransmitted(){

    return this.octetsTransmitted;
    } // getOctetsTransmitted

    /**
     * This method sets the NetworkAdapter.OctetsTransmitted property value. 
     * This property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. The replacement is 
     * CIM_NetworkPortStatistics.BytesTransmitted. 
     * 
     * @param	long	new OctetsTransmitted property value
     * @exception	Exception	
     */
    @Deprecated
    public void setOctetsTransmitted(long octetsTransmitted) {

    this.octetsTransmitted = octetsTransmitted;
    } // setOctetsTransmitted


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OctetsReceived. 
     */
    @Deprecated    private long octetsReceived;
    /**
     * This method returns the NetworkAdapter.OctetsReceived property value. 
     * This property is described as follows: 
     * 
     * Note: The use of OctetsReceived is deprecated. The replacement is 
     * CIM_NetworkPortStatistics.BytesReceived. 
     * 
     * @return	long	current OctetsReceived property value
     * @exception	Exception	
     */
    @Deprecated
    public long getOctetsReceived(){

    return this.octetsReceived;
    } // getOctetsReceived

    /**
     * This method sets the NetworkAdapter.OctetsReceived property value. This 
     * property is described as follows: 
     * 
     * Note: The use of OctetsReceived is deprecated. The replacement is 
     * CIM_NetworkPortStatistics.BytesReceived. 
     * 
     * @param	long	new OctetsReceived property value
     * @exception	Exception	
     */
    @Deprecated
    public void setOctetsReceived(long octetsReceived) {

    this.octetsReceived = octetsReceived;
    } // setOctetsReceived



} // Class NetworkAdapter
