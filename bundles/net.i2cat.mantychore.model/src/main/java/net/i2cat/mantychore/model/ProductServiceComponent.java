/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 17 
 * 13:56:59 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class ProductServiceComponent as well as methods comparable to 
 * the invokeMethods defined for this class. This Class implements the 
 * ProductServiceComponentBean Interface. The CIM class 
 * ProductServiceComponent is described as follows: 
 * 
 * Indicates that the referenced Service is acquired as part of a Product. 
 * Examples of Services that may be acquired are outsourced storage and 
 * networking services, or support and warranty services. Expanding on the 
 * examples, Services represent generic functionality - so, it is possible to 
 * model the existence of storage volume management or warranty services as 
 * individual instances of subclasses of CIM_Service. These 'Services' may be 
 * enabled/disabled, started/stopped, signal an error, etc. (They behave as 
 * standard ManagedSystemElements.) Specific requests against the Services - 
 * for example, a request for warranty service or increased storage space - 
 * are NOT new instances of Service, but may be requested via the methods of 
 * the Service subclass, or be instantiated as specific subclasses of 
 * ManagedElement. 
 */
public class ProductServiceComponent extends Component implements Serializable 
    {

    /**
     * This constructor creates a ProductServiceComponentBeanImpl Class which 
     * implements the ProductServiceComponentBean Interface, and encapsulates 
     * the CIM class ProductServiceComponent in a Java Bean. The CIM class 
     * ProductServiceComponent is described as follows: 
     * 
     * Indicates that the referenced Service is acquired as part of a Product. 
     * Examples of Services that may be acquired are outsourced storage and 
     * networking services, or support and warranty services. Expanding on 
     * the examples, Services represent generic functionality - so, it is 
     * possible to model the existence of storage volume management or 
     * warranty services as individual instances of subclasses of 
     * CIM_Service. These 'Services' may be enabled/disabled, 
     * started/stopped, signal an error, etc. (They behave as standard 
     * ManagedSystemElements.) Specific requests against the Services - for 
     * example, a request for warranty service or increased storage space - 
     * are NOT new instances of Service, but may be requested via the methods 
     * of the Service subclass, or be instantiated as specific subclasses of 
     * ManagedElement. 
     */
    public ProductServiceComponent(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property GroupComponent. 
     */
    private Product groupComponent;
    /**
     * This method returns the ProductServiceComponent.GroupComponent property 
     * value. This property is described as follows: 
     * 
     * The Product.
     * 
     * @return	CIM_Product	current GroupComponent property value
     * @exception	Exception	
     */
    public Product getGroupComponent(){

    return (Product)groupComponent;
    } // getGroupComponent

    /**
     * This method sets the ProductServiceComponent.GroupComponent property 
     * value. This property is described as follows: 
     * 
     * The Product.
     * 
     * @param	CIM_Product	new GroupComponent property value
     * @exception	Exception	
     */
    public void setGroupComponent(Product groupComponent) {

    this.groupComponent = groupComponent;
    } // setGroupComponent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PartComponent. 
     */
    private Service partComponent;
    /**
     * This method returns the ProductServiceComponent.PartComponent property 
     * value. This property is described as follows: 
     * 
     * The Service which is a part of the Product.
     * 
     * @return	CIM_Service	current PartComponent property value
     * @exception	Exception	
     */
    public Service getPartComponent(){

    return (Service)partComponent;
    } // getPartComponent

    /**
     * This method sets the ProductServiceComponent.PartComponent property 
     * value. This property is described as follows: 
     * 
     * The Service which is a part of the Product.
     * 
     * @param	CIM_Service	new PartComponent property value
     * @exception	Exception	
     */
    public void setPartComponent(Service partComponent) {

    this.partComponent = partComponent;
    } // setPartComponent



} // Class ProductServiceComponent
