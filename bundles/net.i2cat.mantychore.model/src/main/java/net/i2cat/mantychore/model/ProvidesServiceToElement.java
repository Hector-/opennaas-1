/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Tue Nov 30 
 * 15:29:20 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class ProvidesServiceToElement as well as methods comparable to 
 * the invokeMethods defined for this class. This Class implements the 
 * ProvidesServiceToElementBean Interface. The CIM class 
 * ProvidesServiceToElement is described as follows: 
 * 
 * Note: The use of the CIM_ProvidesServiceToElement class has been 
 * deprecated. Instead, ServiceAvailableToElement conveys the semantics of 
 * use, while the subclasses of ProvidesServiceToElement (or the 
 * ConcreteDependency association) describe dependency relationships. 
 * CIM_ProvidesServiceToElement was meant to generalize the 
 * ServiceServiceDependency association. This method indicates that 
 * ManagedElements can use the functionality provided by one or more 
 * Services. An example of the association is that a Processor and an 
 * enclosure (a PhysicalElement) can use AlertOnLAN Services to signal an 
 * incomplete or erroneous boot. In reality, AlertOnLAN is simply a 
 * HostedService on a computer system that is generally available for use and 
 * is not a dependency of the processor or enclosure. To describe that the 
 * use of the service might be restricted or have limited availability or 
 * applicability, the CIM_ServiceAvailableToElement association would be 
 * instantiated. 
 */
public class ProvidesServiceToElement extends Dependency implements 
    Serializable {

    /**
     * This constructor creates a ProvidesServiceToElementBeanImpl Class which 
     * implements the ProvidesServiceToElementBean Interface, and 
     * encapsulates the CIM class ProvidesServiceToElement in a Java Bean. 
     * The CIM class ProvidesServiceToElement is described as follows: 
     * 
     * Note: The use of the CIM_ProvidesServiceToElement class has been 
     * deprecated. Instead, ServiceAvailableToElement conveys the semantics 
     * of use, while the subclasses of ProvidesServiceToElement (or the 
     * ConcreteDependency association) describe dependency relationships. 
     * CIM_ProvidesServiceToElement was meant to generalize the 
     * ServiceServiceDependency association. This method indicates that 
     * ManagedElements can use the functionality provided by one or more 
     * Services. An example of the association is that a Processor and an 
     * enclosure (a PhysicalElement) can use AlertOnLAN Services to signal an 
     * incomplete or erroneous boot. In reality, AlertOnLAN is simply a 
     * HostedService on a computer system that is generally available for use 
     * and is not a dependency of the processor or enclosure. To describe 
     * that the use of the service might be restricted or have limited 
     * availability or applicability, the CIM_ServiceAvailableToElement 
     * association would be instantiated. 
     */
    public ProvidesServiceToElement(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Antecedent. 
     */
    @Deprecated    private Service antecedent;
    /**
     * This method returns the ProvidesServiceToElement.Antecedent property 
     * value. This property is described as follows: 
     * 
     * Note: The use of this element is deprecated. Deprecated description: 
     * The Service provided. 
     * 
     * @return	CIM_Service	current Antecedent property value
     * @exception	Exception	
     */
    @Deprecated
    public Service getAntecedent(){

    return (Service)antecedent;
    } // getAntecedent

    /**
     * This method sets the ProvidesServiceToElement.Antecedent property 
     * value. This property is described as follows: 
     * 
     * Note: The use of this element is deprecated. Deprecated description: 
     * The Service provided. 
     * 
     * @param	CIM_Service	new Antecedent property value
     * @exception	Exception	
     */
    @Deprecated
    public void setAntecedent(Service antecedent) {

    this.antecedent = antecedent;
    } // setAntecedent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Dependent. 
     */
    @Deprecated    private ManagedElement dependent;
    /**
     * This method returns the ProvidesServiceToElement.Dependent property 
     * value. This property is described as follows: 
     * 
     * Note: The use of this element is deprecated. Deprecated description: 
     * The ManagedElement that is dependent on the Service. 
     * 
     * @return	CIM_ManagedElement	current Dependent property 
     * value 
     * @exception	Exception	
     */
    @Deprecated
    public ManagedElement getDependent(){

    return (ManagedElement)dependent;
    } // getDependent

    /**
     * This method sets the ProvidesServiceToElement.Dependent property value. 
     * This property is described as follows: 
     * 
     * Note: The use of this element is deprecated. Deprecated description: 
     * The ManagedElement that is dependent on the Service. 
     * 
     * @param	CIM_ManagedElement	new Dependent property value
     * @exception	Exception	
     */
    @Deprecated
    public void setDependent(ManagedElement dependent) {

    this.dependent = dependent;
    } // setDependent



} // Class ProvidesServiceToElement
