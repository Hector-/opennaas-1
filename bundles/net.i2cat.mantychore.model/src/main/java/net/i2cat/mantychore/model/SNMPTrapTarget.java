/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Nov 29 
 * 11:50:57 CET 2010. 
 */

package net.i2cat.mantychore.model;

import javax.wbem.client.*;
import javax.wbem.cim.*;
import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class SNMPTrapTarget as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * SNMPTrapTargetBean Interface. The CIM class SNMPTrapTarget is described as 
 * follows: 
 * 
 * SNMPTrapTarget contains information describing a remote system, to which 
 * Informs and Traps are sent. An SNMPService is related via a 
 * ServiceSAPDependency association to one or more instances of this class. 
 */
public class SNMPTrapTarget extends RemotePort implements Serializable {

    /**
     * This constructor creates a SNMPTrapTargetBeanImpl Class which 
     * implements the SNMPTrapTargetBean Interface, and encapsulates the CIM 
     * class SNMPTrapTarget in a Java Bean. The CIM class SNMPTrapTarget is 
     * described as follows: 
     * 
     * SNMPTrapTarget contains information describing a remote system, to 
     * which Informs and Traps are sent. An SNMPService is related via a 
     * ServiceSAPDependency association to one or more instances of this 
     * class. 
     */
    public SNMPTrapTarget(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property AccessInfo. 
     */
    private String accessInfo;
    /**
     * This method returns the SNMPTrapTarget.AccessInfo property value. This 
     * property is described as follows: 
     * 
     * The host address.
     * 
     * @return	String	current AccessInfo property value
     * @exception	Exception	
     */
    public String getAccessInfo(){

    return (String)accessInfo;
    } // getAccessInfo

    /**
     * This method sets the SNMPTrapTarget.AccessInfo property value. This 
     * property is described as follows: 
     * 
     * The host address.
     * 
     * @param	String	new AccessInfo property value
     * @exception	Exception	
     */
    public void setAccessInfo(String accessInfo) {

    this.accessInfo = accessInfo;
    } // setAccessInfo


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PortProtocol. 
     */

    public enum PortProtocol{
    OTHER,
    TCP,
    UDP,
    VENDOR_SPECIFIC
    }PortProtocol portProtocol;
    /**
     * This method returns the SNMPTrapTarget.PortProtocol property value. 
     * This property is described as follows: 
     * 
     * A UDP port to which the traps/informs are sent.
     * 
     * @return	short	current PortProtocol property value
     * @exception	Exception	
     */
    public PortProtocol getPortProtocol(){

    return this.portProtocol;
    } // getPortProtocol

    /**
     * This method sets the SNMPTrapTarget.PortProtocol property value. This 
     * property is described as follows: 
     * 
     * A UDP port to which the traps/informs are sent.
     * 
     * @param	short	new PortProtocol property value
     * @exception	Exception	
     */
    public void setPortProtocol(PortProtocol portProtocol){

    this.portProtocol = portProtocol;
    } // setPortProtocol


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PortInfo. 
     */
    private String portInfo;
    /**
     * This method returns the SNMPTrapTarget.PortInfo property value. This 
     * property is described as follows: 
     * 
     * The UDP port number to which the traps/informs are sent. The default is 
     * port 162. 
     * 
     * @return	String	current PortInfo property value
     * @exception	Exception	
     */
    public String getPortInfo(){

    return (String)portInfo;
    } // getPortInfo

    /**
     * This method sets the SNMPTrapTarget.PortInfo property value. This 
     * property is described as follows: 
     * 
     * The UDP port number to which the traps/informs are sent. The default is 
     * port 162. 
     * 
     * @param	String	new PortInfo property value
     * @exception	Exception	
     */
    public void setPortInfo(String portInfo) {

    this.portInfo = portInfo;
    } // setPortInfo


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property NotificationMessage. 
     */

    public enum NotificationMessage{
    TRAPS,
    INFORMS
    }NotificationMessage notificationMessage;
    /**
     * This method returns the SNMPTrapTarget.NotificationMessage property 
     * value. This property is described as follows: 
     * 
     * Allows the selection of the notification message - Traps or Informs. By 
     * default, Traps are selected. 
     * 
     * @return	short	current NotificationMessage property value
     * @exception	Exception	
     */
    public NotificationMessage getNotificationMessage(){

    return this.notificationMessage;
    } // getNotificationMessage

    /**
     * This method sets the SNMPTrapTarget.NotificationMessage property value. 
     * This property is described as follows: 
     * 
     * Allows the selection of the notification message - Traps or Informs. By 
     * default, Traps are selected. 
     * 
     * @param	short	new NotificationMessage property value
     * @exception	Exception	
     */
    public void setNotificationMessage(NotificationMessage 
	notificationMessage){

    this.notificationMessage = notificationMessage;
    } // setNotificationMessage


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SNMPVersion. 
     */

    public enum SNMPVersion{
    V1,
    V2C,
    V3
    }SNMPVersion sNMPVersion;
    /**
     * This method returns the SNMPTrapTarget.SNMPVersion property value. This 
     * property is described as follows: 
     * 
     * The SNMP version used to send the traps or informs. Note that v1 does 
     * not support informs. 
     * 
     * @return	short	current SNMPVersion property value
     * @exception	Exception	
     */
    public SNMPVersion getSNMPVersion(){

    return this.sNMPVersion;
    } // getSNMPVersion

    /**
     * This method sets the SNMPTrapTarget.SNMPVersion property value. This 
     * property is described as follows: 
     * 
     * The SNMP version used to send the traps or informs. Note that v1 does 
     * not support informs. 
     * 
     * @param	short	new SNMPVersion property value
     * @exception	Exception	
     */
    public void setSNMPVersion(SNMPVersion sNMPVersion){

    this.sNMPVersion = sNMPVersion;
    } // setSNMPVersion


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property CommunityString. 
     */
    private String communityString;
    /**
     * This method returns the SNMPTrapTarget.CommunityString property value. 
     * This property is described as follows: 
     * 
     * A community string/password to send with the trap operation.
     * 
     * @return	String	current CommunityString property value
     * @exception	Exception	
     */
    public String getCommunityString(){

    return this.communityString;
    } // getCommunityString

    /**
     * This method sets the SNMPTrapTarget.CommunityString property value. 
     * This property is described as follows: 
     * 
     * A community string/password to send with the trap operation.
     * 
     * @param	String	new CommunityString property value
     * @exception	Exception	
     */
    public void setCommunityString(String communityString) {

    this.communityString = communityString;
    } // setCommunityString



} // Class SNMPTrapTarget
