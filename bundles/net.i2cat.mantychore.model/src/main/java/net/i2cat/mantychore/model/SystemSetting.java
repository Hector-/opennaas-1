/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class SystemSetting as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * SystemSettingBean Interface. The CIM class SystemSetting is described as 
 * follows: 
 * 
 * CIM_SystemSetting represents the general concept of a CIM_Setting that is 
 * scoped by a System. 
 */
    @Entity
public class SystemSetting extends Setting implements Serializable {

    /**
     * This constructor creates a SystemSettingBeanImpl Class which implements 
     * the SystemSettingBean Interface, and encapsulates the CIM class 
     * SystemSetting in a Java Bean. The CIM class SystemSetting is described 
     * as follows: 
     * 
     * CIM_SystemSetting represents the general concept of a CIM_Setting that 
     * is scoped by a System. 
     */
    protected SystemSetting(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SystemCreationClassName. 
     */
    private String systemCreationClassName;
    /**
     * This method returns the SystemSetting.systemCreationClassName property 
     * value. This property is described as follows: 
     * 
     * The CreationClassName of the scoping system.
     * 
     * @return	String	current systemCreationClassName property 
     * value 
     * @exception	Exception	
     */
    public String getsystemCreationClassName(){

    return this.systemCreationClassName;
    } // getsystemCreationClassName

    /**
     * This method sets the SystemSetting.systemCreationClassName property 
     * value. This property is described as follows: 
     * 
     * The CreationClassName of the scoping system.
     * 
     * @param	String	new systemCreationClassName property value
     * @exception	Exception	
     */
    public void setsystemCreationClassName(String systemCreationClassName) {

    this.systemCreationClassName = systemCreationClassName;
    } // setsystemCreationClassName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SystemName. 
     */
    private String systemName;
    /**
     * This method returns the SystemSetting.systemName property value. This 
     * property is described as follows: 
     * 
     * The Name of the scoping system.
     * 
     * @return	String	current systemName property value
     * @exception	Exception	
     */
    public String getsystemName(){

    return this.systemName;
    } // getsystemName

    /**
     * This method sets the SystemSetting.systemName property value. This 
     * property is described as follows: 
     * 
     * The Name of the scoping system.
     * 
     * @param	String	new systemName property value
     * @exception	Exception	
     */
    public void setsystemName(String systemName) {

    this.systemName = systemName;
    } // setsystemName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property CreationClassName. 
     */
    private String creationClassName;
    /**
     * This method returns the SystemSetting.creationClassName property value. 
     * This property is described as follows: 
     * 
     * CreationClassName indicates the name of the class or the subclass used 
     * in the creation of an instance. When used with the other key 
     * properties of this class, this property allows all instances of this 
     * class and its subclasses to be uniquely identified. 
     * 
     * @return	String	current creationClassName property value
     * @exception	Exception	
     */
    public String getcreationClassName(){

    return this.creationClassName;
    } // getcreationClassName

    /**
     * This method sets the SystemSetting.creationClassName property value. 
     * This property is described as follows: 
     * 
     * CreationClassName indicates the name of the class or the subclass used 
     * in the creation of an instance. When used with the other key 
     * properties of this class, this property allows all instances of this 
     * class and its subclasses to be uniquely identified. 
     * 
     * @param	String	new creationClassName property value
     * @exception	Exception	
     */
    public void setcreationClassName(String creationClassName) {

    this.creationClassName = creationClassName;
    } // setcreationClassName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SettingID. 
     */
    private String settingID;
    /**
     * This method returns the SystemSetting.settingID property value. This 
     * property is described as follows: 
     * 
     * The identifier by which the Setting object is known.
     * 
     * @return	String	current settingID property value
     * @exception	Exception	
     */
    public String getsettingID(){

    return (String)settingID;
    } // getsettingID

    /**
     * This method sets the SystemSetting.settingID property value. This 
     * property is described as follows: 
     * 
     * The identifier by which the Setting object is known.
     * 
     * @param	String	new settingID property value
     * @exception	Exception	
     */
    public void setsettingID(String settingID) {

    this.settingID = settingID;
    } // setsettingID



} // Class SystemSetting
