/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class OpaqueManagementDataCapabilities as well as methods 
 * comparable to the invokeMethods defined for this class. This Class 
 * implements the OpaqueManagementDataCapabilitiesBean Interface. The CIM 
 * class OpaqueManagementDataCapabilities is described as follows: 
 * 
 * CIM_OpaqueManagementDataCapabilities describes the capabilities of 
 * CIM_OpaqueManagementDataService. 
 */
    @Entity
public class OpaqueManagementDataCapabilities extends 
    EnabledLogicalElementCapabilities implements Serializable {

    /**
     * This constructor creates a OpaqueManagementDataCapabilitiesBeanImpl 
     * Class which implements the OpaqueManagementDataCapabilitiesBean 
     * Interface, and encapsulates the CIM class 
     * OpaqueManagementDataCapabilities in a Java Bean. The CIM class 
     * OpaqueManagementDataCapabilities is described as follows: 
     * 
     * CIM_OpaqueManagementDataCapabilities describes the capabilities of 
     * CIM_OpaqueManagementDataService. 
     */
    public OpaqueManagementDataCapabilities(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property MaxAvailableStorage. 
     */
    private long maxAvailableStorage;
    /**
     * This method returns the 
     * OpaqueManagementDataCapabilities.maxAvailableStorage property value. 
     * This property is described as follows: 
     * 
     * The maximum number of bytes of opaque management data storage managed 
     * by the associated CIM_OpaqueManagementDataService, and hence the 
     * maximum value of the AvailableStorage property in the associated 
     * CIM_OpaqueManagementDataService. 
     * 
     * @return	long	current maxAvailableStorage property value
     * @exception	Exception	
     */
    public long getmaxAvailableStorage(){

    return this.maxAvailableStorage;
    } // getmaxAvailableStorage

    /**
     * This method sets the 
     * OpaqueManagementDataCapabilities.maxAvailableStorage property value. 
     * This property is described as follows: 
     * 
     * The maximum number of bytes of opaque management data storage managed 
     * by the associated CIM_OpaqueManagementDataService, and hence the 
     * maximum value of the AvailableStorage property in the associated 
     * CIM_OpaqueManagementDataService. 
     * 
     * @param	long	new maxAvailableStorage property value
     * @exception	Exception	
     */
    public void setmaxAvailableStorage(long maxAvailableStorage) {

    this.maxAvailableStorage = maxAvailableStorage;
    } // setmaxAvailableStorage


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property MaxReadLength. 
     */
    private long maxReadLength;
    /**
     * This method returns the OpaqueManagementDataCapabilities.maxReadLength 
     * property value. This property is described as follows: 
     * 
     * MaxReadLength indicates the maximum value that the service supports in 
     * the Length parameter of the ReadOpaqueManagementData method. Larger 
     * extents can be read by successively invoking ReadOpaqueManagementData 
     * on chunks of the data and reassembling them in the management client. 
     * When this is done, the LockOpaqueManagementData method should be used 
     * to prevent modification of the data by other clients between 
     * successive reads. 
     * 
     * @return	long	current maxReadLength property value
     * @exception	Exception	
     */
    public long getmaxReadLength(){

    return this.maxReadLength;
    } // getmaxReadLength

    /**
     * This method sets the OpaqueManagementDataCapabilities.maxReadLength 
     * property value. This property is described as follows: 
     * 
     * MaxReadLength indicates the maximum value that the service supports in 
     * the Length parameter of the ReadOpaqueManagementData method. Larger 
     * extents can be read by successively invoking ReadOpaqueManagementData 
     * on chunks of the data and reassembling them in the management client. 
     * When this is done, the LockOpaqueManagementData method should be used 
     * to prevent modification of the data by other clients between 
     * successive reads. 
     * 
     * @param	long	new maxReadLength property value
     * @exception	Exception	
     */
    public void setmaxReadLength(long maxReadLength) {

    this.maxReadLength = maxReadLength;
    } // setmaxReadLength


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property MaxWriteLength. 
     */
    private long maxWriteLength;
    /**
     * This method returns the OpaqueManagementDataCapabilities.maxWriteLength 
     * property value. This property is described as follows: 
     * 
     * MaxWriteLength indicates the maximum value that the service supports in 
     * the Length parameter of the WriteOpaqueManagementData method. Larger 
     * extents can be written by successively invoking 
     * WriteOpaqueManagementData on chunks of the data and reassembling them 
     * in the management client. When this is done, the 
     * LockOpaqueManagementData method should be used to prevent modification 
     * of the data by other clients between successive writes. 
     * 
     * @return	long	current maxWriteLength property value
     * @exception	Exception	
     */
    public long getmaxWriteLength(){

    return this.maxWriteLength;
    } // getmaxWriteLength

    /**
     * This method sets the OpaqueManagementDataCapabilities.maxWriteLength 
     * property value. This property is described as follows: 
     * 
     * MaxWriteLength indicates the maximum value that the service supports in 
     * the Length parameter of the WriteOpaqueManagementData method. Larger 
     * extents can be written by successively invoking 
     * WriteOpaqueManagementData on chunks of the data and reassembling them 
     * in the management client. When this is done, the 
     * LockOpaqueManagementData method should be used to prevent modification 
     * of the data by other clients between successive writes. 
     * 
     * @param	long	new maxWriteLength property value
     * @exception	Exception	
     */
    public void setmaxWriteLength(long maxWriteLength) {

    this.maxWriteLength = maxWriteLength;
    } // setmaxWriteLength


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedExportURISchemes. 
     */

    public enum SupportedExportURISchemes{
    DATA,
    FILE,
    FTP,
    HTTP,
    HTTPS,
    NFS,
    TFTP,
    DMTF_RESERVED,
    VENDOR_SPECIFIC
    }
    private SupportedExportURISchemes supportedExportURISchemes;
    /**
     * This method returns the 
     * OpaqueManagementDataCapabilities.SupportedExportURISchemes property 
     * value. This property is described as follows: 
     * 
     * This property lists the URI schemes supported by 
     * OpaqueManagementDataService.ExportOpaqueManagementDataToURI(). 
     * 
     * @return	int	current SupportedExportURISchemes property 
     * value 
     * @exception	Exception	
     */
    public SupportedExportURISchemes getSupportedExportURISchemes(){

    return this.supportedExportURISchemes;
    } // getSupportedExportURISchemes

    /**
     * This method sets the 
     * OpaqueManagementDataCapabilities.SupportedExportURISchemes property 
     * value. This property is described as follows: 
     * 
     * This property lists the URI schemes supported by 
     * OpaqueManagementDataService.ExportOpaqueManagementDataToURI(). 
     * 
     * @param	int	new SupportedExportURISchemes property value
     * @exception	Exception	
     */
    public void setSupportedExportURISchemes(SupportedExportURISchemes 
	supportedExportURISchemes){

    this.supportedExportURISchemes = supportedExportURISchemes;
    } // setSupportedExportURISchemes


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedImportURISchemes. 
     */

    public enum SupportedImportURISchemes{
    DATA,
    FILE,
    FTP,
    HTTP,
    HTTPS,
    NFS,
    TFTP,
    DMTF_RESERVED,
    VENDOR_SPECIFIC
    }
    private SupportedImportURISchemes supportedImportURISchemes;
    /**
     * This method returns the 
     * OpaqueManagementDataCapabilities.SupportedImportURISchemes property 
     * value. This property is described as follows: 
     * 
     * This property lists the URI schemes supported by 
     * OpaqueManagementDataService.ImportOpaqueManagementDataFromURI(). 
     * 
     * @return	int	current SupportedImportURISchemes property 
     * value 
     * @exception	Exception	
     */
    public SupportedImportURISchemes getSupportedImportURISchemes(){

    return this.supportedImportURISchemes;
    } // getSupportedImportURISchemes

    /**
     * This method sets the 
     * OpaqueManagementDataCapabilities.SupportedImportURISchemes property 
     * value. This property is described as follows: 
     * 
     * This property lists the URI schemes supported by 
     * OpaqueManagementDataService.ImportOpaqueManagementDataFromURI(). 
     * 
     * @param	int	new SupportedImportURISchemes property value
     * @exception	Exception	
     */
    public void setSupportedImportURISchemes(SupportedImportURISchemes 
	supportedImportURISchemes){

    this.supportedImportURISchemes = supportedImportURISchemes;
    } // setSupportedImportURISchemes


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedMethods. 
     */

    public enum SupportedMethods{
    OTHER,
    CREATE,
    READ,
    EXPORTTOURI,
    WRITE,
    IMPORTFROMURI,
    LOCK,
    REASSIGNOWNERSHIP,
    ASSIGNACCESS,
    DMTF_RESERVED,
    VENDOR_SPECIFIC
    }
    private SupportedMethods supportedMethods;
    /**
     * This method returns the 
     * OpaqueManagementDataCapabilities.SupportedMethods property value. This 
     * property is described as follows: 
     * 
     * This property advertises the methods that are supported by the service.
     * 
     * @return	int	current SupportedMethods property value
     * @exception	Exception	
     */
    public SupportedMethods getSupportedMethods(){

    return this.supportedMethods;
    } // getSupportedMethods

    /**
     * This method sets the OpaqueManagementDataCapabilities.SupportedMethods 
     * property value. This property is described as follows: 
     * 
     * This property advertises the methods that are supported by the service.
     * 
     * @param	int	new SupportedMethods property value
     * @exception	Exception	
     */
    public void setSupportedMethods(SupportedMethods supportedMethods){

    this.supportedMethods = supportedMethods;
    } // setSupportedMethods


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property TruncationSupported. 
     */
    private boolean truncationSupported;
    /**
     * This method returns the 
     * OpaqueManagementDataCapabilities.truncationSupported property value. 
     * This property is described as follows: 
     * 
     * TruncationSupported indicates whether the associated 
     * CIM_OpaqueManagementDataService allows a client to truncate the data 
     * in a CIM_OpaqueManagementData instance by reducing the value of its 
     * DataSize property. If TruncationSupported = true, then the Service 
     * shall support reduction of the value of 
     * CIM_OpaqueManagementData.DataSize .If TruncationSupported = false or 
     * is null, then the Service shall not support reduction of the value of 
     * CIM_OpaqueManagementData.DataSize 
     * 
     * @return	boolean	current truncationSupported property 
     * value 
     * @exception	Exception	
     */
    public boolean istruncationSupported(){

    return this.truncationSupported;
    } // gettruncationSupported

    /**
     * This method sets the 
     * OpaqueManagementDataCapabilities.truncationSupported property value. 
     * This property is described as follows: 
     * 
     * TruncationSupported indicates whether the associated 
     * CIM_OpaqueManagementDataService allows a client to truncate the data 
     * in a CIM_OpaqueManagementData instance by reducing the value of its 
     * DataSize property. If TruncationSupported = true, then the Service 
     * shall support reduction of the value of 
     * CIM_OpaqueManagementData.DataSize .If TruncationSupported = false or 
     * is null, then the Service shall not support reduction of the value of 
     * CIM_OpaqueManagementData.DataSize 
     * 
     * @param	boolean	new truncationSupported property value
     * @exception	Exception	
     */
    public void settruncationSupported(boolean truncationSupported) {

    this.truncationSupported = truncationSupported;
    } // settruncationSupported


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property MaxInstancesSupported. 
     */
    private int maxInstancesSupported;
    /**
     * This method returns the 
     * OpaqueManagementDataCapabilities.maxInstancesSupported property value. 
     * This property is described as follows: 
     * 
     * MaxInstancesSupported shall indicate the maximum number of opaque 
     * management data instances that may exist within the scope of the 
     * CIM_OpaqueManagementDataService and managed by the associated instance 
     * of the CIM_OpaqueManagementDataService. A value of zero shall indicate 
     * that the maximum number of instances is unknown or that the maximum 
     * number of instances is not enforced. 
     * 
     * @return	int	current maxInstancesSupported property value
     * @exception	Exception	
     */
    public int getmaxInstancesSupported(){

    return this.maxInstancesSupported;
    } // getmaxInstancesSupported

    /**
     * This method sets the 
     * OpaqueManagementDataCapabilities.maxInstancesSupported property value. 
     * This property is described as follows: 
     * 
     * MaxInstancesSupported shall indicate the maximum number of opaque 
     * management data instances that may exist within the scope of the 
     * CIM_OpaqueManagementDataService and managed by the associated instance 
     * of the CIM_OpaqueManagementDataService. A value of zero shall indicate 
     * that the maximum number of instances is unknown or that the maximum 
     * number of instances is not enforced. 
     * 
     * @param	int	new maxInstancesSupported property value
     * @exception	Exception	
     */
    public void setmaxInstancesSupported(int maxInstancesSupported) {

    this.maxInstancesSupported = maxInstancesSupported;
    } // setmaxInstancesSupported



} // Class OpaqueManagementDataCapabilities
