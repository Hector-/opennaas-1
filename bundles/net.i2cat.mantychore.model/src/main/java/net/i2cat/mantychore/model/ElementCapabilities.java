/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class ElementCapabilities as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * ElementCapabilitiesBean Interface. The CIM class ElementCapabilities is 
 * described as follows: 
 * 
 * ElementCapabilities represents the association between ManagedElements and 
 * their Capabilities. Note that the cardinality of the ManagedElement 
 * reference is Min(1). This cardinality mandates the instantiation of the 
 * ElementCapabilities association for the referenced instance of 
 * Capabilities. ElementCapabilities describes the existence requirements and 
 * context for the referenced instance of ManagedElement. Specifically, the 
 * ManagedElement MUST exist and provides the context for the Capabilities. 
 */
public class ElementCapabilities  implements Serializable {

    /**
     * This constructor creates a ElementCapabilitiesBeanImpl Class which 
     * implements the ElementCapabilitiesBean Interface, and encapsulates the 
     * CIM class ElementCapabilities in a Java Bean. The CIM class 
     * ElementCapabilities is described as follows: 
     * 
     * ElementCapabilities represents the association between ManagedElements 
     * and their Capabilities. Note that the cardinality of the 
     * ManagedElement reference is Min(1). This cardinality mandates the 
     * instantiation of the ElementCapabilities association for the 
     * referenced instance of Capabilities. ElementCapabilities describes the 
     * existence requirements and context for the referenced instance of 
     * ManagedElement. Specifically, the ManagedElement MUST exist and 
     * provides the context for the Capabilities. 
     */
    public ElementCapabilities(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ManagedElement. 
     */
    private ManagedElement managedElement;
    /**
     * This method returns the ElementCapabilities.ManagedElement property 
     * value. This property is described as follows: 
     * 
     * The managed element.
     * 
     * @return	CIM_ManagedElement	current ManagedElement 
     * property value 
     * @exception	Exception	
     */
    public ManagedElement getManagedElement(){

    return this.managedElement;
    } // getManagedElement

    /**
     * This method sets the ElementCapabilities.ManagedElement property value. 
     * This property is described as follows: 
     * 
     * The managed element.
     * 
     * @param	CIM_ManagedElement	new ManagedElement property 
     * value 
     * @exception	Exception	
     */
    public void setManagedElement(ManagedElement managedElement) {

    this.managedElement = managedElement;
    } // setManagedElement


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Capabilities. 
     */
    private Capabilities capabilities;
    /**
     * This method returns the ElementCapabilities.Capabilities property 
     * value. This property is described as follows: 
     * 
     * The Capabilities object associated with the element.
     * 
     * @return	CIM_Capabilities	current Capabilities property 
     * value 
     * @exception	Exception	
     */
    public Capabilities getCapabilities(){

    return this.capabilities;
    } // getCapabilities

    /**
     * This method sets the ElementCapabilities.Capabilities property value. 
     * This property is described as follows: 
     * 
     * The Capabilities object associated with the element.
     * 
     * @param	CIM_Capabilities	new Capabilities property value
     * @exception	Exception	
     */
    public void setCapabilities(Capabilities capabilities) {

    this.capabilities = capabilities;
    } // setCapabilities


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Characteristics. 
     */

    public enum Characteristics{
    DEFAULT,
    CURRENT,
    DMTF_RESERVED,
    VENDOR_SPECIFIC
    }
 public Characteristics characteristics;
    /**
     * This method returns the ElementCapabilities.Characteristics property 
     * value. This property is described as follows: 
     * 
     * Characteristics provides descriptive information about the 
     * Capabilities. when the value 2 "Default" is specified, the associated 
     * Capabilities shall represent the default capabilities of the 
     * associated Managed Element when the value 2 "Default" is not 
     * specified, the Capabilities instance may represent the default 
     * capabilities of the Managed Element When the value 3 "Current" is 
     * specified, the associated Capabilities shall represent the current 
     * capabilities of the associated Managed Element When the value 3 
     * "Current" is not specified, the Capabilities instance may represent 
     * the current capabilities of the Managed Element. 
     * 
     * @return	short	current Characteristics property value
     * @exception	Exception	
     */
    public Characteristics getCharacteristics(){

    return this.characteristics;
    } // getCharacteristics

    /**
     * This method sets the ElementCapabilities.Characteristics property 
     * value. This property is described as follows: 
     * 
     * Characteristics provides descriptive information about the 
     * Capabilities. when the value 2 "Default" is specified, the associated 
     * Capabilities shall represent the default capabilities of the 
     * associated Managed Element when the value 2 "Default" is not 
     * specified, the Capabilities instance may represent the default 
     * capabilities of the Managed Element When the value 3 "Current" is 
     * specified, the associated Capabilities shall represent the current 
     * capabilities of the associated Managed Element When the value 3 
     * "Current" is not specified, the Capabilities instance may represent 
     * the current capabilities of the Managed Element. 
     * 
     * @param	short	new Characteristics property value
     * @exception	Exception	
     */
    public void setCharacteristics(Characteristics characteristics){

    this.characteristics = characteristics;
    } // setCharacteristics



} // Class ElementCapabilities
