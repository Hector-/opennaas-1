/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class IngressConditioningServiceOnEndpoint as well as methods 
 * comparable to the invokeMethods defined for this class. This Class 
 * implements the IngressConditioningServiceOnEndpointBean Interface. The CIM 
 * class IngressConditioningServiceOnEndpoint is described as follows: 
 * 
 * This association represents the binding, in the ingress direction, between 
 * a ProtocolEndpoint and the first ConditioningService that processes 
 * packets received via that Endpoint. Since there can only be one 'first' 
 * ConditioningService for a ProtocolEndpoint, the cardinality for the 
 * Dependent object reference is narrowed from 0..n to 0..1. On the other 
 * hand, a single ConditioningService can be the first to process packets 
 * received via multiple ProtocolEndpoints. So, the cardinality of the 
 * Antecedent object reference remains 0..n. 
 */
public class IngressConditioningServiceOnEndpoint extends ServiceSAPDependency 
    implements Serializable {

    /**
     * This constructor creates a IngressConditioningServiceOnEndpointBeanImpl 
     * Class which implements the IngressConditioningServiceOnEndpointBean 
     * Interface, and encapsulates the CIM class 
     * IngressConditioningServiceOnEndpoint in a Java Bean. The CIM class 
     * IngressConditioningServiceOnEndpoint is described as follows: 
     * 
     * This association represents the binding, in the ingress direction, 
     * between a ProtocolEndpoint and the first ConditioningService that 
     * processes packets received via that Endpoint. Since there can only be 
     * one 'first' ConditioningService for a ProtocolEndpoint, the 
     * cardinality for the Dependent object reference is narrowed from 0..n 
     * to 0..1. On the other hand, a single ConditioningService can be the 
     * first to process packets received via multiple ProtocolEndpoints. So, 
     * the cardinality of the Antecedent object reference remains 0..n. 
     */
    public IngressConditioningServiceOnEndpoint(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Antecedent. 
     */
    private ProtocolEndpoint antecedent;
    /**
     * This method returns the IngressConditioningServiceOnEndpoint.Antecedent 
     * property value. This property is described as follows: 
     * 
     * The ProtocolEndpoint through which traffic arrives at a network device.
     * 
     * @return	CIM_ProtocolEndpoint	current Antecedent property 
     * value 
     * @exception	Exception	
     */
    public ProtocolEndpoint getAntecedent(){

    return (ProtocolEndpoint)antecedent;
    } // getAntecedent

    /**
     * This method sets the IngressConditioningServiceOnEndpoint.Antecedent 
     * property value. This property is described as follows: 
     * 
     * The ProtocolEndpoint through which traffic arrives at a network device.
     * 
     * @param	CIM_ProtocolEndpoint	new Antecedent property value
     * @exception	Exception	
     */
    public void setAntecedent(ProtocolEndpoint antecedent) {

    this.antecedent = antecedent;
    } // setAntecedent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Dependent. 
     */
    private ConditioningService dependent;
    /**
     * This method returns the IngressConditioningServiceOnEndpoint.Dependent 
     * property value. This property is described as follows: 
     * 
     * The ConditioningService which begins the traffic conditioning 
     * processing within a network device. 
     * 
     * @return	CIM_ConditioningService	current Dependent 
     * property value 
     * @exception	Exception	
     */
    public ConditioningService getDependent(){

    return (ConditioningService)dependent;
    } // getDependent

    /**
     * This method sets the IngressConditioningServiceOnEndpoint.Dependent 
     * property value. This property is described as follows: 
     * 
     * The ConditioningService which begins the traffic conditioning 
     * processing within a network device. 
     * 
     * @param	CIM_ConditioningService	new Dependent property 
     * value 
     * @exception	Exception	
     */
    public void setDependent(ConditioningService dependent) {

    this.dependent = dependent;
    } // setDependent



} // Class IngressConditioningServiceOnEndpoint
