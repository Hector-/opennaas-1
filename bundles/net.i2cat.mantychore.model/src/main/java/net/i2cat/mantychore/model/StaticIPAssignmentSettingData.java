/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class StaticIPAssignmentSettingData as well as methods 
 * comparable to the invokeMethods defined for this class. This Class 
 * implements the StaticIPAssignmentSettingDataBean Interface. The CIM class 
 * StaticIPAssignmentSettingData is described as follows: 
 * 
 * CIM_StaticIPAssignmentSettingData defines a basic IP configuration which 
 * could be statically assigned to an IPProtocolEndpoint. This class defines 
 * a partial configuration. Instances are aggregated into an instance of 
 * IPAssignmentSettingData which defines a full configuration. 
 */
    @Entity
public class StaticIPAssignmentSettingData extends IPAssignmentSettingData 
    implements Serializable {

    /**
     * This constructor creates a StaticIPAssignmentSettingDataBeanImpl Class 
     * which implements the StaticIPAssignmentSettingDataBean Interface, and 
     * encapsulates the CIM class StaticIPAssignmentSettingData in a Java 
     * Bean. The CIM class StaticIPAssignmentSettingData is described as 
     * follows: 
     * 
     * CIM_StaticIPAssignmentSettingData defines a basic IP configuration 
     * which could be statically assigned to an IPProtocolEndpoint. This 
     * class defines a partial configuration. Instances are aggregated into 
     * an instance of IPAssignmentSettingData which defines a full 
     * configuration. 
     */
    public StaticIPAssignmentSettingData(){};

    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property IPv4Address. 
     */
    private String iPv4Address;
    /**
     * This method returns the StaticIPAssignmentSettingData.iPv4Address 
     * property value. This property is described as follows: 
     * 
     * The IPv4 address that will be assigned to the ProtocolEndpoint.
     * 
     * @return	String	current iPv4Address property value
     * @exception	Exception	
     */
    public String getiPv4Address(){

    return this.iPv4Address;
    } // getiPv4Address

    /**
     * This method sets the StaticIPAssignmentSettingData.iPv4Address property 
     * value. This property is described as follows: 
     * 
     * The IPv4 address that will be assigned to the ProtocolEndpoint.
     * 
     * @param	String	new iPv4Address property value
     * @exception	Exception	
     */
    public void setiPv4Address(String iPv4Address) {

    this.iPv4Address = iPv4Address;
    } // setiPv4Address


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SubnetMask. 
     */
    private String subnetMask;
    /**
     * This method returns the StaticIPAssignmentSettingData.subnetMask 
     * property value. This property is described as follows: 
     * 
     * The subnet mask for the IPv4 address of this ProtocolEndpoint, if one 
     * is defined. 
     * 
     * @return	String	current subnetMask property value
     * @exception	Exception	
     */
    public String getsubnetMask(){

    return this.subnetMask;
    } // getsubnetMask

    /**
     * This method sets the StaticIPAssignmentSettingData.subnetMask property 
     * value. This property is described as follows: 
     * 
     * The subnet mask for the IPv4 address of this ProtocolEndpoint, if one 
     * is defined. 
     * 
     * @param	String	new subnetMask property value
     * @exception	Exception	
     */
    public void setsubnetMask(String subnetMask) {

    this.subnetMask = subnetMask;
    } // setsubnetMask


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property GatewayIPv4Address. 
     */
    private String gatewayIPv4Address;
    /**
     * This method returns the 
     * StaticIPAssignmentSettingData.gatewayIPv4Address property value. This 
     * property is described as follows: 
     * 
     * The IP v4 address of the default gateway.
     * 
     * @return	String	current gatewayIPv4Address property value
     * @exception	Exception	
     */
    public String getgatewayIPv4Address(){

    return this.gatewayIPv4Address;
    } // getgatewayIPv4Address

    /**
     * This method sets the StaticIPAssignmentSettingData.gatewayIPv4Address 
     * property value. This property is described as follows: 
     * 
     * The IP v4 address of the default gateway.
     * 
     * @param	String	new gatewayIPv4Address property value
     * @exception	Exception	
     */
    public void setgatewayIPv4Address(String gatewayIPv4Address) {

    this.gatewayIPv4Address = gatewayIPv4Address;
    } // setgatewayIPv4Address


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property GatewayIPv6Address. 
     */
    private String gatewayIPv6Address;
    /**
     * This method returns the 
     * StaticIPAssignmentSettingData.gatewayIPv6Address property value. This 
     * property is described as follows: 
     * 
     * GatewayIPv6Address is used to identify the IPv6 address of the Gateway
     * 
     * @return	String	current gatewayIPv6Address property value
     * @exception	Exception	
     */
    public String getgatewayIPv6Address(){

    return this.gatewayIPv6Address;
    } // getgatewayIPv6Address

    /**
     * This method sets the StaticIPAssignmentSettingData.gatewayIPv6Address 
     * property value. This property is described as follows: 
     * 
     * GatewayIPv6Address is used to identify the IPv6 address of the Gateway
     * 
     * @param	String	new gatewayIPv6Address property value
     * @exception	Exception	
     */
    public void setgatewayIPv6Address(String gatewayIPv6Address) {

    this.gatewayIPv6Address = gatewayIPv6Address;
    } // setgatewayIPv6Address


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property IPv6Address. 
     */
    private String iPv6Address;
    /**
     * This method returns the StaticIPAssignmentSettingData.iPv6Address 
     * property value. This property is described as follows: 
     * 
     * The IPv6 address that this ProtocolEndpoint represents.
     * 
     * @return	String	current iPv6Address property value
     * @exception	Exception	
     */
    public String getiPv6Address(){

    return this.iPv6Address;
    } // getiPv6Address

    /**
     * This method sets the StaticIPAssignmentSettingData.iPv6Address property 
     * value. This property is described as follows: 
     * 
     * The IPv6 address that this ProtocolEndpoint represents.
     * 
     * @param	String	new iPv6Address property value
     * @exception	Exception	
     */
    public void setiPv6Address(String iPv6Address) {

    this.iPv6Address = iPv6Address;
    } // setiPv6Address


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property IPv6AddressType. 
     */

    public enum IPv6AddressType{
    UNSPECIFIED,
    LOOPBACK,
    MULTICAST,
    LINK_LOCAL_UNICAST,
    GLOBAL_UNICAST,
    EMBEDDED_IPV4_ADDRESS,
    SITE_LOCAL_UNICAST,
    DMTF_RESERVED,
    VENDOR_RESERVED
    }
    private IPv6AddressType iPv6AddressType;
    /**
     * This method returns the StaticIPAssignmentSettingData.IPv6AddressType 
     * property value. This property is described as follows: 
     * 
     * IPv6AddressType identifies the type of address found in the IPv6Address 
     * property of this class. The values of this property shall be 
     * interpreted according to RFC4291, Section 2.4 
     * 
     * @return	int	current IPv6AddressType property value
     * @exception	Exception	
     */
    public IPv6AddressType getIPv6AddressType(){

    return this.iPv6AddressType;
    } // getIPv6AddressType

    /**
     * This method sets the StaticIPAssignmentSettingData.IPv6AddressType 
     * property value. This property is described as follows: 
     * 
     * IPv6AddressType identifies the type of address found in the IPv6Address 
     * property of this class. The values of this property shall be 
     * interpreted according to RFC4291, Section 2.4 
     * 
     * @param	int	new IPv6AddressType property value
     * @exception	Exception	
     */
    public void setIPv6AddressType(IPv6AddressType iPv6AddressType){

    this.iPv6AddressType = iPv6AddressType;
    } // setIPv6AddressType


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property IPv6SubnetPrefixLength. 
     */
    private int iPv6SubnetPrefixLength;
    /**
     * This method returns the 
     * StaticIPAssignmentSettingData.iPv6SubnetPrefixLength property value. 
     * This property is described as follows: 
     * 
     * IPv6SubnetPrefixLength is used to identify the prefix length of the 
     * IPv6Address property that is used to specify a subnet 
     * 
     * @return	int	current iPv6SubnetPrefixLength property value
     * @exception	Exception	
     */
    public int getiPv6SubnetPrefixLength(){

    return this.iPv6SubnetPrefixLength;
    } // getiPv6SubnetPrefixLength

    /**
     * This method sets the 
     * StaticIPAssignmentSettingData.iPv6SubnetPrefixLength property value. 
     * This property is described as follows: 
     * 
     * IPv6SubnetPrefixLength is used to identify the prefix length of the 
     * IPv6Address property that is used to specify a subnet 
     * 
     * @param	int	new iPv6SubnetPrefixLength property value
     * @exception	Exception	
     */
    public void setiPv6SubnetPrefixLength(int iPv6SubnetPrefixLength) {

    this.iPv6SubnetPrefixLength = iPv6SubnetPrefixLength;
    } // setiPv6SubnetPrefixLength



} // Class StaticIPAssignmentSettingData
