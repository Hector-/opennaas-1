/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Tue Nov 30 
 * 15:29:20 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.io.Serializable;

/**
 * This Class contains accessor and mutator methods for all properties defined
 * in the CIM class EthernetPort as well as methods comparable to the
 * invokeMethods defined for this class. This Class implements the
 * EthernetPortBean Interface. The CIM class EthernetPort is described as
 * follows:
 * 
 * Capabilities and management of an EthernetPort.
 */
public class EthernetPort extends NetworkPort implements Serializable {

	/**
	 * This constructor creates a EthernetPortBeanImpl Class which implements
	 * the EthernetPortBean Interface, and encapsulates the CIM class
	 * EthernetPort in a Java Bean. The CIM class EthernetPort is described as
	 * follows:
	 * 
	 * Capabilities and management of an EthernetPort.
	 */
	public EthernetPort() {
	};

	/* merge params */

	// FIXME It is added manually
	public void merge(EthernetPort newEthernetPort) {
		// this.setDescription(description);
	}

	/**
	 * The following constants are defined for use with the ValueMap/Values
	 * qualified property PortType.
	 */

	public enum PortType {
		UNKNOWN,
		OTHER,
		_10BASET,
		_10_100BASET,
		_100BASET,
		_1000BASET,
		_2500BASET,
		_10GBASET,
		_10GBASE_CX4,
		_100BASE_FX,
		_100BASE_SX,
		_1000BASE_SX,
		_1000BASE_LX,
		_1000BASE_CX,
		_10GBASE_SR,
		_10GBASE_SW,
		_10GBASE_LX4,
		_10GBASE_LR,
		_10GBASE_LW,
		_10GBASE_ER,
		_10GBASE_EW,
		VENDOR_RESERVED
	}

	public PortType	portType;

	/**
	 * This method returns the EthernetPort.PortType property value. This
	 * property is described as follows:
	 * 
	 * The specific mode that is currently enabled for the Port. When set to 1
	 * ("Other"), the related property OtherPortType contains a string
	 * description of the type of port.
	 * 
	 * @return short current PortType property value
	 * @exception Exception
	 */
	public PortType getPortType() {

		return this.portType;
	} // getPortType

	/**
	 * This method sets the EthernetPort.PortType property value. This property
	 * is described as follows:
	 * 
	 * The specific mode that is currently enabled for the Port. When set to 1
	 * ("Other"), the related property OtherPortType contains a string
	 * description of the type of port.
	 * 
	 * @param short new PortType property value
	 * @exception Exception
	 */
	public void setPortType(PortType portType) {

		this.portType = portType;
	} // setPortType

	/**
	 * The following constants are defined for use with the ValueMap/Values
	 * qualified property NetworkAddresses.
	 */
	private String[]	networkAddresses;

	/**
	 * This method returns the EthernetPort.NetworkAddresses property value.
	 * This property is described as follows:
	 * 
	 * Ethernet/802.3 MAC addresses formatted as twelve hexadecimal digits (for
	 * example, "010203040506"), with each pair representing one of the six
	 * octets of the MAC address in "canonical" bit order. (Therefore, the Group
	 * address bit is found in the low order bit of the first character of the
	 * string.)
	 * 
	 * @return String[] current NetworkAddresses property value
	 * @exception Exception
	 */
	public String[] getNetworkAddresses() {

		return (String[]) networkAddresses;
	} // getNetworkAddresses

	/**
	 * This method sets the EthernetPort.NetworkAddresses property value. This
	 * property is described as follows:
	 * 
	 * Ethernet/802.3 MAC addresses formatted as twelve hexadecimal digits (for
	 * example, "010203040506"), with each pair representing one of the six
	 * octets of the MAC address in "canonical" bit order. (Therefore, the Group
	 * address bit is found in the low order bit of the first character of the
	 * string.)
	 * 
	 * @param String
	 *            [] new NetworkAddresses property value
	 * @exception Exception
	 */
	public void setNetworkAddresses(String[] networkAddresses) {

		this.networkAddresses = networkAddresses;
	} // setNetworkAddresses

	/**
	 * The following constants are defined for use with the ValueMap/Values
	 * qualified property MaxDataSize.
	 */
	private int	maxDataSize;

	/**
	 * This method returns the EthernetPort.MaxDataSize property value. This
	 * property is described as follows:
	 * 
	 * The maximum size of the INFO (non-MAC) field that will be received or
	 * transmitted.
	 * 
	 * @return int current MaxDataSize property value
	 * @exception Exception
	 */
	public int getMaxDataSize() {

		return this.maxDataSize;
	} // getMaxDataSize

	/**
	 * This method sets the EthernetPort.MaxDataSize property value. This
	 * property is described as follows:
	 * 
	 * The maximum size of the INFO (non-MAC) field that will be received or
	 * transmitted.
	 * 
	 * @param int new MaxDataSize property value
	 * @exception Exception
	 */
	public void setMaxDataSize(int maxDataSize) {

		this.maxDataSize = maxDataSize;
	} // setMaxDataSize

	/**
	 * The following constants are defined for use with the ValueMap/Values
	 * qualified property Capabilities.
	 */

	public enum Capabilities {
		UNKNOWN,
		OTHER,
		ALERTONLAN,
		WAKEONLAN,
		FAILOVER,
		LOADBALANCING
	}

	public Capabilities	capabilities;

	/**
	 * This method returns the EthernetPort.Capabilities property value. This
	 * property is described as follows:
	 * 
	 * Capabilities of the EthernetPort. For example, the Device might support
	 * AlertOnLan, WakeOnLan, Load Balancing, or FailOver. If failover or load
	 * balancing capabilities are listed, a SpareGroup (failover) or
	 * ExtraCapacityGroup (load balancing) should also be defined to completely
	 * describe the capability.
	 * 
	 * @return short current Capabilities property value
	 * @exception Exception
	 */
	public Capabilities getCapabilities() {

		return this.capabilities;
	} // getCapabilities

	/**
	 * This method sets the EthernetPort.Capabilities property value. This
	 * property is described as follows:
	 * 
	 * Capabilities of the EthernetPort. For example, the Device might support
	 * AlertOnLan, WakeOnLan, Load Balancing, or FailOver. If failover or load
	 * balancing capabilities are listed, a SpareGroup (failover) or
	 * ExtraCapacityGroup (load balancing) should also be defined to completely
	 * describe the capability.
	 * 
	 * @param short new Capabilities property value
	 * @exception Exception
	 */
	public void setCapabilities(Capabilities capabilities) {

		this.capabilities = capabilities;
	} // setCapabilities

	/**
	 * The following constants are defined for use with the ValueMap/Values
	 * qualified property CapabilityDescriptions.
	 */
	private String[]	capabilityDescriptions;

	/**
	 * This method returns the EthernetPort.CapabilityDescriptions property
	 * value. This property is described as follows:
	 * 
	 * An array of free-form strings that provides more detailed explanations
	 * for any of the EthernetPort features that are indicated in the
	 * Capabilities array. Note, each entry of this array is related to the
	 * entry in the Capabilities array that is located at the same index.
	 * 
	 * @return String[] current CapabilityDescriptions property value
	 * @exception Exception
	 */
	public String[] getCapabilityDescriptions() {

		return this.capabilityDescriptions;
	} // getCapabilityDescriptions

	/**
	 * This method sets the EthernetPort.CapabilityDescriptions property value.
	 * This property is described as follows:
	 * 
	 * An array of free-form strings that provides more detailed explanations
	 * for any of the EthernetPort features that are indicated in the
	 * Capabilities array. Note, each entry of this array is related to the
	 * entry in the Capabilities array that is located at the same index.
	 * 
	 * @param String
	 *            [] new CapabilityDescriptions property value
	 * @exception Exception
	 */
	public void setCapabilityDescriptions(String[] capabilityDescriptions) {

		this.capabilityDescriptions = capabilityDescriptions;
	} // setCapabilityDescriptions

	/**
	 * The following constants are defined for use with the ValueMap/Values
	 * qualified property EnabledCapabilities.
	 */

	public enum EnabledCapabilities {
		UNKNOWN,
		OTHER,
		ALERTONLAN,
		WAKEONLAN,
		FAILOVER,
		LOADBALANCING
	}

	public EnabledCapabilities	enabledCapabilities;

	/**
	 * This method returns the EthernetPort.EnabledCapabilities property value.
	 * This property is described as follows:
	 * 
	 * Specifies which capabilities are enabled from the list of all supported
	 * ones, which are defined in the Capabilities array.
	 * 
	 * @return short current EnabledCapabilities property value
	 * @exception Exception
	 */
	public EnabledCapabilities getEnabledCapabilities() {

		return this.enabledCapabilities;
	} // getEnabledCapabilities

	/**
	 * This method sets the EthernetPort.EnabledCapabilities property value.
	 * This property is described as follows:
	 * 
	 * Specifies which capabilities are enabled from the list of all supported
	 * ones, which are defined in the Capabilities array.
	 * 
	 * @param short new EnabledCapabilities property value
	 * @exception Exception
	 */
	public void setEnabledCapabilities(EnabledCapabilities
			enabledCapabilities) {

		this.enabledCapabilities = enabledCapabilities;
	} // setEnabledCapabilities

	/**
	 * The following constants are defined for use with the ValueMap/Values
	 * qualified property OtherEnabledCapabilities.
	 */
	private String[]	otherEnabledCapabilities;

	/**
	 * This method returns the EthernetPort.OtherEnabledCapabilities property
	 * value. This property is described as follows:
	 * 
	 * An array of free-form strings that provides more detailed explanations
	 * for any of the enabled capabilities that are specified as 'Other'.
	 * 
	 * @return String[] current OtherEnabledCapabilities property value
	 * @exception Exception
	 */
	public String[] getOtherEnabledCapabilities() {

		return this.otherEnabledCapabilities;
	} // getOtherEnabledCapabilities

	/**
	 * This method sets the EthernetPort.OtherEnabledCapabilities property
	 * value. This property is described as follows:
	 * 
	 * An array of free-form strings that provides more detailed explanations
	 * for any of the enabled capabilities that are specified as 'Other'.
	 * 
	 * @param String
	 *            [] new OtherEnabledCapabilities property value
	 * @exception Exception
	 */
	public void setOtherEnabledCapabilities(String[] otherEnabledCapabilities) {

		this.otherEnabledCapabilities = otherEnabledCapabilities;
	} // setOtherEnabledCapabilities

} // Class EthernetPort
