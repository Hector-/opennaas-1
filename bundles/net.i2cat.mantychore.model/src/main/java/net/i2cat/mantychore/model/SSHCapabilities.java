/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class SSHCapabilities as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * SSHCapabilitiesBean Interface. The CIM class SSHCapabilities is described 
 * as follows: 
 * 
 * A subclass of ProtocolServiceCapabilities that defines the capabilities of 
 * an SSH Service. An instance of CIM_SSHCapabilities is associated with an 
 * instance of CIM_ProtocolService via the CIM_ElementCapabilities 
 * association. 
 */
    @Entity
public class SSHCapabilities extends ProtocolServiceCapabilities implements 
    Serializable {

    /**
     * This constructor creates a SSHCapabilitiesBeanImpl Class which 
     * implements the SSHCapabilitiesBean Interface, and encapsulates the CIM 
     * class SSHCapabilities in a Java Bean. The CIM class SSHCapabilities is 
     * described as follows: 
     * 
     * A subclass of ProtocolServiceCapabilities that defines the capabilities 
     * of an SSH Service. An instance of CIM_SSHCapabilities is associated 
     * with an instance of CIM_ProtocolService via the 
     * CIM_ElementCapabilities association. 
     */
    public SSHCapabilities(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedSSHVersions. 
     */

    public enum SupportedSSHVersions{
    UNKNOWN,
    OTHER,
    SSHV1,
    SSHV2,
    DMTF_RESERVED,
    VENDOR_RESERVED
    }
    private SupportedSSHVersions supportedSSHVersions;
    /**
     * This method returns the SSHCapabilities.SupportedSSHVersions property 
     * value. This property is described as follows: 
     * 
     * An array of integers indicating the version or versions of SSH protocol 
     * that the SSH service supports. 
     * 
     * @return	int	current SupportedSSHVersions property value
     * @exception	Exception	
     */
    public SupportedSSHVersions getSupportedSSHVersions(){

    return this.supportedSSHVersions;
    } // getSupportedSSHVersions

    /**
     * This method sets the SSHCapabilities.SupportedSSHVersions property 
     * value. This property is described as follows: 
     * 
     * An array of integers indicating the version or versions of SSH protocol 
     * that the SSH service supports. 
     * 
     * @param	int	new SupportedSSHVersions property value
     * @exception	Exception	
     */
    public void setSupportedSSHVersions(SupportedSSHVersions 
	supportedSSHVersions){

    this.supportedSSHVersions = supportedSSHVersions;
    } // setSupportedSSHVersions


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherSupportedSSHVersion. 
     */
    private String otherSupportedSSHVersion;
    /**
     * This method returns the SSHCapabilities.otherSupportedSSHVersion 
     * property value. This property is described as follows: 
     * 
     * If the SupportedSSHVersions property is set to 1, "Other" then free 
     * form string providing more information about supported SSH protocols. 
     * If not set to 1, this string has no meaning. 
     * 
     * @return	String	current otherSupportedSSHVersion property 
     * value 
     * @exception	Exception	
     */
    public String getotherSupportedSSHVersion(){

    return this.otherSupportedSSHVersion;
    } // getotherSupportedSSHVersion

    /**
     * This method sets the SSHCapabilities.otherSupportedSSHVersion property 
     * value. This property is described as follows: 
     * 
     * If the SupportedSSHVersions property is set to 1, "Other" then free 
     * form string providing more information about supported SSH protocols. 
     * If not set to 1, this string has no meaning. 
     * 
     * @param	String	new otherSupportedSSHVersion property value
     * @exception	Exception	
     */
    public void setotherSupportedSSHVersion(String otherSupportedSSHVersion) 
	{

    this.otherSupportedSSHVersion = otherSupportedSSHVersion;
    } // setotherSupportedSSHVersion


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedEncryptionAlgorithms. 
     */

    public enum SupportedEncryptionAlgorithms{
    UNKNOWN,
    OTHER,
    DES,
    DES3,
    RC4,
    IDEA,
    SKIPJACK,
    DMTF_RESERVED,
    VENDOR_RESERVED
    }
    private SupportedEncryptionAlgorithms supportedEncryptionAlgorithms;
    /**
     * This method returns the SSHCapabilities.SupportedEncryptionAlgorithms 
     * property value. This property is described as follows: 
     * 
     * An array of integers indicating the encryption algorithms that the SSH 
     * service supports. 
     * 
     * @return	int	current SupportedEncryptionAlgorithms 
     * property value 
     * @exception	Exception	
     */
    public SupportedEncryptionAlgorithms getSupportedEncryptionAlgorithms(){

    return this.supportedEncryptionAlgorithms;
    } // getSupportedEncryptionAlgorithms

    /**
     * This method sets the SSHCapabilities.SupportedEncryptionAlgorithms 
     * property value. This property is described as follows: 
     * 
     * An array of integers indicating the encryption algorithms that the SSH 
     * service supports. 
     * 
     * @param	int	new SupportedEncryptionAlgorithms property 
     * value 
     * @exception	Exception	
     */
    public void setSupportedEncryptionAlgorithms(SupportedEncryptionAlgorithms 
	supportedEncryptionAlgorithms){

    this.supportedEncryptionAlgorithms = supportedEncryptionAlgorithms;
    } // setSupportedEncryptionAlgorithms


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherSupportedEncryptionAlgorithm. 
     */
    private String otherSupportedEncryptionAlgorithm;
    /**
     * This method returns the 
     * SSHCapabilities.otherSupportedEncryptionAlgorithm property value. This 
     * property is described as follows: 
     * 
     * If the SupportedEncryptionAlgorithms property is set to 1, "Other" then 
     * free form string providing more information about supported 
     * algorithms. If not set to 1, this string has no meaning. 
     * 
     * @return	String	current otherSupportedEncryptionAlgorithm 
     * property value 
     * @exception	Exception	
     */
    public String getotherSupportedEncryptionAlgorithm(){

    return this.otherSupportedEncryptionAlgorithm;
    } // getotherSupportedEncryptionAlgorithm

    /**
     * This method sets the SSHCapabilities.otherSupportedEncryptionAlgorithm 
     * property value. This property is described as follows: 
     * 
     * If the SupportedEncryptionAlgorithms property is set to 1, "Other" then 
     * free form string providing more information about supported 
     * algorithms. If not set to 1, this string has no meaning. 
     * 
     * @param	String	new otherSupportedEncryptionAlgorithm 
     * property value 
     * @exception	Exception	
     */
    public void setotherSupportedEncryptionAlgorithm(String 
	otherSupportedEncryptionAlgorithm) {

    this.otherSupportedEncryptionAlgorithm = 
	otherSupportedEncryptionAlgorithm;
    } // setotherSupportedEncryptionAlgorithm



} // Class SSHCapabilities
