/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Nov 29 
 * 11:50:57 CET 2010. 
 */

package net.i2cat.mantychore.model;

import javax.wbem.client.*;
import javax.wbem.cim.*;
import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class StatisticalSetting as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * StatisticalSettingBean Interface. The CIM class StatisticalSetting is 
 * described as follows: 
 * 
 * CIM_StatisticalSetting is the class for setting the collection criteria of 
 * statistical data and/or metrics applicable to one or more ManagedElements. 
 */
public class StatisticalSetting extends SettingData implements Serializable 
    {

    /**
     * This constructor creates a StatisticalSettingBeanImpl Class which 
     * implements the StatisticalSettingBean Interface, and encapsulates the 
     * CIM class StatisticalSetting in a Java Bean. The CIM class 
     * StatisticalSetting is described as follows: 
     * 
     * CIM_StatisticalSetting is the class for setting the collection criteria 
     * of statistical data and/or metrics applicable to one or more 
     * ManagedElements. 
     */
    public StatisticalSetting(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property StartStatisticTime. 
     */
    private CIMDateTime startStatisticTime;
    /**
     * This method returns the StatisticalSetting.StartStatisticTime property 
     * value. This property is described as follows: 
     * 
     * The time, relative to managed element where the statistic is to be 
     * collected, when the first measurement is to be taken. 
     * 
     * @return	CIMDateTime	current StartStatisticTime property 
     * value 
     * @exception	Exception	
     */
    public CIMDateTime getStartStatisticTime(){

    return this.startStatisticTime;
    } // getStartStatisticTime

    /**
     * This method sets the StatisticalSetting.StartStatisticTime property 
     * value. This property is described as follows: 
     * 
     * The time, relative to managed element where the statistic is to be 
     * collected, when the first measurement is to be taken. 
     * 
     * @param	CIMDateTime	new StartStatisticTime property value
     * @exception	Exception	
     */
    public void setStartStatisticTime(CIMDateTime startStatisticTime) {

    this.startStatisticTime = startStatisticTime;
    } // setStartStatisticTime


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EndStatisticTime. 
     */
    private CIMDateTime endStatisticTime;
    /**
     * This method returns the StatisticalSetting.EndStatisticTime property 
     * value. This property is described as follows: 
     * 
     * The time, relative to managed element where the statistic is to be 
     * collected, when the measurement is to end. 
     * 
     * @return	CIMDateTime	current EndStatisticTime property 
     * value 
     * @exception	Exception	
     */
    public CIMDateTime getEndStatisticTime(){

    return this.endStatisticTime;
    } // getEndStatisticTime

    /**
     * This method sets the StatisticalSetting.EndStatisticTime property 
     * value. This property is described as follows: 
     * 
     * The time, relative to managed element where the statistic is to be 
     * collected, when the measurement is to end. 
     * 
     * @param	CIMDateTime	new EndStatisticTime property value
     * @exception	Exception	
     */
    public void setEndStatisticTime(CIMDateTime endStatisticTime) {

    this.endStatisticTime = endStatisticTime;
    } // setEndStatisticTime


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SampleInterval. 
     */
    private CIMDateTime sampleInterval;
    /**
     * This method returns the StatisticalSetting.SampleInterval property 
     * value. This property is described as follows: 
     * 
     * Some statistics are sampled at consistent time intervals. This property 
     * when set indicates the desired minimum time that new statistics should 
     * be polled or calculated. 
     * 
     * @return	CIMDateTime	current SampleInterval property value
     * @exception	Exception	
     */
    public CIMDateTime getSampleInterval(){

    return this.sampleInterval;
    } // getSampleInterval

    /**
     * This method sets the StatisticalSetting.SampleInterval property value. 
     * This property is described as follows: 
     * 
     * Some statistics are sampled at consistent time intervals. This property 
     * when set indicates the desired minimum time that new statistics should 
     * be polled or calculated. 
     * 
     * @param	CIMDateTime	new SampleInterval property value
     * @exception	Exception	
     */
    public void setSampleInterval(CIMDateTime sampleInterval) {

    this.sampleInterval = sampleInterval;
    } // setSampleInterval



} // Class StatisticalSetting
