/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class AdministrativeDistance as well as methods comparable to 
 * the invokeMethods defined for this class. This Class implements the 
 * AdministrativeDistanceBean Interface. The CIM class AdministrativeDistance 
 * is described as follows: 
 * 
 * Information in this class affects the choice of one protocol over another, 
 * when two protocols learn the same route. Properties define the preference 
 * of a protocol, called its distance. The lower the distance, the higher the 
 * preference for that protocol. This class affects ALL routes and contains 
 * the default distances. Specific administrative distances relative to an 
 * individual route and Forwarding Service are defined in the 
 * NextHopForwardedByService association, its AdminDistance property. 
 * AdministrativeDistance, being a global object, is weak to the AdminDomain 
 * that contains it. Hence, the AdminDomain keys are propagated to this 
 * class. 
 */
    @Entity
public class AdministrativeDistance extends LogicalElement implements 
    Serializable {

    /**
     * This constructor creates a AdministrativeDistanceBeanImpl Class which 
     * implements the AdministrativeDistanceBean Interface, and encapsulates 
     * the CIM class AdministrativeDistance in a Java Bean. The CIM class 
     * AdministrativeDistance is described as follows: 
     * 
     * Information in this class affects the choice of one protocol over 
     * another, when two protocols learn the same route. Properties define 
     * the preference of a protocol, called its distance. The lower the 
     * distance, the higher the preference for that protocol. This class 
     * affects ALL routes and contains the default distances. Specific 
     * administrative distances relative to an individual route and 
     * Forwarding Service are defined in the NextHopForwardedByService 
     * association, its AdminDistance property. AdministrativeDistance, being 
     * a global object, is weak to the AdminDomain that contains it. Hence, 
     * the AdminDomain keys are propagated to this class. 
     */
    public AdministrativeDistance(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SystemCreationClassName. 
     */
    private String systemCreationClassName;
    /**
     * This method returns the AdministrativeDistance.systemCreationClassName 
     * property value. This property is described as follows: 
     * 
     * The scoping AdminDomain's CreationClassName.
     * 
     * @return	String	current systemCreationClassName property 
     * value 
     * @exception	Exception	
     */
    public String getsystemCreationClassName(){

    return this.systemCreationClassName;
    } // getsystemCreationClassName

    /**
     * This method sets the AdministrativeDistance.systemCreationClassName 
     * property value. This property is described as follows: 
     * 
     * The scoping AdminDomain's CreationClassName.
     * 
     * @param	String	new systemCreationClassName property value
     * @exception	Exception	
     */
    public void setsystemCreationClassName(String systemCreationClassName) {

    this.systemCreationClassName = systemCreationClassName;
    } // setsystemCreationClassName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SystemName. 
     */
    private String systemName;
    /**
     * This method returns the AdministrativeDistance.systemName property 
     * value. This property is described as follows: 
     * 
     * The scoping AdminDomain's Name.
     * 
     * @return	String	current systemName property value
     * @exception	Exception	
     */
    public String getsystemName(){

    return this.systemName;
    } // getsystemName

    /**
     * This method sets the AdministrativeDistance.systemName property value. 
     * This property is described as follows: 
     * 
     * The scoping AdminDomain's Name.
     * 
     * @param	String	new systemName property value
     * @exception	Exception	
     */
    public void setsystemName(String systemName) {

    this.systemName = systemName;
    } // setsystemName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property CreationClassName. 
     */
    private String creationClassName;
    /**
     * This method returns the AdministrativeDistance.creationClassName 
     * property value. This property is described as follows: 
     * 
     * CreationClassName indicates the name of the class or the subclass used 
     * in the creation of an instance. When used with the other key 
     * properties of this class, this property allows all instances of this 
     * class and its subclasses to be uniquely identified. 
     * 
     * @return	String	current creationClassName property value
     * @exception	Exception	
     */
    public String getcreationClassName(){

    return this.creationClassName;
    } // getcreationClassName

    /**
     * This method sets the AdministrativeDistance.creationClassName property 
     * value. This property is described as follows: 
     * 
     * CreationClassName indicates the name of the class or the subclass used 
     * in the creation of an instance. When used with the other key 
     * properties of this class, this property allows all instances of this 
     * class and its subclasses to be uniquely identified. 
     * 
     * @param	String	new creationClassName property value
     * @exception	Exception	
     */
    public void setcreationClassName(String creationClassName) {

    this.creationClassName = creationClassName;
    } // setcreationClassName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Name. 
     */
    private String name;
    /**
     * This method returns the AdministrativeDistance.name property value. 
     * This property is described as follows: 
     * 
     * This is the name of the AdministrativeDistance class.
     * 
     * @return	String	current name property value
     * @exception	Exception	
     */
    public String getname(){

    return (String)name;
    } // getname

    /**
     * This method sets the AdministrativeDistance.name property value. This 
     * property is described as follows: 
     * 
     * This is the name of the AdministrativeDistance class.
     * 
     * @param	String	new name property value
     * @exception	Exception	
     */
    public void setname(String name) {

    this.name = name;
    } // setname


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property DirectConnect. 
     */
    private short directConnect;
    /**
     * This method returns the AdministrativeDistance.directConnect property 
     * value. This property is described as follows: 
     * 
     * The distance for directly connected peers. It has a default value of 0.
     * 
     * @return	short	current directConnect property value
     * @exception	Exception	
     */
    public short getdirectConnect(){

    return this.directConnect;
    } // getdirectConnect

    /**
     * This method sets the AdministrativeDistance.directConnect property 
     * value. This property is described as follows: 
     * 
     * The distance for directly connected peers. It has a default value of 0.
     * 
     * @param	short	new directConnect property value
     * @exception	Exception	
     */
    public void setdirectConnect(short directConnect) {

    this.directConnect = directConnect;
    } // setdirectConnect


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Static. 
     */
    private short _static;
    /**
     * This method returns the AdministrativeDistance._static property value. 
     * This property is described as follows: 
     * 
     * The distance for staticly connected peers. It has a default value of 1.
     * 
     * @return	short	current _static property value
     * @exception	Exception	
     */
    public short get_static(){

    return this._static;
    } // get_static

    /**
     * This method sets the AdministrativeDistance._static property value. 
     * This property is described as follows: 
     * 
     * The distance for staticly connected peers. It has a default value of 1.
     * 
     * @param	short	new _static property value
     * @exception	Exception	
     */
    public void set_static(short _static) {

    this._static = _static;
    } // set_static


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EBGP. 
     */
    private short eBGP;
    /**
     * This method returns the AdministrativeDistance.eBGP property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using EBGP. It has a default value of 20.
     * 
     * @return	short	current eBGP property value
     * @exception	Exception	
     */
    public short geteBGP(){

    return this.eBGP;
    } // geteBGP

    /**
     * This method sets the AdministrativeDistance.eBGP property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using EBGP. It has a default value of 20.
     * 
     * @param	short	new eBGP property value
     * @exception	Exception	
     */
    public void seteBGP(short eBGP) {

    this.eBGP = eBGP;
    } // seteBGP


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EIGRPInternal. 
     */
    private short eIGRPInternal;
    /**
     * This method returns the AdministrativeDistance.eIGRPInternal property 
     * value. This property is described as follows: 
     * 
     * The distance for peers using internal EIGRP. It has a default value of 
     * 90. 
     * 
     * @return	short	current eIGRPInternal property value
     * @exception	Exception	
     */
    public short geteIGRPInternal(){

    return this.eIGRPInternal;
    } // geteIGRPInternal

    /**
     * This method sets the AdministrativeDistance.eIGRPInternal property 
     * value. This property is described as follows: 
     * 
     * The distance for peers using internal EIGRP. It has a default value of 
     * 90. 
     * 
     * @param	short	new eIGRPInternal property value
     * @exception	Exception	
     */
    public void seteIGRPInternal(short eIGRPInternal) {

    this.eIGRPInternal = eIGRPInternal;
    } // seteIGRPInternal


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property IGRP. 
     */
    private short iGRP;
    /**
     * This method returns the AdministrativeDistance.iGRP property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using IGRP. It has a default value of 100.
     * 
     * @return	short	current iGRP property value
     * @exception	Exception	
     */
    public short getiGRP(){

    return this.iGRP;
    } // getiGRP

    /**
     * This method sets the AdministrativeDistance.iGRP property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using IGRP. It has a default value of 100.
     * 
     * @param	short	new iGRP property value
     * @exception	Exception	
     */
    public void setiGRP(short iGRP) {

    this.iGRP = iGRP;
    } // setiGRP


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OSPF. 
     */
    private short oSPF;
    /**
     * This method returns the AdministrativeDistance.oSPF property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using OSPF. It has a default value of 110.
     * 
     * @return	short	current oSPF property value
     * @exception	Exception	
     */
    public short getoSPF(){

    return this.oSPF;
    } // getoSPF

    /**
     * This method sets the AdministrativeDistance.oSPF property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using OSPF. It has a default value of 110.
     * 
     * @param	short	new oSPF property value
     * @exception	Exception	
     */
    public void setoSPF(short oSPF) {

    this.oSPF = oSPF;
    } // setoSPF


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ISIS. 
     */
    private short iSIS;
    /**
     * This method returns the AdministrativeDistance.iSIS property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using ISIS. It has a default value of 115.
     * 
     * @return	short	current iSIS property value
     * @exception	Exception	
     */
    public short getiSIS(){

    return this.iSIS;
    } // getiSIS

    /**
     * This method sets the AdministrativeDistance.iSIS property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using ISIS. It has a default value of 115.
     * 
     * @param	short	new iSIS property value
     * @exception	Exception	
     */
    public void setiSIS(short iSIS) {

    this.iSIS = iSIS;
    } // setiSIS


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RIP. 
     */
    private short rIP;
    /**
     * This method returns the AdministrativeDistance.rIP property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using RIP. It has a default value of 120.
     * 
     * @return	short	current rIP property value
     * @exception	Exception	
     */
    public short getrIP(){

    return this.rIP;
    } // getrIP

    /**
     * This method sets the AdministrativeDistance.rIP property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using RIP. It has a default value of 120.
     * 
     * @param	short	new rIP property value
     * @exception	Exception	
     */
    public void setrIP(short rIP) {

    this.rIP = rIP;
    } // setrIP


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EGP. 
     */
    private short eGP;
    /**
     * This method returns the AdministrativeDistance.eGP property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using EGP. It has a default value of 140.
     * 
     * @return	short	current eGP property value
     * @exception	Exception	
     */
    public short geteGP(){

    return this.eGP;
    } // geteGP

    /**
     * This method sets the AdministrativeDistance.eGP property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using EGP. It has a default value of 140.
     * 
     * @param	short	new eGP property value
     * @exception	Exception	
     */
    public void seteGP(short eGP) {

    this.eGP = eGP;
    } // seteGP


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EIGRPExternal. 
     */
    private short eIGRPExternal;
    /**
     * This method returns the AdministrativeDistance.eIGRPExternal property 
     * value. This property is described as follows: 
     * 
     * The distance for peers using external EIGRP. It has a default value of 
     * 170. 
     * 
     * @return	short	current eIGRPExternal property value
     * @exception	Exception	
     */
    public short geteIGRPExternal(){

    return this.eIGRPExternal;
    } // geteIGRPExternal

    /**
     * This method sets the AdministrativeDistance.eIGRPExternal property 
     * value. This property is described as follows: 
     * 
     * The distance for peers using external EIGRP. It has a default value of 
     * 170. 
     * 
     * @param	short	new eIGRPExternal property value
     * @exception	Exception	
     */
    public void seteIGRPExternal(short eIGRPExternal) {

    this.eIGRPExternal = eIGRPExternal;
    } // seteIGRPExternal


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property IBGP. 
     */
    private short iBGP;
    /**
     * This method returns the AdministrativeDistance.iBGP property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using IBGP. It has a default value of 200.
     * 
     * @return	short	current iBGP property value
     * @exception	Exception	
     */
    public short getiBGP(){

    return this.iBGP;
    } // getiBGP

    /**
     * This method sets the AdministrativeDistance.iBGP property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using IBGP. It has a default value of 200.
     * 
     * @param	short	new iBGP property value
     * @exception	Exception	
     */
    public void setiBGP(short iBGP) {

    this.iBGP = iBGP;
    } // setiBGP


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property BGPLocal. 
     */
    private short bGPLocal;
    /**
     * This method returns the AdministrativeDistance.bGPLocal property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using BGP locally. It has a default value of 
     * 200. 
     * 
     * @return	short	current bGPLocal property value
     * @exception	Exception	
     */
    public short getbGPLocal(){

    return this.bGPLocal;
    } // getbGPLocal

    /**
     * This method sets the AdministrativeDistance.bGPLocal property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using BGP locally. It has a default value of 
     * 200. 
     * 
     * @param	short	new bGPLocal property value
     * @exception	Exception	
     */
    public void setbGPLocal(short bGPLocal) {

    this.bGPLocal = bGPLocal;
    } // setbGPLocal


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Unknown. 
     */
    private short unknown;
    /**
     * This method returns the AdministrativeDistance.unknown property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using an unknown protocol. It has a default 
     * value of 255. 
     * 
     * @return	short	current unknown property value
     * @exception	Exception	
     */
    public short getunknown(){

    return this.unknown;
    } // getunknown

    /**
     * This method sets the AdministrativeDistance.unknown property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using an unknown protocol. It has a default 
     * value of 255. 
     * 
     * @param	short	new unknown property value
     * @exception	Exception	
     */
    public void setunknown(short unknown) {

    this.unknown = unknown;
    } // setunknown



} // Class AdministrativeDistance
