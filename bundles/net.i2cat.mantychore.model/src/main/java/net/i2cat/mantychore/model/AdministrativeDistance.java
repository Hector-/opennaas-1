/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Nov 29 
 * 11:50:57 CET 2010. 
 */

package net.i2cat.mantychore.model;

import javax.wbem.client.*;
import javax.wbem.cim.*;
import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class AdministrativeDistance as well as methods comparable to 
 * the invokeMethods defined for this class. This Class implements the 
 * AdministrativeDistanceBean Interface. The CIM class AdministrativeDistance 
 * is described as follows: 
 * 
 * Information in this class affects the choice of one protocol over another, 
 * when two protocols learn the same route. Properties define the preference 
 * of a protocol, called its distance. The lower the distance, the higher the 
 * preference for that protocol. This class affects ALL routes and contains 
 * the default distances. Specific administrative distances relative to an 
 * individual route and Forwarding Service are defined in the 
 * NextHopForwardedByService association, its AdminDistance property. 
 * AdministrativeDistance, being a global object, is weak to the AdminDomain 
 * that contains it. Hence, the AdminDomain keys are propagated to this 
 * class. 
 */
public class AdministrativeDistance extends LogicalElement implements 
    Serializable {

    /**
     * This constructor creates a AdministrativeDistanceBeanImpl Class which 
     * implements the AdministrativeDistanceBean Interface, and encapsulates 
     * the CIM class AdministrativeDistance in a Java Bean. The CIM class 
     * AdministrativeDistance is described as follows: 
     * 
     * Information in this class affects the choice of one protocol over 
     * another, when two protocols learn the same route. Properties define 
     * the preference of a protocol, called its distance. The lower the 
     * distance, the higher the preference for that protocol. This class 
     * affects ALL routes and contains the default distances. Specific 
     * administrative distances relative to an individual route and 
     * Forwarding Service are defined in the NextHopForwardedByService 
     * association, its AdminDistance property. AdministrativeDistance, being 
     * a global object, is weak to the AdminDomain that contains it. Hence, 
     * the AdminDomain keys are propagated to this class. 
     */
    public AdministrativeDistance(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SystemCreationClassName. 
     */
    private String systemCreationClassName;
    /**
     * This method returns the AdministrativeDistance.SystemCreationClassName 
     * property value. This property is described as follows: 
     * 
     * The scoping AdminDomain's CreationClassName.
     * 
     * @return	String	current SystemCreationClassName property 
     * value 
     * @exception	Exception	
     */
    public String getSystemCreationClassName(){

    return this.systemCreationClassName;
    } // getSystemCreationClassName

    /**
     * This method sets the AdministrativeDistance.SystemCreationClassName 
     * property value. This property is described as follows: 
     * 
     * The scoping AdminDomain's CreationClassName.
     * 
     * @param	String	new SystemCreationClassName property value
     * @exception	Exception	
     */
    public void setSystemCreationClassName(String systemCreationClassName) {

    this.systemCreationClassName = systemCreationClassName;
    } // setSystemCreationClassName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SystemName. 
     */
    private String systemName;
    /**
     * This method returns the AdministrativeDistance.SystemName property 
     * value. This property is described as follows: 
     * 
     * The scoping AdminDomain's Name.
     * 
     * @return	String	current SystemName property value
     * @exception	Exception	
     */
    public String getSystemName(){

    return this.systemName;
    } // getSystemName

    /**
     * This method sets the AdministrativeDistance.SystemName property value. 
     * This property is described as follows: 
     * 
     * The scoping AdminDomain's Name.
     * 
     * @param	String	new SystemName property value
     * @exception	Exception	
     */
    public void setSystemName(String systemName) {

    this.systemName = systemName;
    } // setSystemName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property CreationClassName. 
     */
    private String creationClassName;
    /**
     * This method returns the AdministrativeDistance.CreationClassName 
     * property value. This property is described as follows: 
     * 
     * CreationClassName indicates the name of the class or the subclass used 
     * in the creation of an instance. When used with the other key 
     * properties of this class, this property allows all instances of this 
     * class and its subclasses to be uniquely identified. 
     * 
     * @return	String	current CreationClassName property value
     * @exception	Exception	
     */
    public String getCreationClassName(){

    return this.creationClassName;
    } // getCreationClassName

    /**
     * This method sets the AdministrativeDistance.CreationClassName property 
     * value. This property is described as follows: 
     * 
     * CreationClassName indicates the name of the class or the subclass used 
     * in the creation of an instance. When used with the other key 
     * properties of this class, this property allows all instances of this 
     * class and its subclasses to be uniquely identified. 
     * 
     * @param	String	new CreationClassName property value
     * @exception	Exception	
     */
    public void setCreationClassName(String creationClassName) {

    this.creationClassName = creationClassName;
    } // setCreationClassName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Name. 
     */
    private String name;
    /**
     * This method returns the AdministrativeDistance.Name property value. 
     * This property is described as follows: 
     * 
     * This is the name of the AdministrativeDistance class.
     * 
     * @return	String	current Name property value
     * @exception	Exception	
     */
    public String getName(){

    return (String)name;
    } // getName

    /**
     * This method sets the AdministrativeDistance.Name property value. This 
     * property is described as follows: 
     * 
     * This is the name of the AdministrativeDistance class.
     * 
     * @param	String	new Name property value
     * @exception	Exception	
     */
    public void setName(String name) {

    this.name = name;
    } // setName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property DirectConnect. 
     */
    private Byte directConnect;
    /**
     * This method returns the AdministrativeDistance.DirectConnect property 
     * value. This property is described as follows: 
     * 
     * The distance for directly connected peers. It has a default value of 0.
     * 
     * @return	Byte	current DirectConnect property value
     * @exception	Exception	
     */
    public Byte getDirectConnect(){

    return this.directConnect;
    } // getDirectConnect

    /**
     * This method sets the AdministrativeDistance.DirectConnect property 
     * value. This property is described as follows: 
     * 
     * The distance for directly connected peers. It has a default value of 0.
     * 
     * @param	Byte	new DirectConnect property value
     * @exception	Exception	
     */
    public void setDirectConnect(Byte directConnect) {

    this.directConnect = directConnect;
    } // setDirectConnect


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Static. 
     */
    private Byte _static;
    /**
     * This method returns the AdministrativeDistance.Static property value. 
     * This property is described as follows: 
     * 
     * The distance for staticly connected peers. It has a default value of 1.
     * 
     * @return	Byte	current Static property value
     * @exception	Exception	
     */
    public Byte getStatic(){

    return this._static;
    } // getStatic

    /**
     * This method sets the AdministrativeDistance.Static property value. This 
     * property is described as follows: 
     * 
     * The distance for staticly connected peers. It has a default value of 1.
     * 
     * @param	Byte	new Static property value
     * @exception	Exception	
     */
    public void setStatic(Byte _static) {

    this._static = _static;
    } // setStatic


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EBGP. 
     */
    private Byte eBGP;
    /**
     * This method returns the AdministrativeDistance.EBGP property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using EBGP. It has a default value of 20.
     * 
     * @return	Byte	current EBGP property value
     * @exception	Exception	
     */
    public Byte getEBGP(){

    return this.eBGP;
    } // getEBGP

    /**
     * This method sets the AdministrativeDistance.EBGP property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using EBGP. It has a default value of 20.
     * 
     * @param	Byte	new EBGP property value
     * @exception	Exception	
     */
    public void setEBGP(Byte eBGP) {

    this.eBGP = eBGP;
    } // setEBGP


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EIGRPInternal. 
     */
    private Byte eIGRPInternal;
    /**
     * This method returns the AdministrativeDistance.EIGRPInternal property 
     * value. This property is described as follows: 
     * 
     * The distance for peers using internal EIGRP. It has a default value of 
     * 90. 
     * 
     * @return	Byte	current EIGRPInternal property value
     * @exception	Exception	
     */
    public Byte getEIGRPInternal(){

    return this.eIGRPInternal;
    } // getEIGRPInternal

    /**
     * This method sets the AdministrativeDistance.EIGRPInternal property 
     * value. This property is described as follows: 
     * 
     * The distance for peers using internal EIGRP. It has a default value of 
     * 90. 
     * 
     * @param	Byte	new EIGRPInternal property value
     * @exception	Exception	
     */
    public void setEIGRPInternal(Byte eIGRPInternal) {

    this.eIGRPInternal = eIGRPInternal;
    } // setEIGRPInternal


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property IGRP. 
     */
    private Byte iGRP;
    /**
     * This method returns the AdministrativeDistance.IGRP property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using IGRP. It has a default value of 100.
     * 
     * @return	Byte	current IGRP property value
     * @exception	Exception	
     */
    public Byte getIGRP(){

    return this.iGRP;
    } // getIGRP

    /**
     * This method sets the AdministrativeDistance.IGRP property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using IGRP. It has a default value of 100.
     * 
     * @param	Byte	new IGRP property value
     * @exception	Exception	
     */
    public void setIGRP(Byte iGRP) {

    this.iGRP = iGRP;
    } // setIGRP


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OSPF. 
     */
    private Byte oSPF;
    /**
     * This method returns the AdministrativeDistance.OSPF property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using OSPF. It has a default value of 110.
     * 
     * @return	Byte	current OSPF property value
     * @exception	Exception	
     */
    public Byte getOSPF(){

    return this.oSPF;
    } // getOSPF

    /**
     * This method sets the AdministrativeDistance.OSPF property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using OSPF. It has a default value of 110.
     * 
     * @param	Byte	new OSPF property value
     * @exception	Exception	
     */
    public void setOSPF(Byte oSPF) {

    this.oSPF = oSPF;
    } // setOSPF


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ISIS. 
     */
    private Byte iSIS;
    /**
     * This method returns the AdministrativeDistance.ISIS property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using ISIS. It has a default value of 115.
     * 
     * @return	Byte	current ISIS property value
     * @exception	Exception	
     */
    public Byte getISIS(){

    return this.iSIS;
    } // getISIS

    /**
     * This method sets the AdministrativeDistance.ISIS property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using ISIS. It has a default value of 115.
     * 
     * @param	Byte	new ISIS property value
     * @exception	Exception	
     */
    public void setISIS(Byte iSIS) {

    this.iSIS = iSIS;
    } // setISIS


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RIP. 
     */
    private Byte rIP;
    /**
     * This method returns the AdministrativeDistance.RIP property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using RIP. It has a default value of 120.
     * 
     * @return	Byte	current RIP property value
     * @exception	Exception	
     */
    public Byte getRIP(){

    return this.rIP;
    } // getRIP

    /**
     * This method sets the AdministrativeDistance.RIP property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using RIP. It has a default value of 120.
     * 
     * @param	Byte	new RIP property value
     * @exception	Exception	
     */
    public void setRIP(Byte rIP) {

    this.rIP = rIP;
    } // setRIP


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EGP. 
     */
    private Byte eGP;
    /**
     * This method returns the AdministrativeDistance.EGP property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using EGP. It has a default value of 140.
     * 
     * @return	Byte	current EGP property value
     * @exception	Exception	
     */
    public Byte getEGP(){

    return this.eGP;
    } // getEGP

    /**
     * This method sets the AdministrativeDistance.EGP property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using EGP. It has a default value of 140.
     * 
     * @param	Byte	new EGP property value
     * @exception	Exception	
     */
    public void setEGP(Byte eGP) {

    this.eGP = eGP;
    } // setEGP


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EIGRPExternal. 
     */
    private Byte eIGRPExternal;
    /**
     * This method returns the AdministrativeDistance.EIGRPExternal property 
     * value. This property is described as follows: 
     * 
     * The distance for peers using external EIGRP. It has a default value of 
     * 170. 
     * 
     * @return	Byte	current EIGRPExternal property value
     * @exception	Exception	
     */
    public Byte getEIGRPExternal(){

    return this.eIGRPExternal;
    } // getEIGRPExternal

    /**
     * This method sets the AdministrativeDistance.EIGRPExternal property 
     * value. This property is described as follows: 
     * 
     * The distance for peers using external EIGRP. It has a default value of 
     * 170. 
     * 
     * @param	Byte	new EIGRPExternal property value
     * @exception	Exception	
     */
    public void setEIGRPExternal(Byte eIGRPExternal) {

    this.eIGRPExternal = eIGRPExternal;
    } // setEIGRPExternal


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property IBGP. 
     */
    private Byte iBGP;
    /**
     * This method returns the AdministrativeDistance.IBGP property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using IBGP. It has a default value of 200.
     * 
     * @return	Byte	current IBGP property value
     * @exception	Exception	
     */
    public Byte getIBGP(){

    return this.iBGP;
    } // getIBGP

    /**
     * This method sets the AdministrativeDistance.IBGP property value. This 
     * property is described as follows: 
     * 
     * The distance for peers using IBGP. It has a default value of 200.
     * 
     * @param	Byte	new IBGP property value
     * @exception	Exception	
     */
    public void setIBGP(Byte iBGP) {

    this.iBGP = iBGP;
    } // setIBGP


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property BGPLocal. 
     */
    private Byte bGPLocal;
    /**
     * This method returns the AdministrativeDistance.BGPLocal property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using BGP locally. It has a default value of 
     * 200. 
     * 
     * @return	Byte	current BGPLocal property value
     * @exception	Exception	
     */
    public Byte getBGPLocal(){

    return this.bGPLocal;
    } // getBGPLocal

    /**
     * This method sets the AdministrativeDistance.BGPLocal property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using BGP locally. It has a default value of 
     * 200. 
     * 
     * @param	Byte	new BGPLocal property value
     * @exception	Exception	
     */
    public void setBGPLocal(Byte bGPLocal) {

    this.bGPLocal = bGPLocal;
    } // setBGPLocal


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Unknown. 
     */
    private Byte unknown;
    /**
     * This method returns the AdministrativeDistance.Unknown property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using an unknown protocol. It has a default 
     * value of 255. 
     * 
     * @return	Byte	current Unknown property value
     * @exception	Exception	
     */
    public Byte getUnknown(){

    return this.unknown;
    } // getUnknown

    /**
     * This method sets the AdministrativeDistance.Unknown property value. 
     * This property is described as follows: 
     * 
     * The distance for peers using an unknown protocol. It has a default 
     * value of 255. 
     * 
     * @param	Byte	new Unknown property value
     * @exception	Exception	
     */
    public void setUnknown(Byte unknown) {

    this.unknown = unknown;
    } // setUnknown



} // Class AdministrativeDistance
