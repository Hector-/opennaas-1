/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Tue Nov 30 
 * 15:29:20 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class TrapSourceForSNMPService as well as methods comparable to 
 * the invokeMethods defined for this class. This Class implements the 
 * TrapSourceForSNMPServiceBean Interface. The CIM class 
 * TrapSourceForSNMPService is described as follows: 
 * 
 * TrapSourceForSNMPService specifies the protocol endpoint/interface (and 
 * hence its IP address) from which traps originate. 
 */
public class TrapSourceForSNMPService extends ServiceSAPDependency implements 
    Serializable {

    /**
     * This constructor creates a TrapSourceForSNMPServiceBeanImpl Class which 
     * implements the TrapSourceForSNMPServiceBean Interface, and 
     * encapsulates the CIM class TrapSourceForSNMPService in a Java Bean. 
     * The CIM class TrapSourceForSNMPService is described as follows: 
     * 
     * TrapSourceForSNMPService specifies the protocol endpoint/interface (and 
     * hence its IP address) from which traps originate. 
     */
    public TrapSourceForSNMPService(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Antecedent. 
     */
    private ProtocolEndpoint antecedent;
    /**
     * This method returns the TrapSourceForSNMPService.Antecedent property 
     * value. This property is described as follows: 
     * 
     * The endpoint that acts as the trap source.
     * 
     * @return	CIM_ProtocolEndpoint	current Antecedent property 
     * value 
     * @exception	Exception	
     */
    public ProtocolEndpoint getAntecedent(){

    return (ProtocolEndpoint)antecedent;
    } // getAntecedent

    /**
     * This method sets the TrapSourceForSNMPService.Antecedent property 
     * value. This property is described as follows: 
     * 
     * The endpoint that acts as the trap source.
     * 
     * @param	CIM_ProtocolEndpoint	new Antecedent property value
     * @exception	Exception	
     */
    public void setAntecedent(ProtocolEndpoint antecedent) {

    this.antecedent = antecedent;
    } // setAntecedent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Dependent. 
     */
    private SNMPService dependent;
    /**
     * This method returns the TrapSourceForSNMPService.Dependent property 
     * value. This property is described as follows: 
     * 
     * The SNMP service that sends the notifications.
     * 
     * @return	CIM_SNMPService	current Dependent property value
     * @exception	Exception	
     */
    public SNMPService getDependent(){

    return (SNMPService)dependent;
    } // getDependent

    /**
     * This method sets the TrapSourceForSNMPService.Dependent property value. 
     * This property is described as follows: 
     * 
     * The SNMP service that sends the notifications.
     * 
     * @param	CIM_SNMPService	new Dependent property value
     * @exception	Exception	
     */
    public void setDependent(SNMPService dependent) {

    this.dependent = dependent;
    } // setDependent



} // Class TrapSourceForSNMPService
