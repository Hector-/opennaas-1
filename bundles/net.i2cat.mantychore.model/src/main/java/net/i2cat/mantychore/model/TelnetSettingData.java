/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class TelnetSettingData as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * TelnetSettingDataBean Interface. The CIM class TelnetSettingData is 
 * described as follows: 
 * 
 * A representation of the settings of a Telnet server connection. The 
 * relationship between the SettingData and the TelnetProtocolEndpoint is 
 * described by instantiating the ElementSettingData association. 
 */
public class TelnetSettingData extends SettingData implements Serializable {

    /**
     * This constructor creates a TelnetSettingDataBeanImpl Class which 
     * implements the TelnetSettingDataBean Interface, and encapsulates the 
     * CIM class TelnetSettingData in a Java Bean. The CIM class 
     * TelnetSettingData is described as follows: 
     * 
     * A representation of the settings of a Telnet server connection. The 
     * relationship between the SettingData and the TelnetProtocolEndpoint is 
     * described by instantiating the ElementSettingData association. 
     */
    public TelnetSettingData(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EnabledTerminalModes. 
     */

    public enum EnabledTerminalModes{
    OTHER,
    VT100,
    ANSI,
    DMTF_RESERVED,
    VENDOR_RESERVED
    }
 public EnabledTerminalModes enabledTerminalModes;
    /**
     * This method returns the TelnetSettingData.EnabledTerminalModes property 
     * value. This property is described as follows: 
     * 
     * An array of integers indicating the terminal modes that will be 
     * enabled. 
     * 
     * @return	short	current EnabledTerminalModes property value
     * @exception	Exception	
     */
    public EnabledTerminalModes getEnabledTerminalModes(){

    return this.enabledTerminalModes;
    } // getEnabledTerminalModes

    /**
     * This method sets the TelnetSettingData.EnabledTerminalModes property 
     * value. This property is described as follows: 
     * 
     * An array of integers indicating the terminal modes that will be 
     * enabled. 
     * 
     * @param	short	new EnabledTerminalModes property value
     * @exception	Exception	
     */
    public void setEnabledTerminalModes(EnabledTerminalModes 
	enabledTerminalModes){

    this.enabledTerminalModes = enabledTerminalModes;
    } // setEnabledTerminalModes


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherEnabledTerminalMode. 
     */
    private String[] otherEnabledTerminalMode;
    /**
     * This method returns the TelnetSettingData.OtherEnabledTerminalMode 
     * property value. This property is described as follows: 
     * 
     * When the EnabledTerminalModes property contains a value of 1, "Other" 
     * then free form string providing more information about the enabled 
     * terminal mode. If it does not contain 1, this string has no meaning. 
     * 
     * @return	String[]	current OtherEnabledTerminalMode 
     * property value 
     * @exception	Exception	
     */
    public String[] getOtherEnabledTerminalMode(){

    return this.otherEnabledTerminalMode;
    } // getOtherEnabledTerminalMode

    /**
     * This method sets the TelnetSettingData.OtherEnabledTerminalMode 
     * property value. This property is described as follows: 
     * 
     * When the EnabledTerminalModes property contains a value of 1, "Other" 
     * then free form string providing more information about the enabled 
     * terminal mode. If it does not contain 1, this string has no meaning. 
     * 
     * @param	String[]	new OtherEnabledTerminalMode property 
     * value 
     * @exception	Exception	
     */
    public void setOtherEnabledTerminalMode(String[] otherEnabledTerminalMode) 
	{

    this.otherEnabledTerminalMode = otherEnabledTerminalMode;
    } // setOtherEnabledTerminalMode


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property TerminalMode. 
     */

    public enum TerminalMode{
    OTHER,
    VT100,
    ANSI,
    DMTF_RESERVED,
    VENDOR_RESERVED
    }
 public TerminalMode terminalMode;
    /**
     * This method returns the TelnetSettingData.TerminalMode property value. 
     * This property is described as follows: 
     * 
     * The terminal mode that will be in use if this SettingData is applied.
     * 
     * @return	short	current TerminalMode property value
     * @exception	Exception	
     */
    public TerminalMode getTerminalMode(){

    return this.terminalMode;
    } // getTerminalMode

    /**
     * This method sets the TelnetSettingData.TerminalMode property value. 
     * This property is described as follows: 
     * 
     * The terminal mode that will be in use if this SettingData is applied.
     * 
     * @param	short	new TerminalMode property value
     * @exception	Exception	
     */
    public void setTerminalMode(TerminalMode terminalMode){

    this.terminalMode = terminalMode;
    } // setTerminalMode


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherTerminalMode. 
     */
    private String otherTerminalMode;
    /**
     * This method returns the TelnetSettingData.OtherTerminalMode property 
     * value. This property is described as follows: 
     * 
     * If the TerminalMode property is set to 1, "Other" then this is a free 
     * form string providing more information about the current terminal 
     * mode. If not set to 1, this string has no meaning. 
     * 
     * @return	String	current OtherTerminalMode property value
     * @exception	Exception	
     */
    public String getOtherTerminalMode(){

    return this.otherTerminalMode;
    } // getOtherTerminalMode

    /**
     * This method sets the TelnetSettingData.OtherTerminalMode property 
     * value. This property is described as follows: 
     * 
     * If the TerminalMode property is set to 1, "Other" then this is a free 
     * form string providing more information about the current terminal 
     * mode. If not set to 1, this string has no meaning. 
     * 
     * @param	String	new OtherTerminalMode property value
     * @exception	Exception	
     */
    public void setOtherTerminalMode(String otherTerminalMode) {

    this.otherTerminalMode = otherTerminalMode;
    } // setOtherTerminalMode


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EnabledCharacterDisplayModes. 
     */

    public enum EnabledCharacterDisplayModes{
    OTHER,
    CONSOLE,
    STREAM,
    DMTF_RESERVED,
    VENDOR_RESERVED
    }
 public EnabledCharacterDisplayModes enabledCharacterDisplayModes;
    /**
     * This method returns the TelnetSettingData.EnabledCharacterDisplayModes 
     * property value. This property is described as follows: 
     * 
     * An array of integers indicating the Character display modes enabled for 
     * the endpoint. 
     * 
     * @return	short	current EnabledCharacterDisplayModes 
     * property value 
     * @exception	Exception	
     */
    public EnabledCharacterDisplayModes getEnabledCharacterDisplayModes(){

    return this.enabledCharacterDisplayModes;
    } // getEnabledCharacterDisplayModes

    /**
     * This method sets the TelnetSettingData.EnabledCharacterDisplayModes 
     * property value. This property is described as follows: 
     * 
     * An array of integers indicating the Character display modes enabled for 
     * the endpoint. 
     * 
     * @param	short	new EnabledCharacterDisplayModes property 
     * value 
     * @exception	Exception	
     */
    public void setEnabledCharacterDisplayModes(EnabledCharacterDisplayModes 
	enabledCharacterDisplayModes){

    this.enabledCharacterDisplayModes = enabledCharacterDisplayModes;
    } // setEnabledCharacterDisplayModes


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherEnabledCharacterDisplayMode. 
     */
    private String[] otherEnabledCharacterDisplayMode;
    /**
     * This method returns the 
     * TelnetSettingData.OtherEnabledCharacterDisplayMode property value. 
     * This property is described as follows: 
     * 
     * When the EnabledCharacterDisplayModes property contains a value of 1, 
     * "Other" then this is a free form string providing more information 
     * about the enabled modes. If it does not contain 1, this string has no 
     * meaning. 
     * 
     * @return	String[]	current OtherEnabledCharacterDisplayMode 
     * property value 
     * @exception	Exception	
     */
    public String[] getOtherEnabledCharacterDisplayMode(){

    return this.otherEnabledCharacterDisplayMode;
    } // getOtherEnabledCharacterDisplayMode

    /**
     * This method sets the TelnetSettingData.OtherEnabledCharacterDisplayMode 
     * property value. This property is described as follows: 
     * 
     * When the EnabledCharacterDisplayModes property contains a value of 1, 
     * "Other" then this is a free form string providing more information 
     * about the enabled modes. If it does not contain 1, this string has no 
     * meaning. 
     * 
     * @param	String[]	new OtherEnabledCharacterDisplayMode 
     * property value 
     * @exception	Exception	
     */
    public void setOtherEnabledCharacterDisplayMode(String[] 
	otherEnabledCharacterDisplayMode) {

    this.otherEnabledCharacterDisplayMode = otherEnabledCharacterDisplayMode;
    } // setOtherEnabledCharacterDisplayMode


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property CharacterDisplayMode. 
     */

    public enum CharacterDisplayMode{
    OTHER,
    CONSOLE,
    STREAM,
    DMTF_RESERVED,
    VENDOR_RESERVED
    }
 public CharacterDisplayMode characterDisplayMode;
    /**
     * This method returns the TelnetSettingData.CharacterDisplayMode property 
     * value. This property is described as follows: 
     * 
     * The character display mode that will be active if this SettingData is 
     * applied. 
     * 
     * @return	short	current CharacterDisplayMode property value
     * @exception	Exception	
     */
    public CharacterDisplayMode getCharacterDisplayMode(){

    return this.characterDisplayMode;
    } // getCharacterDisplayMode

    /**
     * This method sets the TelnetSettingData.CharacterDisplayMode property 
     * value. This property is described as follows: 
     * 
     * The character display mode that will be active if this SettingData is 
     * applied. 
     * 
     * @param	short	new CharacterDisplayMode property value
     * @exception	Exception	
     */
    public void setCharacterDisplayMode(CharacterDisplayMode 
	characterDisplayMode){

    this.characterDisplayMode = characterDisplayMode;
    } // setCharacterDisplayMode


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherCharacterDisplayMode. 
     */
    private String otherCharacterDisplayMode;
    /**
     * This method returns the TelnetSettingData.OtherCharacterDisplayMode 
     * property value. This property is described as follows: 
     * 
     * When the CharacterDisplayMode property is set to 1, "Other" then this 
     * is a free form string providing more information about the character 
     * display mode. If not set to 1, this string has no meaning. 
     * 
     * @return	String	current OtherCharacterDisplayMode property 
     * value 
     * @exception	Exception	
     */
    public String getOtherCharacterDisplayMode(){

    return this.otherCharacterDisplayMode;
    } // getOtherCharacterDisplayMode

    /**
     * This method sets the TelnetSettingData.OtherCharacterDisplayMode 
     * property value. This property is described as follows: 
     * 
     * When the CharacterDisplayMode property is set to 1, "Other" then this 
     * is a free form string providing more information about the character 
     * display mode. If not set to 1, this string has no meaning. 
     * 
     * @param	String	new OtherCharacterDisplayMode property 
     * value 
     * @exception	Exception	
     */
    public void setOtherCharacterDisplayMode(String otherCharacterDisplayMode) 
	{

    this.otherCharacterDisplayMode = otherCharacterDisplayMode;
    } // setOtherCharacterDisplayMode


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EscapeCharacter. 
     */
    private String escapeCharacter;
    /**
     * This method returns the TelnetSettingData.EscapeCharacter property 
     * value. This property is described as follows: 
     * 
     * String indicating the Escape Character that will be in effect if this 
     * SettingData is applied. 
     * 
     * @return	String	current EscapeCharacter property value
     * @exception	Exception	
     */
    public String getEscapeCharacter(){

    return this.escapeCharacter;
    } // getEscapeCharacter

    /**
     * This method sets the TelnetSettingData.EscapeCharacter property value. 
     * This property is described as follows: 
     * 
     * String indicating the Escape Character that will be in effect if this 
     * SettingData is applied. 
     * 
     * @param	String	new EscapeCharacter property value
     * @exception	Exception	
     */
    public void setEscapeCharacter(String escapeCharacter) {

    this.escapeCharacter = escapeCharacter;
    } // setEscapeCharacter


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property IdleTimeout. 
     */
    private int idleTimeout;
    /**
     * This method returns the TelnetSettingData.IdleTimeout property value. 
     * This property is described as follows: 
     * 
     * IdleTimeout specifies how long the connection can be idle before it is 
     * closed. The default value, 0, indicates that there is no idle timeout 
     * period. 
     * 
     * @return	int	current IdleTimeout property value
     * @exception	Exception	
     */
    public int getIdleTimeout(){

    return this.idleTimeout;
    } // getIdleTimeout

    /**
     * This method sets the TelnetSettingData.IdleTimeout property value. This 
     * property is described as follows: 
     * 
     * IdleTimeout specifies how long the connection can be idle before it is 
     * closed. The default value, 0, indicates that there is no idle timeout 
     * period. 
     * 
     * @param	int	new IdleTimeout property value
     * @exception	Exception	
     */
    public void setIdleTimeout(int idleTimeout) {

    this.idleTimeout = idleTimeout;
    } // setIdleTimeout



} // Class TelnetSettingData
