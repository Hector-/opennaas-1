/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Nov 29 
 * 11:50:57 CET 2010. 
 */

package net.i2cat.mantychore.model;

import javax.wbem.client.*;
import javax.wbem.cim.*;
import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class SecurityAssociationEndpoint as well as methods comparable 
 * to the invokeMethods defined for this class. This Class implements the 
 * SecurityAssociationEndpointBean Interface. The CIM class 
 * SecurityAssociationEndpoint is described as follows: 
 * 
 * SecurityAssociationEndpoint (SAEndpoint) represents the endpoint of a 
 * secure connection. This is typically an IP connection, although the model 
 * allows more flexibility than just IP. The SecurityAssociationEndpoint is 
 * tied to an IPProtocolEndpoint (or possibly other endpoint) using the 
 * LogicalIdentity association. Note that an endpoint is defined at both ends 
 * of the connection. 
 */
public class SecurityAssociationEndpoint extends ProtocolEndpoint implements 
    Serializable {

    /**
     * This constructor creates a SecurityAssociationEndpointBeanImpl Class 
     * which implements the SecurityAssociationEndpointBean Interface, and 
     * encapsulates the CIM class SecurityAssociationEndpoint in a Java Bean. 
     * The CIM class SecurityAssociationEndpoint is described as follows: 
     * 
     * SecurityAssociationEndpoint (SAEndpoint) represents the endpoint of a 
     * secure connection. This is typically an IP connection, although the 
     * model allows more flexibility than just IP. The 
     * SecurityAssociationEndpoint is tied to an IPProtocolEndpoint (or 
     * possibly other endpoint) using the LogicalIdentity association. Note 
     * that an endpoint is defined at both ends of the connection. 
     */
    public SecurityAssociationEndpoint(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property InstallDate. 
     */
    private CIMDateTime installDate;
    /**
     * This method returns the SecurityAssociationEndpoint.InstallDate 
     * property value. This property is described as follows: 
     * 
     * InstallDate records when the SA (and its endpoint) was created.
     * 
     * @return	CIMDateTime	current InstallDate property value
     * @exception	Exception	
     */
    public CIMDateTime getInstallDate(){

    return (CIMDateTime)installDate;
    } // getInstallDate

    /**
     * This method sets the SecurityAssociationEndpoint.InstallDate property 
     * value. This property is described as follows: 
     * 
     * InstallDate records when the SA (and its endpoint) was created.
     * 
     * @param	CIMDateTime	new InstallDate property value
     * @exception	Exception	
     */
    public void setInstallDate(CIMDateTime installDate) {

    this.installDate = installDate;
    } // setInstallDate


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property LifetimeSeconds. 
     */
    private long lifetimeSeconds;
    /**
     * This method returns the SecurityAssociationEndpoint.LifetimeSeconds 
     * property value. This property is described as follows: 
     * 
     * LifetimeSeconds specifies the maximum time that the SA will be 
     * considered valid after it has been created. A value of zero indicates 
     * that the default of 8 hours be used. A non-zero value indicates the 
     * seconds lifetime. 
     * 
     * @return	long	current LifetimeSeconds property value
     * @exception	Exception	
     */
    public long getLifetimeSeconds(){

    return this.lifetimeSeconds;
    } // getLifetimeSeconds

    /**
     * This method sets the SecurityAssociationEndpoint.LifetimeSeconds 
     * property value. This property is described as follows: 
     * 
     * LifetimeSeconds specifies the maximum time that the SA will be 
     * considered valid after it has been created. A value of zero indicates 
     * that the default of 8 hours be used. A non-zero value indicates the 
     * seconds lifetime. 
     * 
     * @param	long	new LifetimeSeconds property value
     * @exception	Exception	
     */
    public void setLifetimeSeconds(long lifetimeSeconds) {

    this.lifetimeSeconds = lifetimeSeconds;
    } // setLifetimeSeconds


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RefreshThresholdSecondsPercentage. 
     */
    private Byte refreshThresholdSecondsPercentage;
    /**
     * This method returns the 
     * SecurityAssociationEndpoint.RefreshThresholdSecondsPercentage property 
     * value. This property is described as follows: 
     * 
     * RefreshThresholdSecondsPercentage is the lifetime percentage after 
     * which a new SA should be acquired, before the existing SA expires. A 
     * random period may be added to a calculated threshold to reduce network 
     * thrashing. 
     * 
     * @return	Byte	current RefreshThresholdSecondsPercentage 
     * property value 
     * @exception	Exception	
     */
    public Byte getRefreshThresholdSecondsPercentage(){

    return this.refreshThresholdSecondsPercentage;
    } // getRefreshThresholdSecondsPercentage

    /**
     * This method sets the 
     * SecurityAssociationEndpoint.RefreshThresholdSecondsPercentage property 
     * value. This property is described as follows: 
     * 
     * RefreshThresholdSecondsPercentage is the lifetime percentage after 
     * which a new SA should be acquired, before the existing SA expires. A 
     * random period may be added to a calculated threshold to reduce network 
     * thrashing. 
     * 
     * @param	Byte	new RefreshThresholdSecondsPercentage 
     * property value 
     * @exception	Exception	
     */
    public void setRefreshThresholdSecondsPercentage(Byte 
	refreshThresholdSecondsPercentage) {

    this.refreshThresholdSecondsPercentage = 
	refreshThresholdSecondsPercentage;
    } // setRefreshThresholdSecondsPercentage


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property IdleDurationSeconds. 
     */
    private long idleDurationSeconds;
    /**
     * This method returns the SecurityAssociationEndpoint.IdleDurationSeconds 
     * property value. This property is described as follows: 
     * 
     * IdleDurationSeconds specifies how long the SA can be idle before it is 
     * deleted. The default value, 0, indicates that there is no idle timeout 
     * period. 
     * 
     * @return	long	current IdleDurationSeconds property value
     * @exception	Exception	
     */
    public long getIdleDurationSeconds(){

    return this.idleDurationSeconds;
    } // getIdleDurationSeconds

    /**
     * This method sets the SecurityAssociationEndpoint.IdleDurationSeconds 
     * property value. This property is described as follows: 
     * 
     * IdleDurationSeconds specifies how long the SA can be idle before it is 
     * deleted. The default value, 0, indicates that there is no idle timeout 
     * period. 
     * 
     * @param	long	new IdleDurationSeconds property value
     * @exception	Exception	
     */
    public void setIdleDurationSeconds(long idleDurationSeconds) {

    this.idleDurationSeconds = idleDurationSeconds;
    } // setIdleDurationSeconds


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property LifetimeKilobytes. 
     */
    private long lifetimeKilobytes;
    /**
     * This method returns the SecurityAssociationEndpoint.LifetimeKilobytes 
     * property value. This property is described as follows: 
     * 
     * LifetimeKilobytes specifies the maximum number of kilobytes of data 
     * traffic to be protected by the SA. A value of zero (the default) 
     * indicates that there should be no maximum kilobyte lifetime. A 
     * non-zero value specifies the desired kilobyte lifetime. The SA is 
     * deleted when the LifetimeKilobyte value is exceeded. 
     * 
     * @return	long	current LifetimeKilobytes property value
     * @exception	Exception	
     */
    public long getLifetimeKilobytes(){

    return this.lifetimeKilobytes;
    } // getLifetimeKilobytes

    /**
     * This method sets the SecurityAssociationEndpoint.LifetimeKilobytes 
     * property value. This property is described as follows: 
     * 
     * LifetimeKilobytes specifies the maximum number of kilobytes of data 
     * traffic to be protected by the SA. A value of zero (the default) 
     * indicates that there should be no maximum kilobyte lifetime. A 
     * non-zero value specifies the desired kilobyte lifetime. The SA is 
     * deleted when the LifetimeKilobyte value is exceeded. 
     * 
     * @param	long	new LifetimeKilobytes property value
     * @exception	Exception	
     */
    public void setLifetimeKilobytes(long lifetimeKilobytes) {

    this.lifetimeKilobytes = lifetimeKilobytes;
    } // setLifetimeKilobytes


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RefreshThresholdKbytesPercentage. 
     */
    private Byte refreshThresholdKbytesPercentage;
    /**
     * This method returns the 
     * SecurityAssociationEndpoint.RefreshThresholdKbytesPercentage property 
     * value. This property is described as follows: 
     * 
     * RefreshThresholdKbytesPercentage is the lifetime percentage of 
     * kilobytes processed, at which a new SA should be acquired. A random 
     * value may be added to the calculated threshold to reduce network 
     * thrashing. 
     * 
     * @return	Byte	current RefreshThresholdKbytesPercentage 
     * property value 
     * @exception	Exception	
     */
    public Byte getRefreshThresholdKbytesPercentage(){

    return this.refreshThresholdKbytesPercentage;
    } // getRefreshThresholdKbytesPercentage

    /**
     * This method sets the 
     * SecurityAssociationEndpoint.RefreshThresholdKbytesPercentage property 
     * value. This property is described as follows: 
     * 
     * RefreshThresholdKbytesPercentage is the lifetime percentage of 
     * kilobytes processed, at which a new SA should be acquired. A random 
     * value may be added to the calculated threshold to reduce network 
     * thrashing. 
     * 
     * @param	Byte	new RefreshThresholdKbytesPercentage property 
     * value 
     * @exception	Exception	
     */
    public void setRefreshThresholdKbytesPercentage(Byte 
	refreshThresholdKbytesPercentage) {

    this.refreshThresholdKbytesPercentage = refreshThresholdKbytesPercentage;
    } // setRefreshThresholdKbytesPercentage


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PacketLoggingActive. 
     */
    private boolean packetLoggingActive;
    /**
     * This method returns the SecurityAssociationEndpoint.PacketLoggingActive 
     * property value. This property is described as follows: 
     * 
     * PacketLoggingActive causes a log to be kept of traffic processed by the 
     * SAEndpoint. 
     * 
     * @return	boolean	current PacketLoggingActive property 
     * value 
     * @exception	Exception	
     */
    public boolean isPacketLoggingActive(){

    return this.packetLoggingActive;
    } // getPacketLoggingActive

    /**
     * This method sets the SecurityAssociationEndpoint.PacketLoggingActive 
     * property value. This property is described as follows: 
     * 
     * PacketLoggingActive causes a log to be kept of traffic processed by the 
     * SAEndpoint. 
     * 
     * @param	boolean	new PacketLoggingActive property value
     * @exception	Exception	
     */
    public void setPacketLoggingActive(boolean packetLoggingActive) {

    this.packetLoggingActive = packetLoggingActive;
    } // setPacketLoggingActive



} // Class SecurityAssociationEndpoint
