/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class StatisticsCollection as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * StatisticsCollectionBean Interface. The CIM class StatisticsCollection is 
 * described as follows: 
 * 
 * A subclass of SystemSpecificCollection which collects together statistics 
 * for a system. This class forms an 'anchor point' from which all the 
 * statistics kept for the system can be found (via the MemberOfCollection 
 * associations). 
 */
public class StatisticsCollection extends SystemSpecificCollection implements 
    Serializable {

    /**
     * This constructor creates a StatisticsCollectionBeanImpl Class which 
     * implements the StatisticsCollectionBean Interface, and encapsulates 
     * the CIM class StatisticsCollection in a Java Bean. The CIM class 
     * StatisticsCollection is described as follows: 
     * 
     * A subclass of SystemSpecificCollection which collects together 
     * statistics for a system. This class forms an 'anchor point' from which 
     * all the statistics kept for the system can be found (via the 
     * MemberOfCollection associations). 
     */
    public StatisticsCollection(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SampleInterval. 
     */
    private Date sampleInterval;
    /**
     * This method returns the StatisticsCollection.SampleInterval property 
     * value. This property is described as follows: 
     * 
     * This property provides the minimum sampling interval for the associated 
     * statistics so that client applications can determine the minimum 
     * interval that the StatisticsCollection should be sampled. If the 
     * statistics are sampled at different cycles, this property MUST be set 
     * to a zero time interval. 
     * 
     * @return	CIMDateTime	current SampleInterval property value
     * @exception	Exception	
     */
    public Date getSampleInterval(){

    return this.sampleInterval;
    } // getSampleInterval

    /**
     * This method sets the StatisticsCollection.SampleInterval property 
     * value. This property is described as follows: 
     * 
     * This property provides the minimum sampling interval for the associated 
     * statistics so that client applications can determine the minimum 
     * interval that the StatisticsCollection should be sampled. If the 
     * statistics are sampled at different cycles, this property MUST be set 
     * to a zero time interval. 
     * 
     * @param	CIMDateTime	new SampleInterval property value
     * @exception	Exception	
     */
    public void setSampleInterval(Date sampleInterval) {

    this.sampleInterval = sampleInterval;
    } // setSampleInterval


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property TimeLastSampled. 
     */
    private Date timeLastSampled;
    /**
     * This method returns the StatisticsCollection.TimeLastSampled property 
     * value. This property is described as follows: 
     * 
     * The time that the statistics collection was last sampled. Note that 
     * this property MAY be used to trigger an indication for 'push' delivery 
     * of statistics samples. 
     * 
     * @return	CIMDateTime	current TimeLastSampled property 
     * value 
     * @exception	Exception	
     */
    public Date getTimeLastSampled(){

    return this.timeLastSampled;
    } // getTimeLastSampled

    /**
     * This method sets the StatisticsCollection.TimeLastSampled property 
     * value. This property is described as follows: 
     * 
     * The time that the statistics collection was last sampled. Note that 
     * this property MAY be used to trigger an indication for 'push' delivery 
     * of statistics samples. 
     * 
     * @param	CIMDateTime	new TimeLastSampled property value
     * @exception	Exception	
     */
    public void setTimeLastSampled(Date timeLastSampled) {

    this.timeLastSampled = timeLastSampled;
    } // setTimeLastSampled



} // Class StatisticsCollection
