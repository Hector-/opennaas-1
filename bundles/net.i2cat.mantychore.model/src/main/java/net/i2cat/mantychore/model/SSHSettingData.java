/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class SSHSettingData as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * SSHSettingDataBean Interface. The CIM class SSHSettingData is described as 
 * follows: 
 * 
 * A representation of the SettingData of an SSH endpoint.
 */
    @Entity
public class SSHSettingData extends SettingData implements Serializable {

    /**
     * This constructor creates a SSHSettingDataBeanImpl Class which 
     * implements the SSHSettingDataBean Interface, and encapsulates the CIM 
     * class SSHSettingData in a Java Bean. The CIM class SSHSettingData is 
     * described as follows: 
     * 
     * A representation of the SettingData of an SSH endpoint.
     */
    public SSHSettingData(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EnabledSSHVersions. 
     */

    public enum EnabledSSHVersions{
    UNKNOWN,
    OTHER,
    SSHV1,
    SSHV2,
    DMTF_RESERVED,
    VENDOR_RESERVED
    }
    private EnabledSSHVersions enabledSSHVersions;
    /**
     * This method returns the SSHSettingData.EnabledSSHVersions property 
     * value. This property is described as follows: 
     * 
     * An array of integers indicating the version or versions of SSH protocol 
     * that will be enabled for the SSH endpoint. 
     * 
     * @return	int	current EnabledSSHVersions property value
     * @exception	Exception	
     */
    public EnabledSSHVersions getEnabledSSHVersions(){

    return this.enabledSSHVersions;
    } // getEnabledSSHVersions

    /**
     * This method sets the SSHSettingData.EnabledSSHVersions property value. 
     * This property is described as follows: 
     * 
     * An array of integers indicating the version or versions of SSH protocol 
     * that will be enabled for the SSH endpoint. 
     * 
     * @param	int	new EnabledSSHVersions property value
     * @exception	Exception	
     */
    public void setEnabledSSHVersions(EnabledSSHVersions 
	enabledSSHVersions){

    this.enabledSSHVersions = enabledSSHVersions;
    } // setEnabledSSHVersions


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherEnabledSSHVersion. 
     */
    private String otherEnabledSSHVersion;
    /**
     * This method returns the SSHSettingData.otherEnabledSSHVersion property 
     * value. This property is described as follows: 
     * 
     * When the EnabledSSHVersions property contains a value of 1, "Other" 
     * then this is a free form string providing more information about the 
     * SSH protocol. If not set to 1, this string has no meaning. 
     * 
     * @return	String	current otherEnabledSSHVersion property 
     * value 
     * @exception	Exception	
     */
    public String getotherEnabledSSHVersion(){

    return this.otherEnabledSSHVersion;
    } // getotherEnabledSSHVersion

    /**
     * This method sets the SSHSettingData.otherEnabledSSHVersion property 
     * value. This property is described as follows: 
     * 
     * When the EnabledSSHVersions property contains a value of 1, "Other" 
     * then this is a free form string providing more information about the 
     * SSH protocol. If not set to 1, this string has no meaning. 
     * 
     * @param	String	new otherEnabledSSHVersion property value
     * @exception	Exception	
     */
    public void setotherEnabledSSHVersion(String otherEnabledSSHVersion) {

    this.otherEnabledSSHVersion = otherEnabledSSHVersion;
    } // setotherEnabledSSHVersion


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SSHVersion. 
     */

    public enum SSHVersion{
    UNKNOWN,
    OTHER,
    SSHV1,
    SSHV2,
    DMTF_RESERVED,
    VENDOR_RESERVED
    }
    private SSHVersion sSHVersion;
    /**
     * This method returns the SSHSettingData.SSHVersion property value. This 
     * property is described as follows: 
     * 
     * The version of SSH that will be in use if this SettingData is applied.
     * 
     * @return	int	current SSHVersion property value
     * @exception	Exception	
     */
    public SSHVersion getSSHVersion(){

    return this.sSHVersion;
    } // getSSHVersion

    /**
     * This method sets the SSHSettingData.SSHVersion property value. This 
     * property is described as follows: 
     * 
     * The version of SSH that will be in use if this SettingData is applied.
     * 
     * @param	int	new SSHVersion property value
     * @exception	Exception	
     */
    public void setSSHVersion(SSHVersion sSHVersion){

    this.sSHVersion = sSHVersion;
    } // setSSHVersion


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherSSHVersion. 
     */
    private String[] otherSSHVersion;
    /**
     * This method returns the SSHSettingData.otherSSHVersion property value. 
     * This property is described as follows: 
     * 
     * If the CurrentSSHVersion property is set to 1, "Other" then this is a 
     * free form string providing more information about the current SSH 
     * protocol. If not set to 1, this string has no meaning. 
     * 
     * @return	String[]	current otherSSHVersion property value
     * @exception	Exception	
     */
    public String[] getotherSSHVersion(){

    return this.otherSSHVersion;
    } // getotherSSHVersion

    /**
     * This method sets the SSHSettingData.otherSSHVersion property value. 
     * This property is described as follows: 
     * 
     * If the CurrentSSHVersion property is set to 1, "Other" then this is a 
     * free form string providing more information about the current SSH 
     * protocol. If not set to 1, this string has no meaning. 
     * 
     * @param	String[]	new otherSSHVersion property value
     * @exception	Exception	
     */
    public void setotherSSHVersion(String[] otherSSHVersion) {

    this.otherSSHVersion = otherSSHVersion;
    } // setotherSSHVersion


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EnabledEncryptionAlgorithms. 
     */

    public enum EnabledEncryptionAlgorithms{
    UNKNOWN,
    OTHER,
    DES,
    DES3,
    RC4,
    IDEA,
    SKIPJACK,
    DMTF_RESERVED,
    VENDOR_RESERVED
    }
    private EnabledEncryptionAlgorithms enabledEncryptionAlgorithms;
    /**
     * This method returns the SSHSettingData.EnabledEncryptionAlgorithms 
     * property value. This property is described as follows: 
     * 
     * An array of integers indicating the encryption algorithms that are 
     * enabled for this SSH service. Its possible for an encryption algorithm 
     * to be supported and not currently enabled to be used. 
     * 
     * @return	int	current EnabledEncryptionAlgorithms property 
     * value 
     * @exception	Exception	
     */
    public EnabledEncryptionAlgorithms getEnabledEncryptionAlgorithms(){

    return this.enabledEncryptionAlgorithms;
    } // getEnabledEncryptionAlgorithms

    /**
     * This method sets the SSHSettingData.EnabledEncryptionAlgorithms 
     * property value. This property is described as follows: 
     * 
     * An array of integers indicating the encryption algorithms that are 
     * enabled for this SSH service. Its possible for an encryption algorithm 
     * to be supported and not currently enabled to be used. 
     * 
     * @param	int	new EnabledEncryptionAlgorithms property value
     * @exception	Exception	
     */
    public void setEnabledEncryptionAlgorithms(EnabledEncryptionAlgorithms 
	enabledEncryptionAlgorithms){

    this.enabledEncryptionAlgorithms = enabledEncryptionAlgorithms;
    } // setEnabledEncryptionAlgorithms


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherEnabledEncryptionAlgorithm. 
     */
    private String[] otherEnabledEncryptionAlgorithm;
    /**
     * This method returns the SSHSettingData.otherEnabledEncryptionAlgorithm 
     * property value. This property is described as follows: 
     * 
     * If the EnabledEncryptionAlgorithms property is set 1, "Other" this 
     * property contains a free form string providing more information about 
     * supported algorithms. If not set to 1, this string has no meaning. 
     * 
     * @return	String[]	current otherEnabledEncryptionAlgorithm 
     * property value 
     * @exception	Exception	
     */
    public String[] getotherEnabledEncryptionAlgorithm(){

    return this.otherEnabledEncryptionAlgorithm;
    } // getotherEnabledEncryptionAlgorithm

    /**
     * This method sets the SSHSettingData.otherEnabledEncryptionAlgorithm 
     * property value. This property is described as follows: 
     * 
     * If the EnabledEncryptionAlgorithms property is set 1, "Other" this 
     * property contains a free form string providing more information about 
     * supported algorithms. If not set to 1, this string has no meaning. 
     * 
     * @param	String[]	new otherEnabledEncryptionAlgorithm 
     * property value 
     * @exception	Exception	
     */
    public void setotherEnabledEncryptionAlgorithm(String[] 
	otherEnabledEncryptionAlgorithm) {

    this.otherEnabledEncryptionAlgorithm = otherEnabledEncryptionAlgorithm;
    } // setotherEnabledEncryptionAlgorithm


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EncryptionAlgorithm. 
     */

    public enum EncryptionAlgorithm{
    UNKNOWN,
    OTHER,
    DES,
    DES3,
    RC4,
    IDEA,
    SKIPJACK,
    DMTF_RESERVED
    }
    private EncryptionAlgorithm encryptionAlgorithm;
    /**
     * This method returns the SSHSettingData.EncryptionAlgorithm property 
     * value. This property is described as follows: 
     * 
     * The encryption algorithm that will be in use if this SettingData is 
     * applied. 
     * 
     * @return	int	current EncryptionAlgorithm property value
     * @exception	Exception	
     */
    public EncryptionAlgorithm getEncryptionAlgorithm(){

    return this.encryptionAlgorithm;
    } // getEncryptionAlgorithm

    /**
     * This method sets the SSHSettingData.EncryptionAlgorithm property value. 
     * This property is described as follows: 
     * 
     * The encryption algorithm that will be in use if this SettingData is 
     * applied. 
     * 
     * @param	int	new EncryptionAlgorithm property value
     * @exception	Exception	
     */
    public void setEncryptionAlgorithm(EncryptionAlgorithm 
	encryptionAlgorithm){

    this.encryptionAlgorithm = encryptionAlgorithm;
    } // setEncryptionAlgorithm


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherEncryptionAlgorithm. 
     */
    private String otherEncryptionAlgorithm;
    /**
     * This method returns the SSHSettingData.otherEncryptionAlgorithm 
     * property value. This property is described as follows: 
     * 
     * If the EncryptionAlgorithm property is set 1, "Other" then this is a 
     * free form string providing more information about the encryption 
     * algorithm in use. If not set to 1, this string has no meaning. 
     * 
     * @return	String	current otherEncryptionAlgorithm property 
     * value 
     * @exception	Exception	
     */
    public String getotherEncryptionAlgorithm(){

    return this.otherEncryptionAlgorithm;
    } // getotherEncryptionAlgorithm

    /**
     * This method sets the SSHSettingData.otherEncryptionAlgorithm property 
     * value. This property is described as follows: 
     * 
     * If the EncryptionAlgorithm property is set 1, "Other" then this is a 
     * free form string providing more information about the encryption 
     * algorithm in use. If not set to 1, this string has no meaning. 
     * 
     * @param	String	new otherEncryptionAlgorithm property value
     * @exception	Exception	
     */
    public void setotherEncryptionAlgorithm(String otherEncryptionAlgorithm) 
	{

    this.otherEncryptionAlgorithm = otherEncryptionAlgorithm;
    } // setotherEncryptionAlgorithm


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property IdleTimeout. 
     */
    private long idleTimeout;
    /**
     * This method returns the SSHSettingData.idleTimeout property value. This 
     * property is described as follows: 
     * 
     * IdleTimeout specifies how long the connection can be idle before the 
     * connection is terminated. The default value, 0, indicates that there 
     * is no idle timeout period. 
     * 
     * @return	long	current idleTimeout property value
     * @exception	Exception	
     */
    public long getidleTimeout(){

    return this.idleTimeout;
    } // getidleTimeout

    /**
     * This method sets the SSHSettingData.idleTimeout property value. This 
     * property is described as follows: 
     * 
     * IdleTimeout specifies how long the connection can be idle before the 
     * connection is terminated. The default value, 0, indicates that there 
     * is no idle timeout period. 
     * 
     * @param	long	new idleTimeout property value
     * @exception	Exception	
     */
    public void setidleTimeout(long idleTimeout) {

    this.idleTimeout = idleTimeout;
    } // setidleTimeout


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property KeepAlive. 
     */
    private boolean keepAlive;
    /**
     * This method returns the SSHSettingData.keepAlive property value. This 
     * property is described as follows: 
     * 
     * If this property is true, the SSH keep alive timer is enabled.
     * 
     * @return	boolean	current keepAlive property value
     * @exception	Exception	
     */
    public boolean iskeepAlive(){

    return this.keepAlive;
    } // getkeepAlive

    /**
     * This method sets the SSHSettingData.keepAlive property value. This 
     * property is described as follows: 
     * 
     * If this property is true, the SSH keep alive timer is enabled.
     * 
     * @param	boolean	new keepAlive property value
     * @exception	Exception	
     */
    public void setkeepAlive(boolean keepAlive) {

    this.keepAlive = keepAlive;
    } // setkeepAlive


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ForwardX11. 
     */
    private boolean forwardX11;
    /**
     * This method returns the SSHSettingData.forwardX11 property value. This 
     * property is described as follows: 
     * 
     * If this property is true, the SSH X11 forwarding mode is enabled.
     * 
     * @return	boolean	current forwardX11 property value
     * @exception	Exception	
     */
    public boolean isforwardX11(){

    return this.forwardX11;
    } // getforwardX11

    /**
     * This method sets the SSHSettingData.forwardX11 property value. This 
     * property is described as follows: 
     * 
     * If this property is true, the SSH X11 forwarding mode is enabled.
     * 
     * @param	boolean	new forwardX11 property value
     * @exception	Exception	
     */
    public void setforwardX11(boolean forwardX11) {

    this.forwardX11 = forwardX11;
    } // setforwardX11


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Compression. 
     */
    private boolean compression;
    /**
     * This method returns the SSHSettingData.compression property value. This 
     * property is described as follows: 
     * 
     * If this property is true, SSH compression is enabled.
     * 
     * @return	boolean	current compression property value
     * @exception	Exception	
     */
    public boolean iscompression(){

    return this.compression;
    } // getcompression

    /**
     * This method sets the SSHSettingData.compression property value. This 
     * property is described as follows: 
     * 
     * If this property is true, SSH compression is enabled.
     * 
     * @param	boolean	new compression property value
     * @exception	Exception	
     */
    public void setcompression(boolean compression) {

    this.compression = compression;
    } // setcompression



} // Class SSHSettingData
