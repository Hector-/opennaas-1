/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class Location as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * LocationBean Interface. The CIM class Location is described as follows: 
 * 
 * The Location class specifies the position and address of a PhysicalElement.
 */
    @Entity
public class Location extends ManagedElement implements Serializable {

    /**
     * This constructor creates a LocationBeanImpl Class which implements the 
     * LocationBean Interface, and encapsulates the CIM class Location in a 
     * Java Bean. The CIM class Location is described as follows: 
     * 
     * The Location class specifies the position and address of a 
     * PhysicalElement. 
     */
    public Location(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Name. 
     */
    private String name;
    /**
     * This method returns the Location.name property value. This property is 
     * described as follows: 
     * 
     * Name is a free-form string defining a label for the Location. It is a 
     * part of the key for the object. 
     * 
     * @return	String	current name property value
     * @exception	Exception	
     */
    public String getname(){

    return this.name;
    } // getname

    /**
     * This method sets the Location.name property value. This property is 
     * described as follows: 
     * 
     * Name is a free-form string defining a label for the Location. It is a 
     * part of the key for the object. 
     * 
     * @param	String	new name property value
     * @exception	Exception	
     */
    public void setname(String name) {

    this.name = name;
    } // setname


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PhysicalPosition. 
     */
    private String physicalPosition;
    /**
     * This method returns the Location.physicalPosition property value. This 
     * property is described as follows: 
     * 
     * Position is a free-form string that indicates the placement of a 
     * PhysicalElement. It can specify slot information on a HostingBoard, 
     * mounting site in a Cabinet, or latitude and longitude information, for 
     * example, from a GPS. It is part of the key of the Location object. 
     * 
     * @return	String	current physicalPosition property value
     * @exception	Exception	
     */
    public String getphysicalPosition(){

    return this.physicalPosition;
    } // getphysicalPosition

    /**
     * This method sets the Location.physicalPosition property value. This 
     * property is described as follows: 
     * 
     * Position is a free-form string that indicates the placement of a 
     * PhysicalElement. It can specify slot information on a HostingBoard, 
     * mounting site in a Cabinet, or latitude and longitude information, for 
     * example, from a GPS. It is part of the key of the Location object. 
     * 
     * @param	String	new physicalPosition property value
     * @exception	Exception	
     */
    public void setphysicalPosition(String physicalPosition) {

    this.physicalPosition = physicalPosition;
    } // setphysicalPosition


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Address. 
     */
    private String address;
    /**
     * This method returns the Location.address property value. This property 
     * is described as follows: 
     * 
     * Address is a free-form string indicating a street, building, or other 
     * type of address for the location of the PhysicalElement. 
     * 
     * @return	String	current address property value
     * @exception	Exception	
     */
    public String getaddress(){

    return this.address;
    } // getaddress

    /**
     * This method sets the Location.address property value. This property is 
     * described as follows: 
     * 
     * Address is a free-form string indicating a street, building, or other 
     * type of address for the location of the PhysicalElement. 
     * 
     * @param	String	new address property value
     * @exception	Exception	
     */
    public void setaddress(String address) {

    this.address = address;
    } // setaddress



} // Class Location
