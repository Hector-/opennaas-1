/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class NetworksInAdminDomain as well as methods comparable to 
 * the invokeMethods defined for this class. This Class implements the 
 * NetworksInAdminDomainBean Interface. The CIM class NetworksInAdminDomain 
 * is described as follows: 
 * 
 * This association is used to define the set of Logical Networks contained in 
 * an AdminDomain. This has the implied semantics that this set of 
 * LogicalNetworks are all managed by the same network administrator that 
 * manages the domain. Since the LogicalNetwork class is deprecated in lieu 
 * of ConnectivityCollection, this association is no longer necessary. It is 
 * deprecated to the HostedCollection association, that is inherited by 
 * ConnectivityCollection from its superclass, SystemSpecificCollection. 
 */
public class NetworksInAdminDomain  implements Serializable {

    /**
     * This constructor creates a NetworksInAdminDomainBeanImpl Class which 
     * implements the NetworksInAdminDomainBean Interface, and encapsulates 
     * the CIM class NetworksInAdminDomain in a Java Bean. The CIM class 
     * NetworksInAdminDomain is described as follows: 
     * 
     * This association is used to define the set of Logical Networks 
     * contained in an AdminDomain. This has the implied semantics that this 
     * set of LogicalNetworks are all managed by the same network 
     * administrator that manages the domain. Since the LogicalNetwork class 
     * is deprecated in lieu of ConnectivityCollection, this association is 
     * no longer necessary. It is deprecated to the HostedCollection 
     * association, that is inherited by ConnectivityCollection from its 
     * superclass, SystemSpecificCollection. 
     */
    public NetworksInAdminDomain(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Domain. 
     */
    @Deprecated    private AdminDomain domain;
    /**
     * This method returns the NetworksInAdminDomain.Domain property value. 
     * This property is described as follows: 
     * 
     * The AdminDomain that hosts the various LogicalNetworks.
     * 
     * @return	CIM_AdminDomain	current Domain property value
     * @exception	Exception	
     */
    @Deprecated
    public AdminDomain getDomain(){

    return this.domain;
    } // getDomain

    /**
     * This method sets the NetworksInAdminDomain.Domain property value. This 
     * property is described as follows: 
     * 
     * The AdminDomain that hosts the various LogicalNetworks.
     * 
     * @param	CIM_AdminDomain	new Domain property value
     * @exception	Exception	
     */
    @Deprecated
    public void setDomain(AdminDomain domain) {

    this.domain = domain;
    } // setDomain


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Network. 
     */
    @Deprecated    private LogicalNetwork network;
    /**
     * This method returns the NetworksInAdminDomain.Network property value. 
     * This property is described as follows: 
     * 
     * The LogicalNetworks that are hosted by the AdminDomain.
     * 
     * @return	CIM_LogicalNetwork	current Network property value
     * @exception	Exception	
     */
    @Deprecated
    public LogicalNetwork getNetwork(){

    return this.network;
    } // getNetwork

    /**
     * This method sets the NetworksInAdminDomain.Network property value. This 
     * property is described as follows: 
     * 
     * The LogicalNetworks that are hosted by the AdminDomain.
     * 
     * @param	CIM_LogicalNetwork	new Network property value
     * @exception	Exception	
     */
    @Deprecated
    public void setNetwork(LogicalNetwork network) {

    this.network = network;
    } // setNetwork



} // Class NetworksInAdminDomain
