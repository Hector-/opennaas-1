/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class PhysicalStatisticalInformation as well as methods 
 * comparable to the invokeMethods defined for this class. This Class 
 * implements the PhysicalStatisticalInformationBean Interface. The CIM class 
 * PhysicalStatisticalInformation is described as follows: 
 * 
 * Statistical information associated with a PhysicalElement or one of its 
 * subclasses. 
 */
    @Entity
public class PhysicalStatisticalInformation extends StatisticalInformation 
    implements Serializable {

    /**
     * This constructor creates a PhysicalStatisticalInformationBeanImpl Class 
     * which implements the PhysicalStatisticalInformationBean Interface, and 
     * encapsulates the CIM class PhysicalStatisticalInformation in a Java 
     * Bean. The CIM class PhysicalStatisticalInformation is described as 
     * follows: 
     * 
     * Statistical information associated with a PhysicalElement or one of its 
     * subclasses. 
     */
    public PhysicalStatisticalInformation(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PhysicalCreationClassName. 
     */
    private String physicalCreationClassName;
    /**
     * This method returns the 
     * PhysicalStatisticalInformation.physicalCreationClassName property 
     * value. This property is described as follows: 
     * 
     * The scoping Element's CreationClassName.
     * 
     * @return	String	current physicalCreationClassName property 
     * value 
     * @exception	Exception	
     */
    public String getphysicalCreationClassName(){

    return this.physicalCreationClassName;
    } // getphysicalCreationClassName

    /**
     * This method sets the 
     * PhysicalStatisticalInformation.physicalCreationClassName property 
     * value. This property is described as follows: 
     * 
     * The scoping Element's CreationClassName.
     * 
     * @param	String	new physicalCreationClassName property 
     * value 
     * @exception	Exception	
     */
    public void setphysicalCreationClassName(String physicalCreationClassName) 
	{

    this.physicalCreationClassName = physicalCreationClassName;
    } // setphysicalCreationClassName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Tag. 
     */
    private String tag;
    /**
     * This method returns the PhysicalStatisticalInformation.tag property 
     * value. This property is described as follows: 
     * 
     * The scoping Element's identifying Tag.
     * 
     * @return	String	current tag property value
     * @exception	Exception	
     */
    public String gettag(){

    return this.tag;
    } // gettag

    /**
     * This method sets the PhysicalStatisticalInformation.tag property value. 
     * This property is described as follows: 
     * 
     * The scoping Element's identifying Tag.
     * 
     * @param	String	new tag property value
     * @exception	Exception	
     */
    public void settag(String tag) {

    this.tag = tag;
    } // settag


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property CreationClassName. 
     */
    private String creationClassName;
    /**
     * This method returns the 
     * PhysicalStatisticalInformation.creationClassName property value. This 
     * property is described as follows: 
     * 
     * CreationClassName indicates the name of the class or the subclass used 
     * in the creation of an instance. When used with the other key 
     * properties of this class, this property allows all instances of this 
     * class and its subclasses to be uniquely identified. 
     * 
     * @return	String	current creationClassName property value
     * @exception	Exception	
     */
    public String getcreationClassName(){

    return this.creationClassName;
    } // getcreationClassName

    /**
     * This method sets the PhysicalStatisticalInformation.creationClassName 
     * property value. This property is described as follows: 
     * 
     * CreationClassName indicates the name of the class or the subclass used 
     * in the creation of an instance. When used with the other key 
     * properties of this class, this property allows all instances of this 
     * class and its subclasses to be uniquely identified. 
     * 
     * @param	String	new creationClassName property value
     * @exception	Exception	
     */
    public void setcreationClassName(String creationClassName) {

    this.creationClassName = creationClassName;
    } // setcreationClassName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Name. 
     */
    private String name;
    /**
     * This method returns the PhysicalStatisticalInformation.name property 
     * value. This property is described as follows: 
     * 
     * The Name property, inherited from StatisticalInformation, serves as 
     * part of the object key. 
     * 
     * @return	String	current name property value
     * @exception	Exception	
     */
    public String getname(){

    return (String)name;
    } // getname

    /**
     * This method sets the PhysicalStatisticalInformation.name property 
     * value. This property is described as follows: 
     * 
     * The Name property, inherited from StatisticalInformation, serves as 
     * part of the object key. 
     * 
     * @param	String	new name property value
     * @exception	Exception	
     */
    public void setname(String name) {

    this.name = name;
    } // setname



} // Class PhysicalStatisticalInformation
