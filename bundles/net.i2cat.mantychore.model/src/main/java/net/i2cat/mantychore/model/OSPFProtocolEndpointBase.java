/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class OSPFProtocolEndpointBase as well as methods comparable to 
 * the invokeMethods defined for this class. This Class implements the 
 * OSPFProtocolEndpointBaseBean Interface. The CIM class 
 * OSPFProtocolEndpointBase is described as follows: 
 * 
 * Base class for OSPF protocol endpoints, defining several general 
 * properties. 
 */
    @Entity
public class OSPFProtocolEndpointBase extends ProtocolEndpoint implements 
    Serializable {

    /**
     * This constructor creates a OSPFProtocolEndpointBaseBeanImpl Class which 
     * implements the OSPFProtocolEndpointBaseBean Interface, and 
     * encapsulates the CIM class OSPFProtocolEndpointBase in a Java Bean. 
     * The CIM class OSPFProtocolEndpointBase is described as follows: 
     * 
     * Base class for OSPF protocol endpoints, defining several general 
     * properties. 
     */
    public OSPFProtocolEndpointBase(){};

    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property TransitDelay. 
     */
    private int transitDelay;
    /**
     * This method returns the OSPFProtocolEndpointBase.transitDelay property 
     * value. This property is described as follows: 
     * 
     * Estimated delay, in seconds that it takes to transmit a Link State 
     * Update Packet over this interface, see C.3 in RFC 2328. 
     * 
     * @return	int	current transitDelay property value
     * @exception	Exception	
     */
    public int gettransitDelay(){

    return this.transitDelay;
    } // gettransitDelay

    /**
     * This method sets the OSPFProtocolEndpointBase.transitDelay property 
     * value. This property is described as follows: 
     * 
     * Estimated delay, in seconds that it takes to transmit a Link State 
     * Update Packet over this interface, see C.3 in RFC 2328. 
     * 
     * @param	int	new transitDelay property value
     * @exception	Exception	
     */
    public void settransitDelay(int transitDelay) {

    this.transitDelay = transitDelay;
    } // settransitDelay


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RetransmitInterval. 
     */
    private int retransmitInterval;
    /**
     * This method returns the OSPFProtocolEndpointBase.retransmitInterval 
     * property value. This property is described as follows: 
     * 
     * The number of seconds between LSA (Link State Advertisement) 
     * retransmissions, see C.3 in RFC 2328. 
     * 
     * @return	int	current retransmitInterval property value
     * @exception	Exception	
     */
    public int getretransmitInterval(){

    return this.retransmitInterval;
    } // getretransmitInterval

    /**
     * This method sets the OSPFProtocolEndpointBase.retransmitInterval 
     * property value. This property is described as follows: 
     * 
     * The number of seconds between LSA (Link State Advertisement) 
     * retransmissions, see C.3 in RFC 2328. 
     * 
     * @param	int	new retransmitInterval property value
     * @exception	Exception	
     */
    public void setretransmitInterval(int retransmitInterval) {

    this.retransmitInterval = retransmitInterval;
    } // setretransmitInterval


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property AuthType. 
     */

    public enum AuthType{
    OTHER,
    NULL_AUTHENTICATION,
    SIMPLE_PASSWORD,
    CRYPTOGRAPHIC_AUTHENTICATION
    }
    private AuthType authType;
    /**
     * This method returns the OSPFProtocolEndpointBase.AuthType property 
     * value. This property is described as follows: 
     * 
     * Identifies the authentication procedure to be used on the attached 
     * network, see C.3 in RFC 2328. 
     * 
     * @return	int	current AuthType property value
     * @exception	Exception	
     */
    public AuthType getAuthType(){

    return this.authType;
    } // getAuthType

    /**
     * This method sets the OSPFProtocolEndpointBase.AuthType property value. 
     * This property is described as follows: 
     * 
     * Identifies the authentication procedure to be used on the attached 
     * network, see C.3 in RFC 2328. 
     * 
     * @param	int	new AuthType property value
     * @exception	Exception	
     */
    public void setAuthType(AuthType authType){

    this.authType = authType;
    } // setAuthType


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherAuthType. 
     */
    private String otherAuthType;
    /**
     * This method returns the OSPFProtocolEndpointBase.otherAuthType property 
     * value. This property is described as follows: 
     * 
     * Specifies the authentication procedure if the value, "Other" (1) is set 
     * for AuthType. 
     * 
     * @return	String	current otherAuthType property value
     * @exception	Exception	
     */
    public String getotherAuthType(){

    return this.otherAuthType;
    } // getotherAuthType

    /**
     * This method sets the OSPFProtocolEndpointBase.otherAuthType property 
     * value. This property is described as follows: 
     * 
     * Specifies the authentication procedure if the value, "Other" (1) is set 
     * for AuthType. 
     * 
     * @param	String	new otherAuthType property value
     * @exception	Exception	
     */
    public void setotherAuthType(String otherAuthType) {

    this.otherAuthType = otherAuthType;
    } // setotherAuthType


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property AuthKey. 
     */
    private String authKey;
    /**
     * This method returns the OSPFProtocolEndpointBase.authKey property 
     * value. This property is described as follows: 
     * 
     * This key is used during the authentication procedure to verify OSPF 
     * protocol packets, see C.3 RFC 2328. It is used in the 
     * "Simple password" and in the "Cryptographic authentication" case too. 
     * 
     * @return	String	current authKey property value
     * @exception	Exception	
     */
    public String getauthKey(){

    return this.authKey;
    } // getauthKey

    /**
     * This method sets the OSPFProtocolEndpointBase.authKey property value. 
     * This property is described as follows: 
     * 
     * This key is used during the authentication procedure to verify OSPF 
     * protocol packets, see C.3 RFC 2328. It is used in the 
     * "Simple password" and in the "Cryptographic authentication" case too. 
     * 
     * @param	String	new authKey property value
     * @exception	Exception	
     */
    public void setauthKey(String authKey) {

    this.authKey = authKey;
    } // setauthKey




} // Class OSPFProtocolEndpointBase
