/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class NextHopRouting as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * NextHopRoutingBean Interface. The CIM class NextHopRouting is described as 
 * follows: 
 * 
 * NextHopRouting relates a destination address to the address or interface 
 * through which the remote address may be reached. An instance of this class 
 * can represent either static or dynamic routing, and may represent a 
 * routing table entry (but it is not required that all NextHopRoutes be in a 
 * routing table). Static routes are distinguished by setting the IsStatic 
 * boolean property to TRUE. Subclasses of NextHopRouting provide specific 
 * protocol and Key information. NextHopRoutes are dependent on at least one 
 * ForwardingService to execute them. This is conveyed by the 
 * CIM_NextHopForwardedByService association. NextHopRouting is deprecated in 
 * lieu of the more general, concrete NextHopRoute class. NextHopRoute allows 
 * the definition of BOTH a next hop address and an interface for 
 * transmission of the traffic. Also, it does not mandate the instantiation 
 * of a ForwardingService class. The latter is not needed if the sole purpose 
 * of the instance is to specify a 'desired/configured' route. This is simply 
 * a specification of the next hop. 
 */
    @Deprecated
    @Entity
public class NextHopRouting extends LogicalElement implements Serializable {

    /**
     * This constructor creates a NextHopRoutingBeanImpl Class which 
     * implements the NextHopRoutingBean Interface, and encapsulates the CIM 
     * class NextHopRouting in a Java Bean. The CIM class NextHopRouting is 
     * described as follows: 
     * 
     * NextHopRouting relates a destination address to the address or 
     * interface through which the remote address may be reached. An instance 
     * of this class can represent either static or dynamic routing, and may 
     * represent a routing table entry (but it is not required that all 
     * NextHopRoutes be in a routing table). Static routes are distinguished 
     * by setting the IsStatic boolean property to TRUE. Subclasses of 
     * NextHopRouting provide specific protocol and Key information. 
     * NextHopRoutes are dependent on at least one ForwardingService to 
     * execute them. This is conveyed by the CIM_NextHopForwardedByService 
     * association. NextHopRouting is deprecated in lieu of the more general, 
     * concrete NextHopRoute class. NextHopRoute allows the definition of 
     * BOTH a next hop address and an interface for transmission of the 
     * traffic. Also, it does not mandate the instantiation of a 
     * ForwardingService class. The latter is not needed if the sole purpose 
     * of the instance is to specify a 'desired/configured' route. This is 
     * simply a specification of the next hop. 
     */
    protected NextHopRouting(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property DestinationAddress. 
     */
    @Deprecated    private String destinationAddress;
    /**
     * This method returns the NextHopRouting.destinationAddress property 
     * value. This property is described as follows: 
     * 
     * The address which serves as the destination to be reached.
     * 
     * @return	String	current destinationAddress property value
     * @exception	Exception	
     */
    @Deprecated
    public String getdestinationAddress(){

    return this.destinationAddress;
    } // getdestinationAddress

    /**
     * This method sets the NextHopRouting.destinationAddress property value. 
     * This property is described as follows: 
     * 
     * The address which serves as the destination to be reached.
     * 
     * @param	String	new destinationAddress property value
     * @exception	Exception	
     */
    @Deprecated
    public void setdestinationAddress(String destinationAddress) {

    this.destinationAddress = destinationAddress;
    } // setdestinationAddress


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property DestinationMask. 
     */
    @Deprecated    private String destinationMask;
    /**
     * This method returns the NextHopRouting.destinationMask property value. 
     * This property is described as follows: 
     * 
     * The mask for the DestinationAddress.
     * 
     * @return	String	current destinationMask property value
     * @exception	Exception	
     */
    @Deprecated
    public String getdestinationMask(){

    return this.destinationMask;
    } // getdestinationMask

    /**
     * This method sets the NextHopRouting.destinationMask property value. 
     * This property is described as follows: 
     * 
     * The mask for the DestinationAddress.
     * 
     * @param	String	new destinationMask property value
     * @exception	Exception	
     */
    @Deprecated
    public void setdestinationMask(String destinationMask) {

    this.destinationMask = destinationMask;
    } // setdestinationMask


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property NextHop. 
     */
    @Deprecated    private String nextHop;
    /**
     * This method returns the NextHopRouting.nextHop property value. This 
     * property is described as follows: 
     * 
     * This contains either the address of the next-hop router, or the 
     * interface used to reach the destination. 
     * 
     * @return	String	current nextHop property value
     * @exception	Exception	
     */
    @Deprecated
    public String getnextHop(){

    return this.nextHop;
    } // getnextHop

    /**
     * This method sets the NextHopRouting.nextHop property value. This 
     * property is described as follows: 
     * 
     * This contains either the address of the next-hop router, or the 
     * interface used to reach the destination. 
     * 
     * @param	String	new nextHop property value
     * @exception	Exception	
     */
    @Deprecated
    public void setnextHop(String nextHop) {

    this.nextHop = nextHop;
    } // setnextHop


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property IsStatic. 
     */
    @Deprecated    private boolean isStatic;
    /**
     * This method returns the NextHopRouting.isStatic property value. This 
     * property is described as follows: 
     * 
     * TRUE indicates that this is a static route, and FALSE indicates a 
     * dynamically-learned route. 
     * 
     * @return	boolean	current isStatic property value
     * @exception	Exception	
     */
    @Deprecated
    public boolean isisStatic(){

    return this.isStatic;
    } // getisStatic

    /**
     * This method sets the NextHopRouting.isStatic property value. This 
     * property is described as follows: 
     * 
     * TRUE indicates that this is a static route, and FALSE indicates a 
     * dynamically-learned route. 
     * 
     * @param	boolean	new isStatic property value
     * @exception	Exception	
     */
    @Deprecated
    public void setisStatic(boolean isStatic) {

    this.isStatic = isStatic;
    } // setisStatic



} // Class NextHopRouting
