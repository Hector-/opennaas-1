/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class Hdr8021PService as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * Hdr8021PServiceBean Interface. The CIM class Hdr8021PService is described 
 * as follows: 
 * 
 * This class represents a specialization of the general concept of forwarding 
 * network traffic by adding specific semantics that define how traffic is 
 * forwarded based on the value of the Priority field in the 802.1P header. 
 * This class is used to enable DiffServ domains and domains that support 
 * 802.1P only to exchange traffic. It represents the mapping between 
 * implementations that only support 802.1P priority marking to be mapped to 
 * implementations that support DiffServ, which use DSCPs. Hdr8021PService is 
 * deprecated since forwarding based on the value of the Priority field in 
 * the 802.1P header is specified using a FilterList, which is associated 
 * with a ClassifierElement. If there is a need to distinguish a higher-level 
 * set of coordinated QoS services, the QoSService class can be instantiated 
 * directly. 
 */
    @Deprecated
    @Entity
public class Hdr8021PService extends QoSService implements Serializable {

    /**
     * This constructor creates a Hdr8021PServiceBeanImpl Class which 
     * implements the Hdr8021PServiceBean Interface, and encapsulates the CIM 
     * class Hdr8021PService in a Java Bean. The CIM class Hdr8021PService is 
     * described as follows: 
     * 
     * This class represents a specialization of the general concept of 
     * forwarding network traffic by adding specific semantics that define 
     * how traffic is forwarded based on the value of the Priority field in 
     * the 802.1P header. This class is used to enable DiffServ domains and 
     * domains that support 802.1P only to exchange traffic. It represents 
     * the mapping between implementations that only support 802.1P priority 
     * marking to be mapped to implementations that support DiffServ, which 
     * use DSCPs. Hdr8021PService is deprecated since forwarding based on the 
     * value of the Priority field in the 802.1P header is specified using a 
     * FilterList, which is associated with a ClassifierElement. If there is 
     * a need to distinguish a higher-level set of coordinated QoS services, 
     * the QoSService class can be instantiated directly. 
     */
    public Hdr8021PService(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PriorityValue. 
     */
    @Deprecated    private short priorityValue;
    /**
     * This method returns the Hdr8021PService.priorityValue property value. 
     * This property is described as follows: 
     * 
     * This property is an 8-bit unsigned integer that defines the notion of 
     * priority as specified in 802.1P implementations. 
     * 
     * @return	short	current priorityValue property value
     * @exception	Exception	
     */
    @Deprecated
    public short getpriorityValue(){

    return this.priorityValue;
    } // getpriorityValue

    /**
     * This method sets the Hdr8021PService.priorityValue property value. This 
     * property is described as follows: 
     * 
     * This property is an 8-bit unsigned integer that defines the notion of 
     * priority as specified in 802.1P implementations. 
     * 
     * @param	short	new priorityValue property value
     * @exception	Exception	
     */
    @Deprecated
    public void setpriorityValue(short priorityValue) {

    this.priorityValue = priorityValue;
    } // setpriorityValue



} // Class Hdr8021PService
