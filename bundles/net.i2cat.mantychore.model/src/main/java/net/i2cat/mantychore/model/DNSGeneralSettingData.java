/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class DNSGeneralSettingData as well as methods comparable to 
 * the invokeMethods defined for this class. This Class implements the 
 * DNSGeneralSettingDataBean Interface. The CIM class DNSGeneralSettingData 
 * is described as follows: 
 * 
 * The DNSGeneralSettingData class represents the system wide configuration 
 * options for the DNS client. Therefore, these configuration parameters are 
 * scoped to a computer system and are applicable to all of the network 
 * interfaces of the scoping system. 
 */
    @Entity
public class DNSGeneralSettingData extends IPAssignmentSettingData implements 
    Serializable {

    /**
     * This constructor creates a DNSGeneralSettingDataBeanImpl Class which 
     * implements the DNSGeneralSettingDataBean Interface, and encapsulates 
     * the CIM class DNSGeneralSettingData in a Java Bean. The CIM class 
     * DNSGeneralSettingData is described as follows: 
     * 
     * The DNSGeneralSettingData class represents the system wide 
     * configuration options for the DNS client. Therefore, these 
     * configuration parameters are scoped to a computer system and are 
     * applicable to all of the network interfaces of the scoping system. 
     */
    public DNSGeneralSettingData(){};

    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property AppendPrimarySuffixes. 
     */
    private boolean appendPrimarySuffixes;
    /**
     * This method returns the DNSGeneralSettingData.appendPrimarySuffixes 
     * property value. This property is described as follows: 
     * 
     * Whether or not the client should automatically append the primary 
     * domain suffix to target names prior to attempting to resolve. 
     * 
     * @return	boolean	current appendPrimarySuffixes property 
     * value 
     * @exception	Exception	
     */
    public boolean isappendPrimarySuffixes(){

    return this.appendPrimarySuffixes;
    } // getappendPrimarySuffixes

    /**
     * This method sets the DNSGeneralSettingData.appendPrimarySuffixes 
     * property value. This property is described as follows: 
     * 
     * Whether or not the client should automatically append the primary 
     * domain suffix to target names prior to attempting to resolve. 
     * 
     * @param	boolean	new appendPrimarySuffixes property value
     * @exception	Exception	
     */
    public void setappendPrimarySuffixes(boolean appendPrimarySuffixes) {

    this.appendPrimarySuffixes = appendPrimarySuffixes;
    } // setappendPrimarySuffixes


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property AppendParentSuffixes. 
     */
    private boolean appendParentSuffixes;
    /**
     * This method returns the DNSGeneralSettingData.appendParentSuffixes 
     * property value. This property is described as follows: 
     * 
     * Whether or not the client should automatically append the parent domain 
     * suffix to target names prior to attempting to resolve. 
     * 
     * @return	boolean	current appendParentSuffixes property 
     * value 
     * @exception	Exception	
     */
    public boolean isappendParentSuffixes(){

    return this.appendParentSuffixes;
    } // getappendParentSuffixes

    /**
     * This method sets the DNSGeneralSettingData.appendParentSuffixes 
     * property value. This property is described as follows: 
     * 
     * Whether or not the client should automatically append the parent domain 
     * suffix to target names prior to attempting to resolve. 
     * 
     * @param	boolean	new appendParentSuffixes property value
     * @exception	Exception	
     */
    public void setappendParentSuffixes(boolean appendParentSuffixes) {

    this.appendParentSuffixes = appendParentSuffixes;
    } // setappendParentSuffixes


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property DNSSuffixesToAppend. 
     */
    private String[] dNSSuffixesToAppend;
    /**
     * This method returns the DNSGeneralSettingData.dNSSuffixesToAppend 
     * property value. This property is described as follows: 
     * 
     * DNS suffixes to append when attempting to resolve a hostname.
     * 
     * @return	String[]	current dNSSuffixesToAppend property 
     * value 
     * @exception	Exception	
     */
    public String[] getdNSSuffixesToAppend(){

    return this.dNSSuffixesToAppend;
    } // getdNSSuffixesToAppend

    /**
     * This method sets the DNSGeneralSettingData.dNSSuffixesToAppend property 
     * value. This property is described as follows: 
     * 
     * DNS suffixes to append when attempting to resolve a hostname.
     * 
     * @param	String[]	new dNSSuffixesToAppend property value
     * @exception	Exception	
     */
    public void setdNSSuffixesToAppend(String[] dNSSuffixesToAppend) {

    this.dNSSuffixesToAppend = dNSSuffixesToAppend;
    } // setdNSSuffixesToAppend



} // Class DNSGeneralSettingData
