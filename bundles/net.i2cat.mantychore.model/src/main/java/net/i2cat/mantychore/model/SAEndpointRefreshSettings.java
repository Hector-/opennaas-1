/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Tue Nov 30 
 * 10:54:51 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class SAEndpointRefreshSettings as well as methods comparable 
 * to the invokeMethods defined for this class. This Class implements the 
 * SAEndpointRefreshSettingsBean Interface. The CIM class 
 * SAEndpointRefreshSettings is described as follows: 
 * 
 * SAEndpointRefreshSettings hold the refresh thresholds for the 
 * SecurityAssociationEndpoint. Since these settings may change for an SA, 
 * the properties are defined both in this class and in 
 * SecurityAssociationEndpoint. 
 */
public class SAEndpointRefreshSettings extends SettingData implements 
    Serializable {

    /**
     * This constructor creates a SAEndpointRefreshSettingsBeanImpl Class 
     * which implements the SAEndpointRefreshSettingsBean Interface, and 
     * encapsulates the CIM class SAEndpointRefreshSettings in a Java Bean. 
     * The CIM class SAEndpointRefreshSettings is described as follows: 
     * 
     * SAEndpointRefreshSettings hold the refresh thresholds for the 
     * SecurityAssociationEndpoint. Since these settings may change for an 
     * SA, the properties are defined both in this class and in 
     * SecurityAssociationEndpoint. 
     */
    public SAEndpointRefreshSettings(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RefreshThresholdSecondsPercentage. 
     */
    private Byte refreshThresholdSecondsPercentage;
    /**
     * This method returns the 
     * SAEndpointRefreshSettings.RefreshThresholdSecondsPercentage property 
     * value. This property is described as follows: 
     * 
     * RefreshThresholdSecondsPercentage is the lifetime percentage after 
     * which a new SA should be acquired, before the existing SA expires. 
     * 
     * @return	Byte	current RefreshThresholdSecondsPercentage 
     * property value 
     * @exception	Exception	
     */
    public Byte getRefreshThresholdSecondsPercentage(){

    return this.refreshThresholdSecondsPercentage;
    } // getRefreshThresholdSecondsPercentage

    /**
     * This method sets the 
     * SAEndpointRefreshSettings.RefreshThresholdSecondsPercentage property 
     * value. This property is described as follows: 
     * 
     * RefreshThresholdSecondsPercentage is the lifetime percentage after 
     * which a new SA should be acquired, before the existing SA expires. 
     * 
     * @param	Byte	new RefreshThresholdSecondsPercentage 
     * property value 
     * @exception	Exception	
     */
    public void setRefreshThresholdSecondsPercentage(Byte 
	refreshThresholdSecondsPercentage) {

    this.refreshThresholdSecondsPercentage = 
	refreshThresholdSecondsPercentage;
    } // setRefreshThresholdSecondsPercentage


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RefreshThresholdKbytesPercentage. 
     */
    private Byte refreshThresholdKbytesPercentage;
    /**
     * This method returns the 
     * SAEndpointRefreshSettings.RefreshThresholdKbytesPercentage property 
     * value. This property is described as follows: 
     * 
     * RefreshThresholdKbytesPercentage is the lifetime percentage of 
     * kilobytes processed, at which a new SA should be acquired. 
     * 
     * @return	Byte	current RefreshThresholdKbytesPercentage 
     * property value 
     * @exception	Exception	
     */
    public Byte getRefreshThresholdKbytesPercentage(){

    return this.refreshThresholdKbytesPercentage;
    } // getRefreshThresholdKbytesPercentage

    /**
     * This method sets the 
     * SAEndpointRefreshSettings.RefreshThresholdKbytesPercentage property 
     * value. This property is described as follows: 
     * 
     * RefreshThresholdKbytesPercentage is the lifetime percentage of 
     * kilobytes processed, at which a new SA should be acquired. 
     * 
     * @param	Byte	new RefreshThresholdKbytesPercentage property 
     * value 
     * @exception	Exception	
     */
    public void setRefreshThresholdKbytesPercentage(Byte 
	refreshThresholdKbytesPercentage) {

    this.refreshThresholdKbytesPercentage = refreshThresholdKbytesPercentage;
    } // setRefreshThresholdKbytesPercentage



} // Class SAEndpointRefreshSettings
