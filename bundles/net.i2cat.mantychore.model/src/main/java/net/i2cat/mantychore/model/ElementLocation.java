/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class ElementLocation as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * ElementLocationBean Interface. The CIM class ElementLocation is described 
 * as follows: 
 * 
 * ElementLocation associates a ManagedElement with a location for 
 * positioning, inventory, maintenance and similar purposes. PhysicalElements 
 * can certainly have locations. They are explicitly defined in a subclass, 
 * PhysicalElement Location. However, other ManagedElements can also be 
 * associated with locations. For example, Organizations can be 'in' one or 
 * more locations, or Services can be restricted to a location. 
 */
public class ElementLocation  implements Serializable {

    /**
     * This constructor creates a ElementLocationBeanImpl Class which 
     * implements the ElementLocationBean Interface, and encapsulates the CIM 
     * class ElementLocation in a Java Bean. The CIM class ElementLocation is 
     * described as follows: 
     * 
     * ElementLocation associates a ManagedElement with a location for 
     * positioning, inventory, maintenance and similar purposes. 
     * PhysicalElements can certainly have locations. They are explicitly 
     * defined in a subclass, PhysicalElement Location. However, other 
     * ManagedElements can also be associated with locations. For example, 
     * Organizations can be 'in' one or more locations, or Services can be 
     * restricted to a location. 
     */
    public ElementLocation(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Element. 
     */
    private ManagedElement element;
    /**
     * This method returns the ElementLocation.Element property value. This 
     * property is described as follows: 
     * 
     * The ManagedElement whose location is specified.
     * 
     * @return	CIM_ManagedElement	current Element property value
     * @exception	Exception	
     */
    public ManagedElement getElement(){

    return this.element;
    } // getElement

    /**
     * This method sets the ElementLocation.Element property value. This 
     * property is described as follows: 
     * 
     * The ManagedElement whose location is specified.
     * 
     * @param	CIM_ManagedElement	new Element property value
     * @exception	Exception	
     */
    public void setElement(ManagedElement element) {

    this.element = element;
    } // setElement


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PhysicalLocation. 
     */
    private Location physicalLocation;
    /**
     * This method returns the ElementLocation.PhysicalLocation property 
     * value. This property is described as follows: 
     * 
     * The location of the element.
     * 
     * @return	CIM_Location	current PhysicalLocation property 
     * value 
     * @exception	Exception	
     */
    public Location getPhysicalLocation(){

    return this.physicalLocation;
    } // getPhysicalLocation

    /**
     * This method sets the ElementLocation.PhysicalLocation property value. 
     * This property is described as follows: 
     * 
     * The location of the element.
     * 
     * @param	CIM_Location	new PhysicalLocation property value
     * @exception	Exception	
     */
    public void setPhysicalLocation(Location physicalLocation) {

    this.physicalLocation = physicalLocation;
    } // setPhysicalLocation



} // Class ElementLocation
