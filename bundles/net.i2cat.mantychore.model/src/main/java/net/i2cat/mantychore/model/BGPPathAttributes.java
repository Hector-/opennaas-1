/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class BGPPathAttributes as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * BGPPathAttributesBean Interface. The CIM class BGPPathAttributes is 
 * described as follows: 
 * 
 * This class defines the per-path information used to process specific BGP 
 * attribute information, as defined in the bgp4PathAttrTable of RFC 1657. 
 */
public class BGPPathAttributes extends LogicalElement implements Serializable 
    {

    /**
     * This constructor creates a BGPPathAttributesBeanImpl Class which 
     * implements the BGPPathAttributesBean Interface, and encapsulates the 
     * CIM class BGPPathAttributes in a Java Bean. The CIM class 
     * BGPPathAttributes is described as follows: 
     * 
     * This class defines the per-path information used to process specific 
     * BGP attribute information, as defined in the bgp4PathAttrTable of RFC 
     * 1657. 
     */
    public BGPPathAttributes(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ASNumbers. 
     */
    private String aSNumbers;
    /**
     * This method returns the BGPPathAttributes.ASNumbers property value. 
     * This property is described as follows: 
     * 
     * A comma-separated list of AS numbers, as would be stored in the value 
     * portion of the path segment in the PathAttrASPathSegment property. 
     * This list can be ordered or unordered. 
     * 
     * @return	String	current ASNumbers property value
     * @exception	Exception	
     */
    public String getASNumbers(){

    return this.aSNumbers;
    } // getASNumbers

    /**
     * This method sets the BGPPathAttributes.ASNumbers property value. This 
     * property is described as follows: 
     * 
     * A comma-separated list of AS numbers, as would be stored in the value 
     * portion of the path segment in the PathAttrASPathSegment property. 
     * This list can be ordered or unordered. 
     * 
     * @param	String	new ASNumbers property value
     * @exception	Exception	
     */
    public void setASNumbers(String aSNumbers) {

    this.aSNumbers = aSNumbers;
    } // setASNumbers


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PathAttrNextHop. 
     */
    private String pathAttrNextHop;
    /**
     * This method returns the BGPPathAttributes.PathAttrNextHop property 
     * value. This property is described as follows: 
     * 
     * This is the address of the border router that should be used for the 
     * destination network. 
     * 
     * @return	String	current PathAttrNextHop property value
     * @exception	Exception	
     */
    public String getPathAttrNextHop(){

    return this.pathAttrNextHop;
    } // getPathAttrNextHop

    /**
     * This method sets the BGPPathAttributes.PathAttrNextHop property value. 
     * This property is described as follows: 
     * 
     * This is the address of the border router that should be used for the 
     * destination network. 
     * 
     * @param	String	new PathAttrNextHop property value
     * @exception	Exception	
     */
    public void setPathAttrNextHop(String pathAttrNextHop) {

    this.pathAttrNextHop = pathAttrNextHop;
    } // setPathAttrNextHop


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PathAttrASPathSegment. 
     */
    private Byte[] pathAttrASPathSegment;
    /**
     * This method returns the BGPPathAttributes.PathAttrASPathSegment 
     * property value. This property is described as follows: 
     * 
     * This property and its description are taken directly from RFC 1657. The 
     * property represents a sequence of AS path segments. Each AS path 
     * segment is represented by the tuple: <type, length, value> The type is 
     * a 1-octet field which has two possible values: 1 = AS_SET 2 = 
     * AS_SEQUENCE An AS_SET is an unordered set of ASs representing the path 
     * that an UPDATE message has traversed, and an AS_SEQUENCE is an ordered 
     * set of ASs representing the path that an UPDATE message has traversed. 
     * The length is a 1-octet field containing the number of ASs in the 
     * value field. The value field contains one or more AS numbers, each AS 
     * is represented in the octet string as a pair of octets according to 
     * the following algorithm: first-byte-of-pair = ASNumber / 256; 
     * second-byte-of-pair = ASNumber & 255; This property is mapped from the 
     * bgp4PathAttrASPathSegment MIB variable, which is an OctetString. Its 
     * length is defined as a minimum of 2 and a maximum of 255 octets. 
     * 
     * @return	Byte[]	current PathAttrASPathSegment property 
     * value 
     * @exception	Exception	
     */
    public Byte[] getPathAttrASPathSegment(){

    return this.pathAttrASPathSegment;
    } // getPathAttrASPathSegment

    /**
     * This method sets the BGPPathAttributes.PathAttrASPathSegment property 
     * value. This property is described as follows: 
     * 
     * This property and its description are taken directly from RFC 1657. The 
     * property represents a sequence of AS path segments. Each AS path 
     * segment is represented by the tuple: <type, length, value> The type is 
     * a 1-octet field which has two possible values: 1 = AS_SET 2 = 
     * AS_SEQUENCE An AS_SET is an unordered set of ASs representing the path 
     * that an UPDATE message has traversed, and an AS_SEQUENCE is an ordered 
     * set of ASs representing the path that an UPDATE message has traversed. 
     * The length is a 1-octet field containing the number of ASs in the 
     * value field. The value field contains one or more AS numbers, each AS 
     * is represented in the octet string as a pair of octets according to 
     * the following algorithm: first-byte-of-pair = ASNumber / 256; 
     * second-byte-of-pair = ASNumber & 255; This property is mapped from the 
     * bgp4PathAttrASPathSegment MIB variable, which is an OctetString. Its 
     * length is defined as a minimum of 2 and a maximum of 255 octets. 
     * 
     * @param	Byte[]	new PathAttrASPathSegment property value
     * @exception	Exception	
     */
    public void setPathAttrASPathSegment(Byte[] pathAttrASPathSegment) {

    this.pathAttrASPathSegment = pathAttrASPathSegment;
    } // setPathAttrASPathSegment


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PathAttrOrigin. 
     */

    public enum PathAttrOrigin{
    IGP,
    EGP,
    INCOMPLETE
    }
 public PathAttrOrigin pathAttrOrigin;
    /**
     * This method returns the BGPPathAttributes.PathAttrOrigin property 
     * value. This property is described as follows: 
     * 
     * This is an enumeration that defines the ultimate origin of the path 
     * information. The value 'IGP' means that the origin is interior; the 
     * value 'EGP' means that it was learned via an EGP; the value 
     * 'INCOMPLETE' means that the origin is undetermined. 
     * 
     * @return	short	current PathAttrOrigin property value
     * @exception	Exception	
     */
    public PathAttrOrigin getPathAttrOrigin(){

    return this.pathAttrOrigin;
    } // getPathAttrOrigin

    /**
     * This method sets the BGPPathAttributes.PathAttrOrigin property value. 
     * This property is described as follows: 
     * 
     * This is an enumeration that defines the ultimate origin of the path 
     * information. The value 'IGP' means that the origin is interior; the 
     * value 'EGP' means that it was learned via an EGP; the value 
     * 'INCOMPLETE' means that the origin is undetermined. 
     * 
     * @param	short	new PathAttrOrigin property value
     * @exception	Exception	
     */
    public void setPathAttrOrigin(PathAttrOrigin pathAttrOrigin){

    this.pathAttrOrigin = pathAttrOrigin;
    } // setPathAttrOrigin


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PathAttrMultiExitDisc. 
     */
    private int pathAttrMultiExitDisc;
    /**
     * This method returns the BGPPathAttributes.PathAttrMultiExitDisc 
     * property value. This property is described as follows: 
     * 
     * This metric is used to discriminate between multiple adjacent 
     * autonomous systems. A value of -1 indicates the absence of this 
     * attribute. The range of this attribute is defined to be -1 to 
     * 2147483647. 
     * 
     * @return	int	current PathAttrMultiExitDisc property value
     * @exception	Exception	
     */
    public int getPathAttrMultiExitDisc(){

    return this.pathAttrMultiExitDisc;
    } // getPathAttrMultiExitDisc

    /**
     * This method sets the BGPPathAttributes.PathAttrMultiExitDisc property 
     * value. This property is described as follows: 
     * 
     * This metric is used to discriminate between multiple adjacent 
     * autonomous systems. A value of -1 indicates the absence of this 
     * attribute. The range of this attribute is defined to be -1 to 
     * 2147483647. 
     * 
     * @param	int	new PathAttrMultiExitDisc property value
     * @exception	Exception	
     */
    public void setPathAttrMultiExitDisc(int pathAttrMultiExitDisc) {

    this.pathAttrMultiExitDisc = pathAttrMultiExitDisc;
    } // setPathAttrMultiExitDisc


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PathAttrLocalPref. 
     */
    private int pathAttrLocalPref;
    /**
     * This method returns the BGPPathAttributes.PathAttrLocalPref property 
     * value. This property is described as follows: 
     * 
     * This is the originating BGP4 speaker's degree of preference for an 
     * advertised route. A value of -1 indicates the absence of this 
     * attribute. The range of this attribute is defined to be -1 to 
     * 2147483647. 
     * 
     * @return	int	current PathAttrLocalPref property value
     * @exception	Exception	
     */
    public int getPathAttrLocalPref(){

    return this.pathAttrLocalPref;
    } // getPathAttrLocalPref

    /**
     * This method sets the BGPPathAttributes.PathAttrLocalPref property 
     * value. This property is described as follows: 
     * 
     * This is the originating BGP4 speaker's degree of preference for an 
     * advertised route. A value of -1 indicates the absence of this 
     * attribute. The range of this attribute is defined to be -1 to 
     * 2147483647. 
     * 
     * @param	int	new PathAttrLocalPref property value
     * @exception	Exception	
     */
    public void setPathAttrLocalPref(int pathAttrLocalPref) {

    this.pathAttrLocalPref = pathAttrLocalPref;
    } // setPathAttrLocalPref


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PathAttrAtomicAggregate. 
     */

    public enum PathAttrAtomicAggregate{
    UNKNOWN,
    LESS_SPECIFIC_NOT_SELECTED,
    LESS_SPECIFIC_SELECTED
    }
 public PathAttrAtomicAggregate pathAttrAtomicAggregate;
    /**
     * This method returns the BGPPathAttributes.PathAttrAtomicAggregate 
     * property value. This property is described as follows: 
     * 
     * This is an enumeration that defines whether or not the local system has 
     * selected a less specific route without selecting a more specific 
     * route. There are two values, 1 and 2, indicating that a less specific 
     * route has not and has been selected, respectively. This is a 32-bit 
     * integer to correspond to the IETF MIB. 
     * 
     * @return	int	current PathAttrAtomicAggregate property 
     * value 
     * @exception	Exception	
     */
    public PathAttrAtomicAggregate getPathAttrAtomicAggregate(){

    return this.pathAttrAtomicAggregate;
    } // getPathAttrAtomicAggregate

    /**
     * This method sets the BGPPathAttributes.PathAttrAtomicAggregate property 
     * value. This property is described as follows: 
     * 
     * This is an enumeration that defines whether or not the local system has 
     * selected a less specific route without selecting a more specific 
     * route. There are two values, 1 and 2, indicating that a less specific 
     * route has not and has been selected, respectively. This is a 32-bit 
     * integer to correspond to the IETF MIB. 
     * 
     * @param	int	new PathAttrAtomicAggregate property value
     * @exception	Exception	
     */
    public void setPathAttrAtomicAggregate(PathAttrAtomicAggregate 
	pathAttrAtomicAggregate){

    this.pathAttrAtomicAggregate = pathAttrAtomicAggregate;
    } // setPathAttrAtomicAggregate


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PathAttrAggregatorAS. 
     */
    private short pathAttrAggregatorAS;
    /**
     * This method returns the BGPPathAttributes.PathAttrAggregatorAS property 
     * value. This property is described as follows: 
     * 
     * This is the AS number of the last BGP speaker that performed route 
     * aggregation. A value of 0 indicates the absence of this attribute. The 
     * range of this attribute is defined to be 0 to 65535. 
     * 
     * @return	short	current PathAttrAggregatorAS property value
     * @exception	Exception	
     */
    public short getPathAttrAggregatorAS(){

    return this.pathAttrAggregatorAS;
    } // getPathAttrAggregatorAS

    /**
     * This method sets the BGPPathAttributes.PathAttrAggregatorAS property 
     * value. This property is described as follows: 
     * 
     * This is the AS number of the last BGP speaker that performed route 
     * aggregation. A value of 0 indicates the absence of this attribute. The 
     * range of this attribute is defined to be 0 to 65535. 
     * 
     * @param	short	new PathAttrAggregatorAS property value
     * @exception	Exception	
     */
    public void setPathAttrAggregatorAS(short pathAttrAggregatorAS) {

    this.pathAttrAggregatorAS = pathAttrAggregatorAS;
    } // setPathAttrAggregatorAS


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PathAttrAggregatorAddr. 
     */
    private String pathAttrAggregatorAddr;
    /**
     * This method returns the BGPPathAttributes.PathAttrAggregatorAddr 
     * property value. This property is described as follows: 
     * 
     * This is the IP address of the last BGP speaker that performed route 
     * aggregation. A value of 0.0.0.0 indicates the absence of this 
     * attribute. 
     * 
     * @return	String	current PathAttrAggregatorAddr property 
     * value 
     * @exception	Exception	
     */
    public String getPathAttrAggregatorAddr(){

    return this.pathAttrAggregatorAddr;
    } // getPathAttrAggregatorAddr

    /**
     * This method sets the BGPPathAttributes.PathAttrAggregatorAddr property 
     * value. This property is described as follows: 
     * 
     * This is the IP address of the last BGP speaker that performed route 
     * aggregation. A value of 0.0.0.0 indicates the absence of this 
     * attribute. 
     * 
     * @param	String	new PathAttrAggregatorAddr property value
     * @exception	Exception	
     */
    public void setPathAttrAggregatorAddr(String pathAttrAggregatorAddr) {

    this.pathAttrAggregatorAddr = pathAttrAggregatorAddr;
    } // setPathAttrAggregatorAddr


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PathAttrCalcLocalPref. 
     */
    private Short pathAttrCalcLocalPref;
    /**
     * This method returns the BGPPathAttributes.PathAttrCalcLocalPref 
     * property value. This property is described as follows: 
     * 
     * This is the degree of preference calculated by the receiving BGP 
     * speaker for an advertised route. A value of -1 indicates the absence 
     * of this attribute. The range of this attribute is defined to be -1 to 
     * 2147483647. 
     * 
     * @return	Short	current PathAttrCalcLocalPref property 
     * value 
     * @exception	Exception	
     */
    public Short getPathAttrCalcLocalPref(){

    return this.pathAttrCalcLocalPref;
    } // getPathAttrCalcLocalPref

    /**
     * This method sets the BGPPathAttributes.PathAttrCalcLocalPref property 
     * value. This property is described as follows: 
     * 
     * This is the degree of preference calculated by the receiving BGP 
     * speaker for an advertised route. A value of -1 indicates the absence 
     * of this attribute. The range of this attribute is defined to be -1 to 
     * 2147483647. 
     * 
     * @param	Short	new PathAttrCalcLocalPref property value
     * @exception	Exception	
     */
    public void setPathAttrCalcLocalPref(Short pathAttrCalcLocalPref) {

    this.pathAttrCalcLocalPref = pathAttrCalcLocalPref;
    } // setPathAttrCalcLocalPref


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PathAttrBest. 
     */

    public enum PathAttrBest{
    UNKNOWN,
    FALSE,
    TRUE
    }
 public PathAttrBest pathAttrBest;
    /**
     * This method returns the BGPPathAttributes.PathAttrBest property value. 
     * This property is described as follows: 
     * 
     * This is an indication of whether or not this route was chosen as the 
     * best BGP route. There are three possible values, 0 (Unknown), 1 
     * (FALSE) and 2 (TRUE). 
     * 
     * @return	short	current PathAttrBest property value
     * @exception	Exception	
     */
    public PathAttrBest getPathAttrBest(){

    return this.pathAttrBest;
    } // getPathAttrBest

    /**
     * This method sets the BGPPathAttributes.PathAttrBest property value. 
     * This property is described as follows: 
     * 
     * This is an indication of whether or not this route was chosen as the 
     * best BGP route. There are three possible values, 0 (Unknown), 1 
     * (FALSE) and 2 (TRUE). 
     * 
     * @param	short	new PathAttrBest property value
     * @exception	Exception	
     */
    public void setPathAttrBest(PathAttrBest pathAttrBest){

    this.pathAttrBest = pathAttrBest;
    } // setPathAttrBest


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PathAttrUnknown. 
     */
    private String[] pathAttrUnknown;
    /**
     * This method returns the BGPPathAttributes.PathAttrUnknown property 
     * value. This property is described as follows: 
     * 
     * This contains one or more path atributes not understood by this BGP 
     * speaker. It is a array of path attributes that are not understood. The 
     * number of attributes is placed in a separate property of this class, 
     * PathAttrUnknownNumber. 
     * 
     * @return	String[]	current PathAttrUnknown property value
     * @exception	Exception	
     */
    public String[] getPathAttrUnknown(){

    return this.pathAttrUnknown;
    } // getPathAttrUnknown

    /**
     * This method sets the BGPPathAttributes.PathAttrUnknown property value. 
     * This property is described as follows: 
     * 
     * This contains one or more path atributes not understood by this BGP 
     * speaker. It is a array of path attributes that are not understood. The 
     * number of attributes is placed in a separate property of this class, 
     * PathAttrUnknownNumber. 
     * 
     * @param	String[]	new PathAttrUnknown property value
     * @exception	Exception	
     */
    public void setPathAttrUnknown(String[] pathAttrUnknown) {

    this.pathAttrUnknown = pathAttrUnknown;
    } // setPathAttrUnknown


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PathAttrUnknownNumber. 
     */
    private short pathAttrUnknownNumber;
    /**
     * This method returns the BGPPathAttributes.PathAttrUnknownNumber 
     * property value. This property is described as follows: 
     * 
     * The number of unknown attributes in the array, PathAttrUnknown.
     * 
     * @return	short	current PathAttrUnknownNumber property 
     * value 
     * @exception	Exception	
     */
    public short getPathAttrUnknownNumber(){

    return this.pathAttrUnknownNumber;
    } // getPathAttrUnknownNumber

    /**
     * This method sets the BGPPathAttributes.PathAttrUnknownNumber property 
     * value. This property is described as follows: 
     * 
     * The number of unknown attributes in the array, PathAttrUnknown.
     * 
     * @param	short	new PathAttrUnknownNumber property value
     * @exception	Exception	
     */
    public void setPathAttrUnknownNumber(short pathAttrUnknownNumber) {

    this.pathAttrUnknownNumber = pathAttrUnknownNumber;
    } // setPathAttrUnknownNumber



} // Class BGPPathAttributes
