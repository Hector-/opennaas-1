/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class EgressConditioningServiceOnEndpoint as well as methods 
 * comparable to the invokeMethods defined for this class. This Class 
 * implements the EgressConditioningServiceOnEndpointBean Interface. The CIM 
 * class EgressConditioningServiceOnEndpoint is described as follows: 
 * 
 * This association represents the binding, in the egress direction, between a 
 * ProtocolEndpoint and the last ConditioningService that processes packets 
 * before they leave a network device (via that ProtocolEndpoint). This 
 * 'last' ConditioningService is ordinarily a scheduler, but it does not have 
 * to be. There can be multiple 'last' ConditioningServices for an Endpoint 
 * (for example, in the case of a fallback scheduler). Therefore, the 
 * cardinality for the Dependent object reference remains 0..n. On the other 
 * hand, a single ConditioningService cannot be the last one to process 
 * packets for multiple Endpoints. So, the cardinality of the Antecedent 
 * object reference is narrowed from 0..n to 0..1. 
 */
public class EgressConditioningServiceOnEndpoint extends ServiceSAPDependency 
    implements Serializable {

    /**
     * This constructor creates a EgressConditioningServiceOnEndpointBeanImpl 
     * Class which implements the EgressConditioningServiceOnEndpointBean 
     * Interface, and encapsulates the CIM class 
     * EgressConditioningServiceOnEndpoint in a Java Bean. The CIM class 
     * EgressConditioningServiceOnEndpoint is described as follows: 
     * 
     * This association represents the binding, in the egress direction, 
     * between a ProtocolEndpoint and the last ConditioningService that 
     * processes packets before they leave a network device (via that 
     * ProtocolEndpoint). This 'last' ConditioningService is ordinarily a 
     * scheduler, but it does not have to be. There can be multiple 'last' 
     * ConditioningServices for an Endpoint (for example, in the case of a 
     * fallback scheduler). Therefore, the cardinality for the Dependent 
     * object reference remains 0..n. On the other hand, a single 
     * ConditioningService cannot be the last one to process packets for 
     * multiple Endpoints. So, the cardinality of the Antecedent object 
     * reference is narrowed from 0..n to 0..1. 
     */
    public EgressConditioningServiceOnEndpoint(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Antecedent. 
     */
    private ProtocolEndpoint antecedent;
    /**
     * This method returns the EgressConditioningServiceOnEndpoint.Antecedent 
     * property value. This property is described as follows: 
     * 
     * The ProtocolEndpoint through which traffic leaves a network device.
     * 
     * @return	CIM_ProtocolEndpoint	current Antecedent property 
     * value 
     * @exception	Exception	
     */
    public ProtocolEndpoint getAntecedent(){

    return (ProtocolEndpoint)antecedent;
    } // getAntecedent

    /**
     * This method sets the EgressConditioningServiceOnEndpoint.Antecedent 
     * property value. This property is described as follows: 
     * 
     * The ProtocolEndpoint through which traffic leaves a network device.
     * 
     * @param	CIM_ProtocolEndpoint	new Antecedent property value
     * @exception	Exception	
     */
    public void setAntecedent(ProtocolEndpoint antecedent) {

    this.antecedent = antecedent;
    } // setAntecedent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Dependent. 
     */
    private ConditioningService dependent;
    /**
     * This method returns the EgressConditioningServiceOnEndpoint.Dependent 
     * property value. This property is described as follows: 
     * 
     * The ConditioningService which ends the traffic conditioning processing 
     * within a network device. 
     * 
     * @return	CIM_ConditioningService	current Dependent 
     * property value 
     * @exception	Exception	
     */
    public ConditioningService getDependent(){

    return (ConditioningService)dependent;
    } // getDependent

    /**
     * This method sets the EgressConditioningServiceOnEndpoint.Dependent 
     * property value. This property is described as follows: 
     * 
     * The ConditioningService which ends the traffic conditioning processing 
     * within a network device. 
     * 
     * @param	CIM_ConditioningService	new Dependent property 
     * value 
     * @exception	Exception	
     */
    public void setDependent(ConditioningService dependent) {

    this.dependent = dependent;
    } // setDependent



} // Class EgressConditioningServiceOnEndpoint
