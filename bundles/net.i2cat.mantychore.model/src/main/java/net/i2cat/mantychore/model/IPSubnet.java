/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class IPSubnet as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * IPSubnetBean Interface. The CIM class IPSubnet is described as follows: 
 * 
 * An IPSubnet represents a group of related IPProtocolEndpoints that can 
 * communicate with each other directly using IP. It is used for describing 
 * the characteristics of the grouping. Since this class' superclass 
 * (LogicalNetwork) has been deprecated (in order to define more consistent 
 * 'collection' semantics), this class is also deprecated. 
 */
    @Deprecated
    @Entity
public class IPSubnet extends LogicalNetwork implements Serializable {

    /**
     * This constructor creates a IPSubnetBeanImpl Class which implements the 
     * IPSubnetBean Interface, and encapsulates the CIM class IPSubnet in a 
     * Java Bean. The CIM class IPSubnet is described as follows: 
     * 
     * An IPSubnet represents a group of related IPProtocolEndpoints that can 
     * communicate with each other directly using IP. It is used for 
     * describing the characteristics of the grouping. Since this class' 
     * superclass (LogicalNetwork) has been deprecated (in order to define 
     * more consistent 'collection' semantics), this class is also 
     * deprecated. 
     */
    public IPSubnet(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SubnetNumber. 
     */
    @Deprecated    private String subnetNumber;
    /**
     * This method returns the IPSubnet.subnetNumber property value. This 
     * property is described as follows: 
     * 
     * The IP address of the entire subnet, formatted according to the 
     * appropriate convention as defined in the AddressType property of this 
     * class. 
     * 
     * @return	String	current subnetNumber property value
     * @exception	Exception	
     */
    @Deprecated
    public String getsubnetNumber(){

    return this.subnetNumber;
    } // getsubnetNumber

    /**
     * This method sets the IPSubnet.subnetNumber property value. This 
     * property is described as follows: 
     * 
     * The IP address of the entire subnet, formatted according to the 
     * appropriate convention as defined in the AddressType property of this 
     * class. 
     * 
     * @param	String	new subnetNumber property value
     * @exception	Exception	
     */
    @Deprecated
    public void setsubnetNumber(String subnetNumber) {

    this.subnetNumber = subnetNumber;
    } // setsubnetNumber


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SubnetMask. 
     */
    @Deprecated    private String subnetMask;
    /**
     * This method returns the IPSubnet.subnetMask property value. This 
     * property is described as follows: 
     * 
     * The mask for the starting IPv4 address of the IPSubnet, if needed 
     * (i.e., if the AddressType property is 1, "IPv4"). 
     * 
     * @return	String	current subnetMask property value
     * @exception	Exception	
     */
    @Deprecated
    public String getsubnetMask(){

    return this.subnetMask;
    } // getsubnetMask

    /**
     * This method sets the IPSubnet.subnetMask property value. This property 
     * is described as follows: 
     * 
     * The mask for the starting IPv4 address of the IPSubnet, if needed 
     * (i.e., if the AddressType property is 1, "IPv4"). 
     * 
     * @param	String	new subnetMask property value
     * @exception	Exception	
     */
    @Deprecated
    public void setsubnetMask(String subnetMask) {

    this.subnetMask = subnetMask;
    } // setsubnetMask


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PrefixLength. 
     */
    @Deprecated    private short prefixLength;
    /**
     * This method returns the IPSubnet.prefixLength property value. This 
     * property is described as follows: 
     * 
     * The prefix length for IPv6 addresses in the IPSubnet, if needed (i.e., 
     * if the AddressType property is 2, "IPv6"). 
     * 
     * @return	short	current prefixLength property value
     * @exception	Exception	
     */
    @Deprecated
    public short getprefixLength(){

    return this.prefixLength;
    } // getprefixLength

    /**
     * This method sets the IPSubnet.prefixLength property value. This 
     * property is described as follows: 
     * 
     * The prefix length for IPv6 addresses in the IPSubnet, if needed (i.e., 
     * if the AddressType property is 2, "IPv6"). 
     * 
     * @param	short	new prefixLength property value
     * @exception	Exception	
     */
    @Deprecated
    public void setprefixLength(short prefixLength) {

    this.prefixLength = prefixLength;
    } // setprefixLength


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property AddressType. 
     */
    @Deprecated
    public enum AddressType{
    UNKNOWN,
    IPV4,
    IPV6
    }
    @Deprecated
    private AddressType addressType;
    /**
     * This method returns the IPSubnet.AddressType property value. This 
     * property is described as follows: 
     * 
     * An enumeration that describes the format of the address properties in 
     * IPSubnet. 
     * 
     * @return	int	current AddressType property value
     * @exception	Exception	
     */
    @Deprecated
    public AddressType getAddressType(){

    return this.addressType;
    } // getAddressType

    /**
     * This method sets the IPSubnet.AddressType property value. This property 
     * is described as follows: 
     * 
     * An enumeration that describes the format of the address properties in 
     * IPSubnet. 
     * 
     * @param	int	new AddressType property value
     * @exception	Exception	
     */
    @Deprecated
    public void setAddressType(AddressType addressType){

    this.addressType = addressType;
    } // setAddressType



} // Class IPSubnet
