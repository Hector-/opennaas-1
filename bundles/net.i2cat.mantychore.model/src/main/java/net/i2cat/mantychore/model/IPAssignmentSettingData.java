/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Tue Nov 30 
 * 10:54:51 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.io.Serializable;

/**
 * This Class contains accessor and mutator methods for all properties defined in the CIM class IPAssignmentSettingData as well as methods comparable
 * to the invokeMethods defined for this class. This Class implements the IPAssignmentSettingDataBean Interface. The CIM class IPAssignmentSettingData
 * is described as follows:
 * 
 * This SettingData instance is the aggregation point identifying an IP configuration. Multiple IP configurations could exist for a target. Each
 * configuration is represented with an instance of IPAssignmentSettingData. The details of the IP configuration are defined by instances of
 * sub-classes of this class (i.e. StaticIPAssignmentSettingData, DHCPSettingData, DNSSettingData). These instances are associated with the
 * IPAssignmentSettingData instance using the OrderedComponent or ConcreteComponent associations. For example, a static IP configuration would be
 * represented by an instance of IPAssignmentSettingData and an instance of StaticIPAssignmentSettingData associated via an instance of
 * ConcreteComponent. A static IP configuration including DNS would be modeled using an instance of IPAssignmentSettingData, DNSSettingData, and
 * StaticIPAssignmentSettingData. The DNSSettingData and StaticIPAssignmentSettingData instance would be associated with the IPAssignmentSettingData
 * using instances of ConcreteComponent.
 */
public class IPAssignmentSettingData extends SettingData implements
		Serializable {

	/**
	 * This constructor creates a IPAssignmentSettingDataBeanImpl Class which implements the IPAssignmentSettingDataBean Interface, and encapsulates
	 * the CIM class IPAssignmentSettingData in a Java Bean. The CIM class IPAssignmentSettingData is described as follows:
	 * 
	 * This SettingData instance is the aggregation point identifying an IP configuration. Multiple IP configurations could exist for a target. Each
	 * configuration is represented with an instance of IPAssignmentSettingData. The details of the IP configuration are defined by instances of
	 * sub-classes of this class (i.e. StaticIPAssignmentSettingData, DHCPSettingData, DNSSettingData). These instances are associated with the
	 * IPAssignmentSettingData instance using the OrderedComponent or ConcreteComponent associations. For example, a static IP configuration would be
	 * represented by an instance of IPAssignmentSettingData and an instance of StaticIPAssignmentSettingData associated via an instance of
	 * ConcreteComponent. A static IP configuration including DNS would be modeled using an instance of IPAssignmentSettingData, DNSSettingData, and
	 * StaticIPAssignmentSettingData. The DNSSettingData and StaticIPAssignmentSettingData instance would be associated with the
	 * IPAssignmentSettingData using instances of ConcreteComponent.
	 */
	public IPAssignmentSettingData() {
	};

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property AddressOrigin.
	 */
	//
	// public enum AddressOrigin{
	// UNKNOWN,
	// OTHER,
	// NOT_APPLICABLE,
	// STATIC,
	// DHCP,
	// BOOTP,
	// DMTF_RESERVED,
	// VENDOR_RESERVED
	// }AddressOrigin addressOrigin;
	// /**
	// * This method returns the IPAssignmentSettingData.AddressOrigin property
	// * value. This property is described as follows:
	// *
	// * AddressOrigin identifies the method by which the IP Address, Subnet
	// * Mask, and Gateway were assigned to the IPProtocolEndpoint. A value of
	// * 2 indicates that the application of the IPAssignmentSettingData
	// * instance does not affect these properties: A value of 3 indicates that
	// * values for the properties are contained in the IPAssignmentSettingData
	// * instance. A value of 4 indicates that the values will be assigned via
	// * DHCP. A value of 5 indicates that the values will be assigned via
	// * BOOTP.
	// *
	// * @return short current AddressOrigin property value
	// * @exception Exception
	// */
	// public AddressOrigin getAddressOrigin(){
	//
	// return this.addressOrigin;
	// } // getAddressOrigin
	//
	// /**
	// * This method sets the IPAssignmentSettingData.AddressOrigin property
	// * value. This property is described as follows:
	// *
	// * AddressOrigin identifies the method by which the IP Address, Subnet
	// * Mask, and Gateway were assigned to the IPProtocolEndpoint. A value of
	// * 2 indicates that the application of the IPAssignmentSettingData
	// * instance does not affect these properties: A value of 3 indicates that
	// * values for the properties are contained in the IPAssignmentSettingData
	// * instance. A value of 4 indicates that the values will be assigned via
	// * DHCP. A value of 5 indicates that the values will be assigned via
	// * BOOTP.
	// *
	// * @param short new AddressOrigin property value
	// * @exception Exception
	// */
	// public void setAddressOrigin(AddressOrigin addressOrigin){
	//
	// this.addressOrigin = addressOrigin;
	// } // setAddressOrigin

	/**
	 * The following constants are defined for use with the ValueMap/Values qualified property ProtocolIFType.
	 */

	public enum ProtocolIFType {
		UNKNOWN,
		DMTF_RESERVED,
		IPV4,
		IPV6,
		VENDOR_RESERVED
	}

	ProtocolIFType	protocolIFType;

	/**
	 * This method returns the IPAssignmentSettingData.ProtocolIFType property value. This property is described as follows:
	 * 
	 * An enumeration that describes the IP version.
	 * 
	 * @return short current ProtocolIFType property value
	 * @exception Exception
	 */
	public ProtocolIFType getProtocolIFType() {

		return this.protocolIFType;
	} // getProtocolIFType

	/**
	 * This method sets the IPAssignmentSettingData.ProtocolIFType property value. This property is described as follows:
	 * 
	 * An enumeration that describes the IP version.
	 * 
	 * @param short new ProtocolIFType property value
	 * @exception Exception
	 */
	public void setProtocolIFType(ProtocolIFType protocolIFType) {

		this.protocolIFType = protocolIFType;
	} // setProtocolIFType

} // Class IPAssignmentSettingData
