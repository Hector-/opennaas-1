/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class ServiceAvailableToElement as well as methods comparable 
 * to the invokeMethods defined for this class. This Class implements the 
 * ServiceAvailableToElementBean Interface. The CIM class 
 * ServiceAvailableToElement is described as follows: 
 * 
 * CIM_ServiceAvailableToElement conveys the semantics of a Service that is 
 * available for the use of a ManagedElement. An example of an available 
 * Service is that a Processor and an enclosure (a PhysicalElement) can use 
 * AlertOnLAN Services to signal an incomplete or erroneous boot. In reality, 
 * AlertOnLAN is simply a HostedService on a computer system that is 
 * generally available for use and is not a dependency of the processor or 
 * enclosure. To describe that the use of this service might be restricted or 
 * have limited availability or applicability, the 
 * CIM_ServiceAvailableToElement association would be instantiated between 
 * the Service and specific CIM_Processors and CIM_Chassis. 
 */
public class ServiceAvailableToElement  implements Serializable {

    /**
     * This constructor creates a ServiceAvailableToElementBeanImpl Class 
     * which implements the ServiceAvailableToElementBean Interface, and 
     * encapsulates the CIM class ServiceAvailableToElement in a Java Bean. 
     * The CIM class ServiceAvailableToElement is described as follows: 
     * 
     * CIM_ServiceAvailableToElement conveys the semantics of a Service that 
     * is available for the use of a ManagedElement. An example of an 
     * available Service is that a Processor and an enclosure (a 
     * PhysicalElement) can use AlertOnLAN Services to signal an incomplete 
     * or erroneous boot. In reality, AlertOnLAN is simply a HostedService on 
     * a computer system that is generally available for use and is not a 
     * dependency of the processor or enclosure. To describe that the use of 
     * this service might be restricted or have limited availability or 
     * applicability, the CIM_ServiceAvailableToElement association would be 
     * instantiated between the Service and specific CIM_Processors and 
     * CIM_Chassis. 
     */
    public ServiceAvailableToElement(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ServiceProvided. 
     */
    private Service serviceProvided;
    /**
     * This method returns the ServiceAvailableToElement.ServiceProvided 
     * property value. This property is described as follows: 
     * 
     * The Service that is available.
     * 
     * @return	CIM_Service	current ServiceProvided property 
     * value 
     * @exception	Exception	
     */
    public Service getServiceProvided(){

    return this.serviceProvided;
    } // getServiceProvided

    /**
     * This method sets the ServiceAvailableToElement.ServiceProvided property 
     * value. This property is described as follows: 
     * 
     * The Service that is available.
     * 
     * @param	CIM_Service	new ServiceProvided property value
     * @exception	Exception	
     */
    public void setServiceProvided(Service serviceProvided) {

    this.serviceProvided = serviceProvided;
    } // setServiceProvided


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property UserOfService. 
     */
    private ManagedElement userOfService;
    /**
     * This method returns the ServiceAvailableToElement.UserOfService 
     * property value. This property is described as follows: 
     * 
     * The ManagedElement that can use the Service.
     * 
     * @return	CIM_ManagedElement	current UserOfService property 
     * value 
     * @exception	Exception	
     */
    public ManagedElement getUserOfService(){

    return this.userOfService;
    } // getUserOfService

    /**
     * This method sets the ServiceAvailableToElement.UserOfService property 
     * value. This property is described as follows: 
     * 
     * The ManagedElement that can use the Service.
     * 
     * @param	CIM_ManagedElement	new UserOfService property 
     * value 
     * @exception	Exception	
     */
    public void setUserOfService(ManagedElement userOfService) {

    this.userOfService = userOfService;
    } // setUserOfService



} // Class ServiceAvailableToElement
