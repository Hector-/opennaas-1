/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class CalculationBasedOnQueue as well as methods comparable to 
 * the invokeMethods defined for this class. This Class implements the 
 * CalculationBasedOnQueueBean Interface. The CIM class 
 * CalculationBasedOnQueue is described as follows: 
 * 
 * This association establishes a dependency relationship between a 
 * QueuingService and an instance of the DropThresholdCalculationService 
 * class. The queue's current depth is used by the CalculationService in 
 * calculating an average/smoothed queue depth. 
 */
public class CalculationBasedOnQueue extends ServiceServiceDependency 
    implements Serializable {

    /**
     * This constructor creates a CalculationBasedOnQueueBeanImpl Class which 
     * implements the CalculationBasedOnQueueBean Interface, and encapsulates 
     * the CIM class CalculationBasedOnQueue in a Java Bean. The CIM class 
     * CalculationBasedOnQueue is described as follows: 
     * 
     * This association establishes a dependency relationship between a 
     * QueuingService and an instance of the DropThresholdCalculationService 
     * class. The queue's current depth is used by the CalculationService in 
     * calculating an average/smoothed queue depth. 
     */
    public CalculationBasedOnQueue(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Antecedent. 
     */
    private QueuingService antecedent;
    /**
     * This method returns the CalculationBasedOnQueue.Antecedent property 
     * value. This property is described as follows: 
     * 
     * The queue examined by the CalculationService.
     * 
     * @return	CIM_QueuingService	current Antecedent property 
     * value 
     * @exception	Exception	
     */
    public QueuingService getAntecedent(){

    return (QueuingService)antecedent;
    } // getAntecedent

    /**
     * This method sets the CalculationBasedOnQueue.Antecedent property value. 
     * This property is described as follows: 
     * 
     * The queue examined by the CalculationService.
     * 
     * @param	CIM_QueuingService	new Antecedent property value
     * @exception	Exception	
     */
    public void setAntecedent(QueuingService antecedent) {

    this.antecedent = antecedent;
    } // setAntecedent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Dependent. 
     */
    private DropThresholdCalculationService dependent;
    /**
     * This method returns the CalculationBasedOnQueue.Dependent property 
     * value. This property is described as follows: 
     * 
     * The CalculationService that provides an average queue depth.
     * 
     * @return	CIM_DropThresholdCalculationService	current 
     * Dependent property value 
     * @exception	Exception	
     */
    public DropThresholdCalculationService getDependent(){

    return (DropThresholdCalculationService)dependent;
    } // getDependent

    /**
     * This method sets the CalculationBasedOnQueue.Dependent property value. 
     * This property is described as follows: 
     * 
     * The CalculationService that provides an average queue depth.
     * 
     * @param	CIM_DropThresholdCalculationService	new Dependent 
     * property value 
     * @exception	Exception	
     */
    public void setDependent(DropThresholdCalculationService dependent) {

    this.dependent = dependent;
    } // setDependent



} // Class CalculationBasedOnQueue
