/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class QueueHierarchy as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * QueueHierarchyBean Interface. The CIM class QueueHierarchy is described as 
 * follows: 
 * 
 * Describes the reliance of a QueuingService on other, supporting queues and 
 * their QueuingServices. A given Service can only act in support of one 
 * QueuingService; but a higher level queue may be supported by many lower 
 * level QueuingServices. The class is deprecated since a queue only stores 
 * network traffic. It does not support other queues, or manipulate their 
 * entries. This type of processing is described using NextService 
 * associations 'rightwards' from the QueuingService. These associations 
 * reference 'other' ConditioningServices that may send traffic to 'other' 
 * queues). 
 */
public class QueueHierarchy extends ServiceServiceDependency implements 
    Serializable {

    /**
     * This constructor creates a QueueHierarchyBeanImpl Class which 
     * implements the QueueHierarchyBean Interface, and encapsulates the CIM 
     * class QueueHierarchy in a Java Bean. The CIM class QueueHierarchy is 
     * described as follows: 
     * 
     * Describes the reliance of a QueuingService on other, supporting queues 
     * and their QueuingServices. A given Service can only act in support of 
     * one QueuingService; but a higher level queue may be supported by many 
     * lower level QueuingServices. The class is deprecated since a queue 
     * only stores network traffic. It does not support other queues, or 
     * manipulate their entries. This type of processing is described using 
     * NextService associations 'rightwards' from the QueuingService. These 
     * associations reference 'other' ConditioningServices that may send 
     * traffic to 'other' queues). 
     */
    public QueueHierarchy(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Antecedent. 
     */
    @Deprecated    private QueuingService antecedent;
    /**
     * This method returns the QueueHierarchy.Antecedent property value. This 
     * property is described as follows: 
     * 
     * The supporting queue(s) and its QueuingService. This Service can only 
     * support at most one, higher level QueuingService. 
     * 
     * @return	CIM_QueuingService	current Antecedent property 
     * value 
     * @exception	Exception	
     */
    @Deprecated
    public QueuingService getAntecedent(){

    return (QueuingService)antecedent;
    } // getAntecedent

    /**
     * This method sets the QueueHierarchy.Antecedent property value. This 
     * property is described as follows: 
     * 
     * The supporting queue(s) and its QueuingService. This Service can only 
     * support at most one, higher level QueuingService. 
     * 
     * @param	CIM_QueuingService	new Antecedent property value
     * @exception	Exception	
     */
    @Deprecated
    public void setAntecedent(QueuingService antecedent) {

    this.antecedent = antecedent;
    } // setAntecedent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Dependent. 
     */
    @Deprecated    private QueuingService dependent;
    /**
     * This method returns the QueueHierarchy.Dependent property value. This 
     * property is described as follows: 
     * 
     * The QueuingService dependent on other, supporting Queuing Services.
     * 
     * @return	CIM_QueuingService	current Dependent property 
     * value 
     * @exception	Exception	
     */
    @Deprecated
    public QueuingService getDependent(){

    return (QueuingService)dependent;
    } // getDependent

    /**
     * This method sets the QueueHierarchy.Dependent property value. This 
     * property is described as follows: 
     * 
     * The QueuingService dependent on other, supporting Queuing Services.
     * 
     * @param	CIM_QueuingService	new Dependent property value
     * @exception	Exception	
     */
    @Deprecated
    public void setDependent(QueuingService dependent) {

    this.dependent = dependent;
    } // setDependent



} // Class QueueHierarchy
