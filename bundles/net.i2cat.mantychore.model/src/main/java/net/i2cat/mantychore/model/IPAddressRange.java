/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Nov 29 
 * 11:50:57 CET 2010. 
 */

package net.i2cat.mantychore.model;

import javax.wbem.client.*;
import javax.wbem.cim.*;
import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class IPAddressRange as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * IPAddressRangeBean Interface. The CIM class IPAddressRange is described as 
 * follows: 
 * 
 * IPAddressRange represents a grouping of specific addresses, and provides 
 * additional semantics for this group if appropriate. The class is 
 * deprecated in lieu of the concrete class RangeOfIPAddresses since there is 
 * sufficient information for the class to be instantiated. In addition, an 
 * address range should be defined in the context of a System (for example, a 
 * network element or an admin domain). These semantics are incorporated in 
 * the RangeOfIPAddresses class. 
 */
public class IPAddressRange extends CollectionOfMSEs implements Serializable 
    {

    /**
     * This constructor creates a IPAddressRangeBeanImpl Class which 
     * implements the IPAddressRangeBean Interface, and encapsulates the CIM 
     * class IPAddressRange in a Java Bean. The CIM class IPAddressRange is 
     * described as follows: 
     * 
     * IPAddressRange represents a grouping of specific addresses, and 
     * provides additional semantics for this group if appropriate. The class 
     * is deprecated in lieu of the concrete class RangeOfIPAddresses since 
     * there is sufficient information for the class to be instantiated. In 
     * addition, an address range should be defined in the context of a 
     * System (for example, a network element or an admin domain). These 
     * semantics are incorporated in the RangeOfIPAddresses class. 
     */
    protected IPAddressRange(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property StartAddress. 
     */
    @Deprecated    private String startAddress;
    /**
     * This method returns the IPAddressRange.StartAddress property value. 
     * This property is described as follows: 
     * 
     * The starting IP address of the AddressRange, formatted according to the 
     * appropriate convention as defined in the AddressType property of this 
     * class (e.g., 171.79.6.40). 
     * 
     * @return	String	current StartAddress property value
     * @exception	Exception	
     */
    @Deprecated
    public String getStartAddress(){

    return this.startAddress;
    } // getStartAddress

    /**
     * This method sets the IPAddressRange.StartAddress property value. This 
     * property is described as follows: 
     * 
     * The starting IP address of the AddressRange, formatted according to the 
     * appropriate convention as defined in the AddressType property of this 
     * class (e.g., 171.79.6.40). 
     * 
     * @param	String	new StartAddress property value
     * @exception	Exception	
     */
    @Deprecated
    public void setStartAddress(String startAddress) {

    this.startAddress = startAddress;
    } // setStartAddress


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EndAddress. 
     */
    @Deprecated    private String endAddress;
    /**
     * This method returns the IPAddressRange.EndAddress property value. This 
     * property is described as follows: 
     * 
     * The ending IP address of the AddressRange, formatted according to the 
     * appropriate convention as defined in the AddressType property of this 
     * class (e.g., 171.79.6.40). 
     * 
     * @return	String	current EndAddress property value
     * @exception	Exception	
     */
    @Deprecated
    public String getEndAddress(){

    return this.endAddress;
    } // getEndAddress

    /**
     * This method sets the IPAddressRange.EndAddress property value. This 
     * property is described as follows: 
     * 
     * The ending IP address of the AddressRange, formatted according to the 
     * appropriate convention as defined in the AddressType property of this 
     * class (e.g., 171.79.6.40). 
     * 
     * @param	String	new EndAddress property value
     * @exception	Exception	
     */
    @Deprecated
    public void setEndAddress(String endAddress) {

    this.endAddress = endAddress;
    } // setEndAddress


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property TypeOfAddress. 
     */
    @Deprecated
    public enum TypeOfAddress{
    UNKNOWN,
    IPV4,
    IPV6
    }TypeOfAddress typeOfAddress;
    /**
     * This method returns the IPAddressRange.TypeOfAddress property value. 
     * This property is described as follows: 
     * 
     * An enumeration that defines how to format the address and mask of the 
     * address range that defines this IPSubnet. Whenever possible, 
     * IPv4-compatible addresses should be used instead of IPv6 addresses 
     * (see RFC 2373, section 2.5.4). In order to have a consistent format 
     * for IPv4 addresses in a mixed IPv4/v6 environment, all IPv4 addresses 
     * and both IPv4-compatible IPv6 addresses and IPv4-mapped IPv6 
     * addresses, per RFC 2373, section 2.5.4, should be formatted in 
     * standard IPv4 format. 
     * 
     * @return	short	current TypeOfAddress property value
     * @exception	Exception	
     */
    @Deprecated
    public TypeOfAddress getTypeOfAddress(){

    return this.typeOfAddress;
    } // getTypeOfAddress

    /**
     * This method sets the IPAddressRange.TypeOfAddress property value. This 
     * property is described as follows: 
     * 
     * An enumeration that defines how to format the address and mask of the 
     * address range that defines this IPSubnet. Whenever possible, 
     * IPv4-compatible addresses should be used instead of IPv6 addresses 
     * (see RFC 2373, section 2.5.4). In order to have a consistent format 
     * for IPv4 addresses in a mixed IPv4/v6 environment, all IPv4 addresses 
     * and both IPv4-compatible IPv6 addresses and IPv4-mapped IPv6 
     * addresses, per RFC 2373, section 2.5.4, should be formatted in 
     * standard IPv4 format. 
     * 
     * @param	short	new TypeOfAddress property value
     * @exception	Exception	
     */
    @Deprecated
    public void setTypeOfAddress(TypeOfAddress typeOfAddress){

    this.typeOfAddress = typeOfAddress;
    } // setTypeOfAddress


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property AllocationRegion. 
     */
    @Deprecated
    public enum AllocationRegion{
    UNKNOWN,
    MULTIREGIONAL_192_0_0_0_TO_193_255_255_255,
    EUROPE_194_0_0_0_TO_195_255_255_255,
    OTHERS_196_0_0_0_TO_197_255_255_255,
    NORTH_AMERICA_198_0_0_0_TO_199_255_255_255,
    CENTRAL_SOUTH_AMERICA_200_0_0_0_TO_201_255_255_255,
    PACIFIC_RIM_202_0_0_0_TO_203_255_255_255,
    OTHERS_204_0_0_0_TO_205_255_255_255,
    OTHERS_206_0_0_0_TO_207_255_255_255
    }AllocationRegion allocationRegion;
    /**
     * This method returns the IPAddressRange.AllocationRegion property value. 
     * This property is described as follows: 
     * 
     * This attribute defines the region that addresses can be allocated to.
     * 
     * @return	short	current AllocationRegion property value
     * @exception	Exception	
     */
    @Deprecated
    public AllocationRegion getAllocationRegion(){

    return this.allocationRegion;
    } // getAllocationRegion

    /**
     * This method sets the IPAddressRange.AllocationRegion property value. 
     * This property is described as follows: 
     * 
     * This attribute defines the region that addresses can be allocated to.
     * 
     * @param	short	new AllocationRegion property value
     * @exception	Exception	
     */
    @Deprecated
    public void setAllocationRegion(AllocationRegion allocationRegion){

    this.allocationRegion = allocationRegion;
    } // setAllocationRegion



} // Class IPAddressRange
