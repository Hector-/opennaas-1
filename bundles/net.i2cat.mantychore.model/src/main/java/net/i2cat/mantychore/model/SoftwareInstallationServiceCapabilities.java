/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class SoftwareInstallationServiceCapabilities as well as 
 * methods comparable to the invokeMethods defined for this class. This Class 
 * implements the SoftwareInstallationServiceCapabilitiesBean Interface. The 
 * CIM class SoftwareInstallationServiceCapabilities is described as follows: 
 * 
 * A subclass of capabilities that defines the capabilities of a 
 * SoftwareInstallationService. A single instance of 
 * SoftwareInstallationServiceCapabilities is associated with a 
 * SoftwareInstallationService using ElementCapabilities. 
 */
    @Entity
public class SoftwareInstallationServiceCapabilities extends Capabilities 
    implements Serializable {

    /**
     * This constructor creates a 
     * SoftwareInstallationServiceCapabilitiesBeanImpl Class which implements 
     * the SoftwareInstallationServiceCapabilitiesBean Interface, and 
     * encapsulates the CIM class SoftwareInstallationServiceCapabilities in 
     * a Java Bean. The CIM class SoftwareInstallationServiceCapabilities is 
     * described as follows: 
     * 
     * A subclass of capabilities that defines the capabilities of a 
     * SoftwareInstallationService. A single instance of 
     * SoftwareInstallationServiceCapabilities is associated with a 
     * SoftwareInstallationService using ElementCapabilities. 
     */
    public SoftwareInstallationServiceCapabilities(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedAsynchronousActions. 
     */

    public enum SupportedAsynchronousActions{
    NONE_SUPPORTED,
    INSTALL_FROM_SOFTWARE_IDENTITY,
    INSTALL_FROM_BYTESTREAM,
    INSTALL_FROM_URI
    }
    private SupportedAsynchronousActions supportedAsynchronousActions;
    /**
     * This method returns the 
     * SoftwareInstallationServiceCapabilities.SupportedAsynchronousActions 
     * property value. This property is described as follows: 
     * 
     * Enumeration indicating what operations will be executed as asynchronous 
     * jobs. If an operation is included in both this and 
     * SupportedSynchronousActions then the underlying implementation is 
     * indicating that it may or may not create a job. If a Job is created, 
     * then the methods in SoftwareInstallationService return a reference to 
     * that Job as the Job parameter. 
     * 
     * @return	int	current SupportedAsynchronousActions property 
     * value 
     * @exception	Exception	
     */
    public SupportedAsynchronousActions getSupportedAsynchronousActions(){

    return this.supportedAsynchronousActions;
    } // getSupportedAsynchronousActions

    /**
     * This method sets the 
     * SoftwareInstallationServiceCapabilities.SupportedAsynchronousActions 
     * property value. This property is described as follows: 
     * 
     * Enumeration indicating what operations will be executed as asynchronous 
     * jobs. If an operation is included in both this and 
     * SupportedSynchronousActions then the underlying implementation is 
     * indicating that it may or may not create a job. If a Job is created, 
     * then the methods in SoftwareInstallationService return a reference to 
     * that Job as the Job parameter. 
     * 
     * @param	int	new SupportedAsynchronousActions property 
     * value 
     * @exception	Exception	
     */
    public void setSupportedAsynchronousActions(SupportedAsynchronousActions 
	supportedAsynchronousActions){

    this.supportedAsynchronousActions = supportedAsynchronousActions;
    } // setSupportedAsynchronousActions


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedSynchronousActions. 
     */

    public enum SupportedSynchronousActions{
    NONE_SUPPORTED,
    INSTALL_FROM_SOFTWARE_IDENTITY,
    INSTALL_FROM_BYTESTREAM,
    INSTALL_FROM_URI
    }
    private SupportedSynchronousActions supportedSynchronousActions;
    /**
     * This method returns the 
     * SoftwareInstallationServiceCapabilities.SupportedSynchronousActions 
     * property value. This property is described as follows: 
     * 
     * Enumeration indicating what operations will be executed without the 
     * creation of a job. If an operation is included in both this and 
     * SupportedAsynchronousActions then the underlying instrumentation is 
     * indicating that it may or may not create a job. 
     * 
     * @return	int	current SupportedSynchronousActions property 
     * value 
     * @exception	Exception	
     */
    public SupportedSynchronousActions getSupportedSynchronousActions(){

    return this.supportedSynchronousActions;
    } // getSupportedSynchronousActions

    /**
     * This method sets the 
     * SoftwareInstallationServiceCapabilities.SupportedSynchronousActions 
     * property value. This property is described as follows: 
     * 
     * Enumeration indicating what operations will be executed without the 
     * creation of a job. If an operation is included in both this and 
     * SupportedAsynchronousActions then the underlying instrumentation is 
     * indicating that it may or may not create a job. 
     * 
     * @param	int	new SupportedSynchronousActions property value
     * @exception	Exception	
     */
    public void setSupportedSynchronousActions(SupportedSynchronousActions 
	supportedSynchronousActions){

    this.supportedSynchronousActions = supportedSynchronousActions;
    } // setSupportedSynchronousActions


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedTargetTypes. 
     */
    private String[] supportedTargetTypes;
    /**
     * This method returns the 
     * SoftwareInstallationServiceCapabilities.supportedTargetTypes property 
     * value. This property is described as follows: 
     * 
     * An array containing a list of SoftwareIdentity.TargetType properties 
     * that this service 'knows' how to install. TargetType is an application 
     * specific string which is invariant across version or name changes of 
     * the SoftwareIdentity and so can be used by a client to select Software 
     * Identities compatible with this service. If the service is generic 
     * (for example an OS installer), this array will be empty. 
     * 
     * @return	String[]	current supportedTargetTypes property 
     * value 
     * @exception	Exception	
     */
    public String[] getsupportedTargetTypes(){

    return this.supportedTargetTypes;
    } // getsupportedTargetTypes

    /**
     * This method sets the 
     * SoftwareInstallationServiceCapabilities.supportedTargetTypes property 
     * value. This property is described as follows: 
     * 
     * An array containing a list of SoftwareIdentity.TargetType properties 
     * that this service 'knows' how to install. TargetType is an application 
     * specific string which is invariant across version or name changes of 
     * the SoftwareIdentity and so can be used by a client to select Software 
     * Identities compatible with this service. If the service is generic 
     * (for example an OS installer), this array will be empty. 
     * 
     * @param	String[]	new supportedTargetTypes property value
     * @exception	Exception	
     */
    public void setsupportedTargetTypes(String[] supportedTargetTypes) {

    this.supportedTargetTypes = supportedTargetTypes;
    } // setsupportedTargetTypes


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedExtendedResourceTypes. 
     */

    public enum SupportedExtendedResourceTypes{
    UNKNOWN,
    OTHER,
    NOT_APPLICABLE,
    LINUX_RPM,
    HP_UX_DEPOT,
    WINDOWS_MSI,
    SOLARIS_PACKAGE,
    MACINTOSH_DISK_IMAGE,
    DEBIAN_LINUX_PACKAGE,
    DMTF_RESERVED,
    VENDOR_RESERVED
    }
    private SupportedExtendedResourceTypes supportedExtendedResourceTypes;
    /**
     * This method returns the 
     * SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes 
     * property value. This property is described as follows: 
     * 
     * An array containing a list of the binary format types that this service 
     * 'knows' how to install. The Values for this property are the subset of 
     * CIM_SoftwareIdentityResource.ExtendedResourceTypes that apply to the 
     * 'Installer and Payload', 'Installer' and ' Installability Checker' 
     * ResourceTypes. For example, an a Windows system, this property may be 
     * set to '4' indicating 'Windows MSI'. This property should be set to 
     * '2' (Not Applicable) if this service is not OS specific. 
     * 
     * @return	int	current SupportedExtendedResourceTypes 
     * property value 
     * @exception	Exception	
     */
    public SupportedExtendedResourceTypes 
	getSupportedExtendedResourceTypes(){

    return this.supportedExtendedResourceTypes;
    } // getSupportedExtendedResourceTypes

    /**
     * This method sets the 
     * SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes 
     * property value. This property is described as follows: 
     * 
     * An array containing a list of the binary format types that this service 
     * 'knows' how to install. The Values for this property are the subset of 
     * CIM_SoftwareIdentityResource.ExtendedResourceTypes that apply to the 
     * 'Installer and Payload', 'Installer' and ' Installability Checker' 
     * ResourceTypes. For example, an a Windows system, this property may be 
     * set to '4' indicating 'Windows MSI'. This property should be set to 
     * '2' (Not Applicable) if this service is not OS specific. 
     * 
     * @param	int	new SupportedExtendedResourceTypes property 
     * value 
     * @exception	Exception	
     */
    public void 
	setSupportedExtendedResourceTypes(SupportedExtendedResourceTypes 
	supportedExtendedResourceTypes){

    this.supportedExtendedResourceTypes = supportedExtendedResourceTypes;
    } // setSupportedExtendedResourceTypes


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property CanAddToCollection. 
     */
    private boolean canAddToCollection;
    /**
     * This method returns the 
     * SoftwareInstallationServiceCapabilities.canAddToCollection property 
     * value. This property is described as follows: 
     * 
     * This property indicates whether 
     * SoftwareInstallationService.InstallFromSoftwareIdentity supports 
     * adding a SoftwareIdentity to a Collection. 
     * 
     * @return	boolean	current canAddToCollection property value
     * @exception	Exception	
     */
    public boolean iscanAddToCollection(){

    return this.canAddToCollection;
    } // getcanAddToCollection

    /**
     * This method sets the 
     * SoftwareInstallationServiceCapabilities.canAddToCollection property 
     * value. This property is described as follows: 
     * 
     * This property indicates whether 
     * SoftwareInstallationService.InstallFromSoftwareIdentity supports 
     * adding a SoftwareIdentity to a Collection. 
     * 
     * @param	boolean	new canAddToCollection property value
     * @exception	Exception	
     */
    public void setcanAddToCollection(boolean canAddToCollection) {

    this.canAddToCollection = canAddToCollection;
    } // setcanAddToCollection


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedInstallOptions. 
     */

    public enum SupportedInstallOptions{
    DEFER_TARGET_SYSTEM_RESET,
    FORCE_INSTALLATION,
    INSTALL,
    UPDATE,
    REPAIR,
    REBOOT,
    PASSWORD,
    UNINSTALL,
    LOG,
    SILENTMODE,
    ADMINISTRATIVEMODE,
    SCHEDULEINSTALLAT,
    DMTF_RESERVED,
    VENDOR_SPECIFIC
    }
    private SupportedInstallOptions supportedInstallOptions;
    /**
     * This method returns the 
     * SoftwareInstallationServiceCapabilities.SupportedInstallOptions 
     * property value. This property is described as follows: 
     * 
     * An enumeration indicating the specific install related optionssupported 
     * by this service. Since this is an array, multiple values may be 
     * specified. See the InstallOptions parameter of 
     * theSoftwareInstallationService.InstallFromSoftwareIdentity method for 
     * the description of these values. 
     * 
     * @return	int	current SupportedInstallOptions property 
     * value 
     * @exception	Exception	
     */
    public SupportedInstallOptions getSupportedInstallOptions(){

    return this.supportedInstallOptions;
    } // getSupportedInstallOptions

    /**
     * This method sets the 
     * SoftwareInstallationServiceCapabilities.SupportedInstallOptions 
     * property value. This property is described as follows: 
     * 
     * An enumeration indicating the specific install related optionssupported 
     * by this service. Since this is an array, multiple values may be 
     * specified. See the InstallOptions parameter of 
     * theSoftwareInstallationService.InstallFromSoftwareIdentity method for 
     * the description of these values. 
     * 
     * @param	int	new SupportedInstallOptions property value
     * @exception	Exception	
     */
    public void setSupportedInstallOptions(SupportedInstallOptions 
	supportedInstallOptions){

    this.supportedInstallOptions = supportedInstallOptions;
    } // setSupportedInstallOptions


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherSupportedExtendedResourceTypeDescriptions. 
     */
    private String[] otherSupportedExtendedResourceTypeDescriptions;
    /**
     * This method returns the SoftwareInstallationServiceCapabilities.otherSupportedExtendedResourceTypeDescriptions 
     * property value. This property is described as follows: 
     * 
     * A string describing the binary format types that this service 'knows' 
     * how to install when the corresponding SupportedExtendedResourceTypes 
     * array includes the value 1 (Other). 
     * 
     * @return	String[]	current 
     * otherSupportedExtendedResourceTypeDescriptions property value 
     * @exception	Exception	
     */
    public String[] getotherSupportedExtendedResourceTypeDescriptions(){

    return this.otherSupportedExtendedResourceTypeDescriptions;
    } // getotherSupportedExtendedResourceTypeDescriptions

    /**
     * This method sets the SoftwareInstallationServiceCapabilities.otherSupportedExtendedResourceTypeDescriptions 
     * property value. This property is described as follows: 
     * 
     * A string describing the binary format types that this service 'knows' 
     * how to install when the corresponding SupportedExtendedResourceTypes 
     * array includes the value 1 (Other). 
     * 
     * @param	String[]	new 
     * otherSupportedExtendedResourceTypeDescriptions property value 
     * @exception	Exception	
     */
    public void setotherSupportedExtendedResourceTypeDescriptions(String[] 
	otherSupportedExtendedResourceTypeDescriptions) {

    this.otherSupportedExtendedResourceTypeDescriptions = 
	otherSupportedExtendedResourceTypeDescriptions;
    } // setotherSupportedExtendedResourceTypeDescriptions


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedExtendedResourceTypesMajorVersions. 
     */
    private int[] supportedExtendedResourceTypesMajorVersions;
    /**
     * This method returns the SoftwareInstallationServiceCapabilities.supportedExtendedResourceTypesMajorVersions 
     * property value. This property is described as follows: 
     * 
     * This property represents the major number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @return	int[]	current 
     * supportedExtendedResourceTypesMajorVersions property value 
     * @exception	Exception	
     */
    public int[] getsupportedExtendedResourceTypesMajorVersions(){

    return this.supportedExtendedResourceTypesMajorVersions;
    } // getsupportedExtendedResourceTypesMajorVersions

    /**
     * This method sets the SoftwareInstallationServiceCapabilities.supportedExtendedResourceTypesMajorVersions 
     * property value. This property is described as follows: 
     * 
     * This property represents the major number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @param	int[]	new 
     * supportedExtendedResourceTypesMajorVersions property value 
     * @exception	Exception	
     */
    public void setsupportedExtendedResourceTypesMajorVersions(int[] 
	supportedExtendedResourceTypesMajorVersions) {

    this.supportedExtendedResourceTypesMajorVersions = 
	supportedExtendedResourceTypesMajorVersions;
    } // setsupportedExtendedResourceTypesMajorVersions


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedExtendedResourceTypesMinorVersions. 
     */
    private int[] supportedExtendedResourceTypesMinorVersions;
    /**
     * This method returns the SoftwareInstallationServiceCapabilities.supportedExtendedResourceTypesMinorVersions 
     * property value. This property is described as follows: 
     * 
     * This property represents the minor number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @return	int[]	current 
     * supportedExtendedResourceTypesMinorVersions property value 
     * @exception	Exception	
     */
    public int[] getsupportedExtendedResourceTypesMinorVersions(){

    return this.supportedExtendedResourceTypesMinorVersions;
    } // getsupportedExtendedResourceTypesMinorVersions

    /**
     * This method sets the SoftwareInstallationServiceCapabilities.supportedExtendedResourceTypesMinorVersions 
     * property value. This property is described as follows: 
     * 
     * This property represents the minor number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @param	int[]	new 
     * supportedExtendedResourceTypesMinorVersions property value 
     * @exception	Exception	
     */
    public void setsupportedExtendedResourceTypesMinorVersions(int[] 
	supportedExtendedResourceTypesMinorVersions) {

    this.supportedExtendedResourceTypesMinorVersions = 
	supportedExtendedResourceTypesMinorVersions;
    } // setsupportedExtendedResourceTypesMinorVersions


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedExtendedResourceTypesRevisionNumbers. 
     */
    private int[] supportedExtendedResourceTypesRevisionNumbers;
    /**
     * This method returns the SoftwareInstallationServiceCapabilities.supportedExtendedResourceTypesRevisionNumbers 
     * property value. This property is described as follows: 
     * 
     * This property represents the revision number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @return	int[]	current 
     * supportedExtendedResourceTypesRevisionNumbers property value 
     * @exception	Exception	
     */
    public int[] getsupportedExtendedResourceTypesRevisionNumbers(){

    return this.supportedExtendedResourceTypesRevisionNumbers;
    } // getsupportedExtendedResourceTypesRevisionNumbers

    /**
     * This method sets the SoftwareInstallationServiceCapabilities.supportedExtendedResourceTypesRevisionNumbers 
     * property value. This property is described as follows: 
     * 
     * This property represents the revision number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @param	int[]	new 
     * supportedExtendedResourceTypesRevisionNumbers property value 
     * @exception	Exception	
     */
    public void setsupportedExtendedResourceTypesRevisionNumbers(int[] 
	supportedExtendedResourceTypesRevisionNumbers) {

    this.supportedExtendedResourceTypesRevisionNumbers = 
	supportedExtendedResourceTypesRevisionNumbers;
    } // setsupportedExtendedResourceTypesRevisionNumbers


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedExtendedResourceTypesBuildNumbers. 
     */
    private int[] supportedExtendedResourceTypesBuildNumbers;
    /**
     * This method returns the SoftwareInstallationServiceCapabilities.supportedExtendedResourceTypesBuildNumbers 
     * property value. This property is described as follows: 
     * 
     * This property represents the build number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @return	int[]	current 
     * supportedExtendedResourceTypesBuildNumbers property value 
     * @exception	Exception	
     */
    public int[] getsupportedExtendedResourceTypesBuildNumbers(){

    return this.supportedExtendedResourceTypesBuildNumbers;
    } // getsupportedExtendedResourceTypesBuildNumbers

    /**
     * This method sets the SoftwareInstallationServiceCapabilities.supportedExtendedResourceTypesBuildNumbers 
     * property value. This property is described as follows: 
     * 
     * This property represents the build number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @param	int[]	new 
     * supportedExtendedResourceTypesBuildNumbers property value 
     * @exception	Exception	
     */
    public void setsupportedExtendedResourceTypesBuildNumbers(int[] 
	supportedExtendedResourceTypesBuildNumbers) {

    this.supportedExtendedResourceTypesBuildNumbers = 
	supportedExtendedResourceTypesBuildNumbers;
    } // setsupportedExtendedResourceTypesBuildNumbers


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedURISchemes. 
     */

    public enum SupportedURISchemes{
    DATA,
    FILE,
    FTP,
    HTTP,
    HTTPS,
    NFS,
    TFTP,
    DMTF_RESERVED,
    VENDOR_SPECIFIC
    }
    private SupportedURISchemes supportedURISchemes;
    /**
     * This method returns the 
     * SoftwareInstallationServiceCapabilities.SupportedURISchemes property 
     * value. This property is described as follows: 
     * 
     * This property lists the URI schemes supported by the 
     * SoftwareInstallationService. 
     * 
     * @return	int	current SupportedURISchemes property value
     * @exception	Exception	
     */
    public SupportedURISchemes getSupportedURISchemes(){

    return this.supportedURISchemes;
    } // getSupportedURISchemes

    /**
     * This method sets the 
     * SoftwareInstallationServiceCapabilities.SupportedURISchemes property 
     * value. This property is described as follows: 
     * 
     * This property lists the URI schemes supported by the 
     * SoftwareInstallationService. 
     * 
     * @param	int	new SupportedURISchemes property value
     * @exception	Exception	
     */
    public void setSupportedURISchemes(SupportedURISchemes 
	supportedURISchemes){

    this.supportedURISchemes = supportedURISchemes;
    } // setSupportedURISchemes



} // Class SoftwareInstallationServiceCapabilities
