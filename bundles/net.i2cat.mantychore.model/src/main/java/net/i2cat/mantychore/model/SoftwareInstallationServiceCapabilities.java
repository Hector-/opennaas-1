/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class SoftwareInstallationServiceCapabilities as well as 
 * methods comparable to the invokeMethods defined for this class. This Class 
 * implements the SoftwareInstallationServiceCapabilitiesBean Interface. The 
 * CIM class SoftwareInstallationServiceCapabilities is described as follows: 
 * 
 * A subclass of capabilities that defines the capabilities of a 
 * SoftwareInstallationService. A single instance of 
 * SoftwareInstallationServiceCapabilities is associated with a 
 * SoftwareInstallationService using ElementCapabilities. 
 */
public class SoftwareInstallationServiceCapabilities extends Capabilities 
    implements Serializable {

    /**
     * This constructor creates a 
     * SoftwareInstallationServiceCapabilitiesBeanImpl Class which implements 
     * the SoftwareInstallationServiceCapabilitiesBean Interface, and 
     * encapsulates the CIM class SoftwareInstallationServiceCapabilities in 
     * a Java Bean. The CIM class SoftwareInstallationServiceCapabilities is 
     * described as follows: 
     * 
     * A subclass of capabilities that defines the capabilities of a 
     * SoftwareInstallationService. A single instance of 
     * SoftwareInstallationServiceCapabilities is associated with a 
     * SoftwareInstallationService using ElementCapabilities. 
     */
    public SoftwareInstallationServiceCapabilities(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedAsynchronousActions. 
     */

    public enum SupportedAsynchronousActions{
    NONE_SUPPORTED,
    INSTALL_FROM_SOFTWARE_IDENTITY,
    INSTALL_FROM_BYTESTREAM,
    INSTALL_FROM_URI
    }
 public SupportedAsynchronousActions supportedAsynchronousActions;
    /**
     * This method returns the 
     * SoftwareInstallationServiceCapabilities.SupportedAsynchronousActions 
     * property value. This property is described as follows: 
     * 
     * Enumeration indicating what operations will be executed as asynchronous 
     * jobs. If an operation is included in both this and 
     * SupportedSynchronousActions then the underlying implementation is 
     * indicating that it may or may not create a job. If a Job is created, 
     * then the methods in SoftwareInstallationService return a reference to 
     * that Job as the Job parameter. 
     * 
     * @return	short	current SupportedAsynchronousActions 
     * property value 
     * @exception	Exception	
     */
    public SupportedAsynchronousActions getSupportedAsynchronousActions(){

    return this.supportedAsynchronousActions;
    } // getSupportedAsynchronousActions

    /**
     * This method sets the 
     * SoftwareInstallationServiceCapabilities.SupportedAsynchronousActions 
     * property value. This property is described as follows: 
     * 
     * Enumeration indicating what operations will be executed as asynchronous 
     * jobs. If an operation is included in both this and 
     * SupportedSynchronousActions then the underlying implementation is 
     * indicating that it may or may not create a job. If a Job is created, 
     * then the methods in SoftwareInstallationService return a reference to 
     * that Job as the Job parameter. 
     * 
     * @param	short	new SupportedAsynchronousActions property 
     * value 
     * @exception	Exception	
     */
    public void setSupportedAsynchronousActions(SupportedAsynchronousActions 
	supportedAsynchronousActions){

    this.supportedAsynchronousActions = supportedAsynchronousActions;
    } // setSupportedAsynchronousActions


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedSynchronousActions. 
     */

    public enum SupportedSynchronousActions{
    NONE_SUPPORTED,
    INSTALL_FROM_SOFTWARE_IDENTITY,
    INSTALL_FROM_BYTESTREAM,
    INSTALL_FROM_URI
    }
 public SupportedSynchronousActions supportedSynchronousActions;
    /**
     * This method returns the 
     * SoftwareInstallationServiceCapabilities.SupportedSynchronousActions 
     * property value. This property is described as follows: 
     * 
     * Enumeration indicating what operations will be executed without the 
     * creation of a job. If an operation is included in both this and 
     * SupportedAsynchronousActions then the underlying instrumentation is 
     * indicating that it may or may not create a job. 
     * 
     * @return	short	current SupportedSynchronousActions 
     * property value 
     * @exception	Exception	
     */
    public SupportedSynchronousActions getSupportedSynchronousActions(){

    return this.supportedSynchronousActions;
    } // getSupportedSynchronousActions

    /**
     * This method sets the 
     * SoftwareInstallationServiceCapabilities.SupportedSynchronousActions 
     * property value. This property is described as follows: 
     * 
     * Enumeration indicating what operations will be executed without the 
     * creation of a job. If an operation is included in both this and 
     * SupportedAsynchronousActions then the underlying instrumentation is 
     * indicating that it may or may not create a job. 
     * 
     * @param	short	new SupportedSynchronousActions property 
     * value 
     * @exception	Exception	
     */
    public void setSupportedSynchronousActions(SupportedSynchronousActions 
	supportedSynchronousActions){

    this.supportedSynchronousActions = supportedSynchronousActions;
    } // setSupportedSynchronousActions


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedTargetTypes. 
     */
    private String[] supportedTargetTypes;
    /**
     * This method returns the 
     * SoftwareInstallationServiceCapabilities.SupportedTargetTypes property 
     * value. This property is described as follows: 
     * 
     * An array containing a list of SoftwareIdentity.TargetType properties 
     * that this service 'knows' how to install. TargetType is an application 
     * specific string which is invariant across version or name changes of 
     * the SoftwareIdentity and so can be used by a client to select Software 
     * Identities compatible with this service. If the service is generic 
     * (for example an OS installer), this array will be empty. 
     * 
     * @return	String[]	current SupportedTargetTypes property 
     * value 
     * @exception	Exception	
     */
    public String[] getSupportedTargetTypes(){

    return this.supportedTargetTypes;
    } // getSupportedTargetTypes

    /**
     * This method sets the 
     * SoftwareInstallationServiceCapabilities.SupportedTargetTypes property 
     * value. This property is described as follows: 
     * 
     * An array containing a list of SoftwareIdentity.TargetType properties 
     * that this service 'knows' how to install. TargetType is an application 
     * specific string which is invariant across version or name changes of 
     * the SoftwareIdentity and so can be used by a client to select Software 
     * Identities compatible with this service. If the service is generic 
     * (for example an OS installer), this array will be empty. 
     * 
     * @param	String[]	new SupportedTargetTypes property value
     * @exception	Exception	
     */
    public void setSupportedTargetTypes(String[] supportedTargetTypes) {

    this.supportedTargetTypes = supportedTargetTypes;
    } // setSupportedTargetTypes


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedExtendedResourceTypes. 
     */

    public enum SupportedExtendedResourceTypes{
    UNKNOWN,
    OTHER,
    NOT_APPLICABLE,
    LINUX_RPM,
    HP_UX_DEPOT,
    WINDOWS_MSI,
    SOLARIS_PACKAGE,
    MACINTOSH_DISK_IMAGE,
    DEBIAN_LINUX_PACKAGE,
    DMTF_RESERVED,
    VENDOR_RESERVED
    }
 public SupportedExtendedResourceTypes supportedExtendedResourceTypes;
    /**
     * This method returns the 
     * SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes 
     * property value. This property is described as follows: 
     * 
     * An array containing a list of the binary format types that this service 
     * 'knows' how to install. The Values for this property are the subset of 
     * CIM_SoftwareIdentityResource.ExtendedResourceTypes that apply to the 
     * 'Installer and Payload', 'Installer' and ' Installability Checker' 
     * ResourceTypes. For example, an a Windows system, this property may be 
     * set to '4' indicating 'Windows MSI'. This property should be set to 
     * '2' (Not Applicable) if this service is not OS specific. 
     * 
     * @return	short	current SupportedExtendedResourceTypes 
     * property value 
     * @exception	Exception	
     */
    public SupportedExtendedResourceTypes 
	getSupportedExtendedResourceTypes(){

    return this.supportedExtendedResourceTypes;
    } // getSupportedExtendedResourceTypes

    /**
     * This method sets the 
     * SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypes 
     * property value. This property is described as follows: 
     * 
     * An array containing a list of the binary format types that this service 
     * 'knows' how to install. The Values for this property are the subset of 
     * CIM_SoftwareIdentityResource.ExtendedResourceTypes that apply to the 
     * 'Installer and Payload', 'Installer' and ' Installability Checker' 
     * ResourceTypes. For example, an a Windows system, this property may be 
     * set to '4' indicating 'Windows MSI'. This property should be set to 
     * '2' (Not Applicable) if this service is not OS specific. 
     * 
     * @param	short	new SupportedExtendedResourceTypes property 
     * value 
     * @exception	Exception	
     */
    public void 
	setSupportedExtendedResourceTypes(SupportedExtendedResourceTypes 
	supportedExtendedResourceTypes){

    this.supportedExtendedResourceTypes = supportedExtendedResourceTypes;
    } // setSupportedExtendedResourceTypes


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property CanAddToCollection. 
     */
    private boolean canAddToCollection;
    /**
     * This method returns the 
     * SoftwareInstallationServiceCapabilities.CanAddToCollection property 
     * value. This property is described as follows: 
     * 
     * This property indicates whether 
     * SoftwareInstallationService.InstallFromSoftwareIdentity supports 
     * adding a SoftwareIdentity to a Collection. 
     * 
     * @return	boolean	current CanAddToCollection property value
     * @exception	Exception	
     */
    public boolean isCanAddToCollection(){

    return this.canAddToCollection;
    } // getCanAddToCollection

    /**
     * This method sets the 
     * SoftwareInstallationServiceCapabilities.CanAddToCollection property 
     * value. This property is described as follows: 
     * 
     * This property indicates whether 
     * SoftwareInstallationService.InstallFromSoftwareIdentity supports 
     * adding a SoftwareIdentity to a Collection. 
     * 
     * @param	boolean	new CanAddToCollection property value
     * @exception	Exception	
     */
    public void setCanAddToCollection(boolean canAddToCollection) {

    this.canAddToCollection = canAddToCollection;
    } // setCanAddToCollection


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedInstallOptions. 
     */

    public enum SupportedInstallOptions{
    DEFER_TARGET_SYSTEM_RESET,
    FORCE_INSTALLATION,
    INSTALL,
    UPDATE,
    REPAIR,
    REBOOT,
    PASSWORD,
    UNINSTALL,
    LOG,
    SILENTMODE,
    ADMINISTRATIVEMODE,
    SCHEDULEINSTALLAT,
    DMTF_RESERVED,
    VENDOR_SPECIFIC
    }
 public SupportedInstallOptions supportedInstallOptions;
    /**
     * This method returns the 
     * SoftwareInstallationServiceCapabilities.SupportedInstallOptions 
     * property value. This property is described as follows: 
     * 
     * An enumeration indicating the specific install related optionssupported 
     * by this service. Since this is an array, multiple values may be 
     * specified. See the InstallOptions parameter of 
     * theSoftwareInstallationService.InstallFromSoftwareIdentity method for 
     * the description of these values. 
     * 
     * @return	short	current SupportedInstallOptions property 
     * value 
     * @exception	Exception	
     */
    public SupportedInstallOptions getSupportedInstallOptions(){

    return this.supportedInstallOptions;
    } // getSupportedInstallOptions

    /**
     * This method sets the 
     * SoftwareInstallationServiceCapabilities.SupportedInstallOptions 
     * property value. This property is described as follows: 
     * 
     * An enumeration indicating the specific install related optionssupported 
     * by this service. Since this is an array, multiple values may be 
     * specified. See the InstallOptions parameter of 
     * theSoftwareInstallationService.InstallFromSoftwareIdentity method for 
     * the description of these values. 
     * 
     * @param	short	new SupportedInstallOptions property value
     * @exception	Exception	
     */
    public void setSupportedInstallOptions(SupportedInstallOptions 
	supportedInstallOptions){

    this.supportedInstallOptions = supportedInstallOptions;
    } // setSupportedInstallOptions


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherSupportedExtendedResourceTypeDescriptions. 
     */
    private String[] otherSupportedExtendedResourceTypeDescriptions;
    /**
     * This method returns the SoftwareInstallationServiceCapabilities.OtherSupportedExtendedResourceTypeDescriptions 
     * property value. This property is described as follows: 
     * 
     * A string describing the binary format types that this service 'knows' 
     * how to install when the corresponding SupportedExtendedResourceTypes 
     * array includes the value 1 (Other). 
     * 
     * @return	String[]	current 
     * OtherSupportedExtendedResourceTypeDescriptions property value 
     * @exception	Exception	
     */
    public String[] getOtherSupportedExtendedResourceTypeDescriptions(){

    return this.otherSupportedExtendedResourceTypeDescriptions;
    } // getOtherSupportedExtendedResourceTypeDescriptions

    /**
     * This method sets the SoftwareInstallationServiceCapabilities.OtherSupportedExtendedResourceTypeDescriptions 
     * property value. This property is described as follows: 
     * 
     * A string describing the binary format types that this service 'knows' 
     * how to install when the corresponding SupportedExtendedResourceTypes 
     * array includes the value 1 (Other). 
     * 
     * @param	String[]	new 
     * OtherSupportedExtendedResourceTypeDescriptions property value 
     * @exception	Exception	
     */
    public void setOtherSupportedExtendedResourceTypeDescriptions(String[] 
	otherSupportedExtendedResourceTypeDescriptions) {

    this.otherSupportedExtendedResourceTypeDescriptions = 
	otherSupportedExtendedResourceTypeDescriptions;
    } // setOtherSupportedExtendedResourceTypeDescriptions


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedExtendedResourceTypesMajorVersions. 
     */
    private short[] supportedExtendedResourceTypesMajorVersions;
    /**
     * This method returns the SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesMajorVersions 
     * property value. This property is described as follows: 
     * 
     * This property represents the major number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @return	short[]	current 
     * SupportedExtendedResourceTypesMajorVersions property value 
     * @exception	Exception	
     */
    public short[] getSupportedExtendedResourceTypesMajorVersions(){

    return this.supportedExtendedResourceTypesMajorVersions;
    } // getSupportedExtendedResourceTypesMajorVersions

    /**
     * This method sets the SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesMajorVersions 
     * property value. This property is described as follows: 
     * 
     * This property represents the major number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @param	short[]	new 
     * SupportedExtendedResourceTypesMajorVersions property value 
     * @exception	Exception	
     */
    public void setSupportedExtendedResourceTypesMajorVersions(short[] 
	supportedExtendedResourceTypesMajorVersions) {

    this.supportedExtendedResourceTypesMajorVersions = 
	supportedExtendedResourceTypesMajorVersions;
    } // setSupportedExtendedResourceTypesMajorVersions


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedExtendedResourceTypesMinorVersions. 
     */
    private short[] supportedExtendedResourceTypesMinorVersions;
    /**
     * This method returns the SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesMinorVersions 
     * property value. This property is described as follows: 
     * 
     * This property represents the minor number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @return	short[]	current 
     * SupportedExtendedResourceTypesMinorVersions property value 
     * @exception	Exception	
     */
    public short[] getSupportedExtendedResourceTypesMinorVersions(){

    return this.supportedExtendedResourceTypesMinorVersions;
    } // getSupportedExtendedResourceTypesMinorVersions

    /**
     * This method sets the SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesMinorVersions 
     * property value. This property is described as follows: 
     * 
     * This property represents the minor number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @param	short[]	new 
     * SupportedExtendedResourceTypesMinorVersions property value 
     * @exception	Exception	
     */
    public void setSupportedExtendedResourceTypesMinorVersions(short[] 
	supportedExtendedResourceTypesMinorVersions) {

    this.supportedExtendedResourceTypesMinorVersions = 
	supportedExtendedResourceTypesMinorVersions;
    } // setSupportedExtendedResourceTypesMinorVersions


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedExtendedResourceTypesRevisionNumbers. 
     */
    private short[] supportedExtendedResourceTypesRevisionNumbers;
    /**
     * This method returns the SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesRevisionNumbers 
     * property value. This property is described as follows: 
     * 
     * This property represents the revision number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @return	short[]	current 
     * SupportedExtendedResourceTypesRevisionNumbers property value 
     * @exception	Exception	
     */
    public short[] getSupportedExtendedResourceTypesRevisionNumbers(){

    return this.supportedExtendedResourceTypesRevisionNumbers;
    } // getSupportedExtendedResourceTypesRevisionNumbers

    /**
     * This method sets the SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesRevisionNumbers 
     * property value. This property is described as follows: 
     * 
     * This property represents the revision number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @param	short[]	new 
     * SupportedExtendedResourceTypesRevisionNumbers property value 
     * @exception	Exception	
     */
    public void setSupportedExtendedResourceTypesRevisionNumbers(short[] 
	supportedExtendedResourceTypesRevisionNumbers) {

    this.supportedExtendedResourceTypesRevisionNumbers = 
	supportedExtendedResourceTypesRevisionNumbers;
    } // setSupportedExtendedResourceTypesRevisionNumbers


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedExtendedResourceTypesBuildNumbers. 
     */
    private short[] supportedExtendedResourceTypesBuildNumbers;
    /**
     * This method returns the SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesBuildNumbers 
     * property value. This property is described as follows: 
     * 
     * This property represents the build number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @return	short[]	current 
     * SupportedExtendedResourceTypesBuildNumbers property value 
     * @exception	Exception	
     */
    public short[] getSupportedExtendedResourceTypesBuildNumbers(){

    return this.supportedExtendedResourceTypesBuildNumbers;
    } // getSupportedExtendedResourceTypesBuildNumbers

    /**
     * This method sets the SoftwareInstallationServiceCapabilities.SupportedExtendedResourceTypesBuildNumbers 
     * property value. This property is described as follows: 
     * 
     * This property represents the build number component of the installer 
     * version supported by the SoftwareInstallationService.The installer 
     * format is represented by the element at the same index in the 
     * SupportedExtendedResourceTypes array. 
     * 
     * @param	short[]	new 
     * SupportedExtendedResourceTypesBuildNumbers property value 
     * @exception	Exception	
     */
    public void setSupportedExtendedResourceTypesBuildNumbers(short[] 
	supportedExtendedResourceTypesBuildNumbers) {

    this.supportedExtendedResourceTypesBuildNumbers = 
	supportedExtendedResourceTypesBuildNumbers;
    } // setSupportedExtendedResourceTypesBuildNumbers


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SupportedURISchemes. 
     */

    public enum SupportedURISchemes{
    DATA,
    FILE,
    FTP,
    HTTP,
    HTTPS,
    NFS,
    TFTP,
    DMTF_RESERVED,
    VENDOR_SPECIFIC
    }
 public SupportedURISchemes supportedURISchemes;
    /**
     * This method returns the 
     * SoftwareInstallationServiceCapabilities.SupportedURISchemes property 
     * value. This property is described as follows: 
     * 
     * This property lists the URI schemes supported by the 
     * SoftwareInstallationService. 
     * 
     * @return	short	current SupportedURISchemes property value
     * @exception	Exception	
     */
    public SupportedURISchemes getSupportedURISchemes(){

    return this.supportedURISchemes;
    } // getSupportedURISchemes

    /**
     * This method sets the 
     * SoftwareInstallationServiceCapabilities.SupportedURISchemes property 
     * value. This property is described as follows: 
     * 
     * This property lists the URI schemes supported by the 
     * SoftwareInstallationService. 
     * 
     * @param	short	new SupportedURISchemes property value
     * @exception	Exception	
     */
    public void setSupportedURISchemes(SupportedURISchemes 
	supportedURISchemes){

    this.supportedURISchemes = supportedURISchemes;
    } // setSupportedURISchemes



} // Class SoftwareInstallationServiceCapabilities
