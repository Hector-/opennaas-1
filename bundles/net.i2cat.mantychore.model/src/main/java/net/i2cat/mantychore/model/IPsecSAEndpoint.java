/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Tue Nov 30 
 * 10:54:51 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class IPsecSAEndpoint as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * IPsecSAEndpointBean Interface. The CIM class IPsecSAEndpoint is described 
 * as follows: 
 * 
 * IPsecSAEndpoints are types of SecurityAssociationEndpoints representing 
 * both negotiated and static SAs that correspond to AH, ESP, or IPCOMP 
 * transforms. 
 */
public class IPsecSAEndpoint extends SecurityAssociationEndpoint implements 
    Serializable {

    /**
     * This constructor creates a IPsecSAEndpointBeanImpl Class which 
     * implements the IPsecSAEndpointBean Interface, and encapsulates the CIM 
     * class IPsecSAEndpoint in a Java Bean. The CIM class IPsecSAEndpoint is 
     * described as follows: 
     * 
     * IPsecSAEndpoints are types of SecurityAssociationEndpoints representing 
     * both negotiated and static SAs that correspond to AH, ESP, or IPCOMP 
     * transforms. 
     */
    public IPsecSAEndpoint(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SPI. 
     */
    private int sPI;
    /**
     * This method returns the IPsecSAEndpoint.SPI property value. This 
     * property is described as follows: 
     * 
     * SPI contains the Security Parameter Index of the SA. This value in 
     * string form may also be used in the key field 'Name' inherited from 
     * ServiceAccessPoint. 
     * 
     * @return	int	current SPI property value
     * @exception	Exception	
     */
    public int getSPI(){

    return this.sPI;
    } // getSPI

    /**
     * This method sets the IPsecSAEndpoint.SPI property value. This property 
     * is described as follows: 
     * 
     * SPI contains the Security Parameter Index of the SA. This value in 
     * string form may also be used in the key field 'Name' inherited from 
     * ServiceAccessPoint. 
     * 
     * @param	int	new SPI property value
     * @exception	Exception	
     */
    public void setSPI(int sPI) {

    this.sPI = sPI;
    } // setSPI


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property InboundDirection. 
     */
    private boolean inboundDirection;
    /**
     * This method returns the IPsecSAEndpoint.InboundDirection property 
     * value. This property is described as follows: 
     * 
     * InboundDirection specifies whether the SA applies to inbound (TRUE) or 
     * outbound (FALSE) traffic. 
     * 
     * @return	boolean	current InboundDirection property value
     * @exception	Exception	
     */
    public boolean isInboundDirection(){

    return this.inboundDirection;
    } // getInboundDirection

    /**
     * This method sets the IPsecSAEndpoint.InboundDirection property value. 
     * This property is described as follows: 
     * 
     * InboundDirection specifies whether the SA applies to inbound (TRUE) or 
     * outbound (FALSE) traffic. 
     * 
     * @param	boolean	new InboundDirection property value
     * @exception	Exception	
     */
    public void setInboundDirection(boolean inboundDirection) {

    this.inboundDirection = inboundDirection;
    } // setInboundDirection


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property EncapsulationMode. 
     */

    public enum EncapsulationMode{
    UNKNOWN,
    TUNNEL,
    TRANSPORT
    }EncapsulationMode encapsulationMode;
    /**
     * This method returns the IPsecSAEndpoint.EncapsulationMode property 
     * value. This property is described as follows: 
     * 
     * EncapsulationMode indicates whether the IPsecSAEndpoint uses transport 
     * or tunnel encapsulation. 
     * 
     * @return	short	current EncapsulationMode property value
     * @exception	Exception	
     */
    public EncapsulationMode getEncapsulationMode(){

    return this.encapsulationMode;
    } // getEncapsulationMode

    /**
     * This method sets the IPsecSAEndpoint.EncapsulationMode property value. 
     * This property is described as follows: 
     * 
     * EncapsulationMode indicates whether the IPsecSAEndpoint uses transport 
     * or tunnel encapsulation. 
     * 
     * @param	short	new EncapsulationMode property value
     * @exception	Exception	
     */
    public void setEncapsulationMode(EncapsulationMode encapsulationMode){

    this.encapsulationMode = encapsulationMode;
    } // setEncapsulationMode


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property DFHandling. 
     */

    public enum DFHandling{
    UNKNOWN,
    COPY_FROM_INTERNAL_TO_EXTERNAL_IP_HEADER,
    SET_DF_BIT_IN_EXTERNAL_HEADER_TO_1,
    SET_DF_BIT_IN_EXTERNAL_HEADER_TO_0
    }DFHandling dFHandling;
    /**
     * This method returns the IPsecSAEndpoint.DFHandling property value. This 
     * property is described as follows: 
     * 
     * DFHandling controls how the 'Don't Fragment' bit is managed by the 
     * IPsecSAEndpoint. 
     * 
     * @return	short	current DFHandling property value
     * @exception	Exception	
     */
    public DFHandling getDFHandling(){

    return this.dFHandling;
    } // getDFHandling

    /**
     * This method sets the IPsecSAEndpoint.DFHandling property value. This 
     * property is described as follows: 
     * 
     * DFHandling controls how the 'Don't Fragment' bit is managed by the 
     * IPsecSAEndpoint. 
     * 
     * @param	short	new DFHandling property value
     * @exception	Exception	
     */
    public void setDFHandling(DFHandling dFHandling){

    this.dFHandling = dFHandling;
    } // setDFHandling


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PFSInUse. 
     */
    private boolean pFSInUse;
    /**
     * This method returns the IPsecSAEndpoint.PFSInUse property value. This 
     * property is described as follows: 
     * 
     * PFSInUse indicates whether perfect forward secrecy is required when 
     * refreshing keys. 
     * 
     * @return	boolean	current PFSInUse property value
     * @exception	Exception	
     */
    public boolean isPFSInUse(){

    return this.pFSInUse;
    } // getPFSInUse

    /**
     * This method sets the IPsecSAEndpoint.PFSInUse property value. This 
     * property is described as follows: 
     * 
     * PFSInUse indicates whether perfect forward secrecy is required when 
     * refreshing keys. 
     * 
     * @param	boolean	new PFSInUse property value
     * @exception	Exception	
     */
    public void setPFSInUse(boolean pFSInUse) {

    this.pFSInUse = pFSInUse;
    } // setPFSInUse



} // Class IPsecSAEndpoint
