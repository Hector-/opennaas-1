/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Tue Nov 30 
 * 15:29:20 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class OSPFLink as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * OSPFLinkBean Interface. The CIM class OSPFLink is described as follows: 
 * 
 * This class is used to represent OSPF connectivity between two or more OSPF 
 * protocol endpoints. 
 */
public class OSPFLink extends ConnectivityCollection implements Serializable 
    {

    /**
     * This constructor creates a OSPFLinkBeanImpl Class which implements the 
     * OSPFLinkBean Interface, and encapsulates the CIM class OSPFLink in a 
     * Java Bean. The CIM class OSPFLink is described as follows: 
     * 
     * This class is used to represent OSPF connectivity between two or more 
     * OSPF protocol endpoints. 
     */
    public OSPFLink(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property LinkType. 
     */

    public enum LinkType{
    POINT_TO_POINT,
    POINT_TO_MULTIPOINT,
    BROADCAST,
    NBMA
    }
 public LinkType linkType;
    /**
     * This method returns the OSPFLink.LinkType property value. This property 
     * is described as follows: 
     * 
     * The type of the OSPF link, see section 1.2 in RFC 2328.
     * 
     * @return	short	current LinkType property value
     * @exception	Exception	
     */
    public LinkType getLinkType(){

    return this.linkType;
    } // getLinkType

    /**
     * This method sets the OSPFLink.LinkType property value. This property is 
     * described as follows: 
     * 
     * The type of the OSPF link, see section 1.2 in RFC 2328.
     * 
     * @param	short	new LinkType property value
     * @exception	Exception	
     */
    public void setLinkType(LinkType linkType){

    this.linkType = linkType;
    } // setLinkType


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property HelloInterval. 
     */
    private int helloInterval;
    /**
     * This method returns the OSPFLink.HelloInterval property value. This 
     * property is described as follows: 
     * 
     * The time, in seconds, between sending OSPF Hello-packets over the 
     * interface, see section C.3 in RFC 2328. 
     * 
     * @return	int	current HelloInterval property value
     * @exception	Exception	
     */
    public int getHelloInterval(){

    return this.helloInterval;
    } // getHelloInterval

    /**
     * This method sets the OSPFLink.HelloInterval property value. This 
     * property is described as follows: 
     * 
     * The time, in seconds, between sending OSPF Hello-packets over the 
     * interface, see section C.3 in RFC 2328. 
     * 
     * @param	int	new HelloInterval property value
     * @exception	Exception	
     */
    public void setHelloInterval(int helloInterval) {

    this.helloInterval = helloInterval;
    } // setHelloInterval


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RouterDeadInterval. 
     */
    private int routerDeadInterval;
    /**
     * This method returns the OSPFLink.RouterDeadInterval property value. 
     * This property is described as follows: 
     * 
     * After ceasing to hear a router's Hello-packets, the number of seconds 
     * before its neighbors declare the router down, see section C.3 in RFC 
     * 2328. 
     * 
     * @return	int	current RouterDeadInterval property value
     * @exception	Exception	
     */
    public int getRouterDeadInterval(){

    return this.routerDeadInterval;
    } // getRouterDeadInterval

    /**
     * This method sets the OSPFLink.RouterDeadInterval property value. This 
     * property is described as follows: 
     * 
     * After ceasing to hear a router's Hello-packets, the number of seconds 
     * before its neighbors declare the router down, see section C.3 in RFC 
     * 2328. 
     * 
     * @param	int	new RouterDeadInterval property value
     * @exception	Exception	
     */
    public void setRouterDeadInterval(int routerDeadInterval) {

    this.routerDeadInterval = routerDeadInterval;
    } // setRouterDeadInterval


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property MulticastForwarding. 
     */

    public enum MulticastForwarding{
    DISABLED,
    DATA_LINK_MULTICAST,
    DATA_LINK_UNICAST
    }
 public MulticastForwarding multicastForwarding;
    /**
     * This method returns the OSPFLink.MulticastForwarding property value. 
     * This property is described as follows: 
     * 
     * This parameter indicates whether IP multicast datagrams should be 
     * forwarded over this OSPF link, and if so, how the forwarding should be 
     * done, see section B.2 in RFC 1584. 
     * 
     * @return	short	current MulticastForwarding property value
     * @exception	Exception	
     */
    public MulticastForwarding getMulticastForwarding(){

    return this.multicastForwarding;
    } // getMulticastForwarding

    /**
     * This method sets the OSPFLink.MulticastForwarding property value. This 
     * property is described as follows: 
     * 
     * This parameter indicates whether IP multicast datagrams should be 
     * forwarded over this OSPF link, and if so, how the forwarding should be 
     * done, see section B.2 in RFC 1584. 
     * 
     * @param	short	new MulticastForwarding property value
     * @exception	Exception	
     */
    public void setMulticastForwarding(MulticastForwarding 
	multicastForwarding){

    this.multicastForwarding = multicastForwarding;
    } // setMulticastForwarding



} // Class OSPFLink
