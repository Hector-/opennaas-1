/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Tue Nov 30 
 * 15:29:20 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class SpanningTreeService as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * SpanningTreeServiceBean Interface. The CIM class SpanningTreeService is 
 * described as follows: 
 * 
 * This service class represents the capability of a switch to participate in 
 * the distributed construction of a spanning tree. 
 */
public class SpanningTreeService extends ForwardingService implements 
    Serializable {

    /**
     * This constructor creates a SpanningTreeServiceBeanImpl Class which 
     * implements the SpanningTreeServiceBean Interface, and encapsulates the 
     * CIM class SpanningTreeService in a Java Bean. The CIM class 
     * SpanningTreeService is described as follows: 
     * 
     * This service class represents the capability of a switch to participate 
     * in the distributed construction of a spanning tree. 
     */
    public SpanningTreeService(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ProtocolSpec. 
     */

    public enum ProtocolSpec{
    UNKNOWN,
    DEC_LB100,
    IEEE_802D
    }
 public ProtocolSpec protocolSpec;
    /**
     * This method returns the SpanningTreeService.ProtocolSpec property 
     * value. This property is described as follows: 
     * 
     * The version of the spanning tree protocol used by the switch.
     * 
     * @return	short	current ProtocolSpec property value
     * @exception	Exception	
     */
    public ProtocolSpec getProtocolSpec(){

    return this.protocolSpec;
    } // getProtocolSpec

    /**
     * This method sets the SpanningTreeService.ProtocolSpec property value. 
     * This property is described as follows: 
     * 
     * The version of the spanning tree protocol used by the switch.
     * 
     * @param	short	new ProtocolSpec property value
     * @exception	Exception	
     */
    public void setProtocolSpec(ProtocolSpec protocolSpec){

    this.protocolSpec = protocolSpec;
    } // setProtocolSpec


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Priority. 
     */
    private short priority;
    /**
     * This method returns the SpanningTreeService.Priority property value. 
     * This property is described as follows: 
     * 
     * The format of the priority bits are the first two octets of the 8-octet 
     * long Bridge ID. The other (last) 6 octets of the Bridge ID are given 
     * by the value of the Bridge Address. A priority that can be assigned to 
     * the switch for use in constructing the spanning tree. The unique 
     * identifier for a switch is constructed by concatenating the MAC 
     * address associated with the switch for spanning tree operations to the 
     * two-byte priority. Choice of the priority value influences election of 
     * the root bridge. 
     * 
     * @return	short	current Priority property value
     * @exception	Exception	
     */
    public short getPriority(){

    return this.priority;
    } // getPriority

    /**
     * This method sets the SpanningTreeService.Priority property value. This 
     * property is described as follows: 
     * 
     * The format of the priority bits are the first two octets of the 8-octet 
     * long Bridge ID. The other (last) 6 octets of the Bridge ID are given 
     * by the value of the Bridge Address. A priority that can be assigned to 
     * the switch for use in constructing the spanning tree. The unique 
     * identifier for a switch is constructed by concatenating the MAC 
     * address associated with the switch for spanning tree operations to the 
     * two-byte priority. Choice of the priority value influences election of 
     * the root bridge. 
     * 
     * @param	short	new Priority property value
     * @exception	Exception	
     */
    public void setPriority(short priority) {

    this.priority = priority;
    } // setPriority


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SpanningTreeBridgeAddress. 
     */
    private String spanningTreeBridgeAddress;
    /**
     * This method returns the SpanningTreeService.SpanningTreeBridgeAddress 
     * property value. This property is described as follows: 
     * 
     * MAC address used by the spanning tree service when it must be uniquely 
     * identified. When concatenated with a SpanningTreeService Priority, a 
     * unique bridge identifier results. This property is defined for use of 
     * switches supporting multiple spanning tree services. Note that the MAC 
     * address is formatted as twelve hexadecimal digits (e.g., 
     * "010203040506"), with each pair representing one of the six octets of 
     * the MAC address in "canonical" bit order according to RFC 2469. 
     * 
     * @return	String	current SpanningTreeBridgeAddress property 
     * value 
     * @exception	Exception	
     */
    public String getSpanningTreeBridgeAddress(){

    return this.spanningTreeBridgeAddress;
    } // getSpanningTreeBridgeAddress

    /**
     * This method sets the SpanningTreeService.SpanningTreeBridgeAddress 
     * property value. This property is described as follows: 
     * 
     * MAC address used by the spanning tree service when it must be uniquely 
     * identified. When concatenated with a SpanningTreeService Priority, a 
     * unique bridge identifier results. This property is defined for use of 
     * switches supporting multiple spanning tree services. Note that the MAC 
     * address is formatted as twelve hexadecimal digits (e.g., 
     * "010203040506"), with each pair representing one of the six octets of 
     * the MAC address in "canonical" bit order according to RFC 2469. 
     * 
     * @param	String	new SpanningTreeBridgeAddress property 
     * value 
     * @exception	Exception	
     */
    public void setSpanningTreeBridgeAddress(String spanningTreeBridgeAddress) 
	{

    this.spanningTreeBridgeAddress = spanningTreeBridgeAddress;
    } // setSpanningTreeBridgeAddress


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property DesignatedRoot. 
     */
    private String designatedRoot;
    /**
     * This method returns the SpanningTreeService.DesignatedRoot property 
     * value. This property is described as follows: 
     * 
     * The complete Bridge ID (Priority + MAC Address) of the root bridge. The 
     * format of the priority bits are the first two octets of the 8-octet 
     * long Bridge ID. Note that the MAC address is formatted as twelve 
     * hexadecimal digits (e.g., "010203040506"), with each pair representing 
     * one of the six octets of the MAC address in "canonical" bit order 
     * according to RFC 2469. 
     * 
     * @return	String	current DesignatedRoot property value
     * @exception	Exception	
     */
    public String getDesignatedRoot(){

    return this.designatedRoot;
    } // getDesignatedRoot

    /**
     * This method sets the SpanningTreeService.DesignatedRoot property value. 
     * This property is described as follows: 
     * 
     * The complete Bridge ID (Priority + MAC Address) of the root bridge. The 
     * format of the priority bits are the first two octets of the 8-octet 
     * long Bridge ID. Note that the MAC address is formatted as twelve 
     * hexadecimal digits (e.g., "010203040506"), with each pair representing 
     * one of the six octets of the MAC address in "canonical" bit order 
     * according to RFC 2469. 
     * 
     * @param	String	new DesignatedRoot property value
     * @exception	Exception	
     */
    public void setDesignatedRoot(String designatedRoot) {

    this.designatedRoot = designatedRoot;
    } // setDesignatedRoot


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RootCost. 
     */
    private short rootCost;
    /**
     * This method returns the SpanningTreeService.RootCost property value. 
     * This property is described as follows: 
     * 
     * The cost of the path from the switch to the root.
     * 
     * @return	short	current RootCost property value
     * @exception	Exception	
     */
    public short getRootCost(){

    return this.rootCost;
    } // getRootCost

    /**
     * This method sets the SpanningTreeService.RootCost property value. This 
     * property is described as follows: 
     * 
     * The cost of the path from the switch to the root.
     * 
     * @param	short	new RootCost property value
     * @exception	Exception	
     */
    public void setRootCost(short rootCost) {

    this.rootCost = rootCost;
    } // setRootCost


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RootPort. 
     */
    private short rootPort;
    /**
     * This method returns the SpanningTreeService.RootPort property value. 
     * This property is described as follows: 
     * 
     * The port number of the port having the lowest cost path to the root 
     * bridge. 
     * 
     * @return	short	current RootPort property value
     * @exception	Exception	
     */
    public short getRootPort(){

    return this.rootPort;
    } // getRootPort

    /**
     * This method sets the SpanningTreeService.RootPort property value. This 
     * property is described as follows: 
     * 
     * The port number of the port having the lowest cost path to the root 
     * bridge. 
     * 
     * @param	short	new RootPort property value
     * @exception	Exception	
     */
    public void setRootPort(short rootPort) {

    this.rootPort = rootPort;
    } // setRootPort


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property MaxAge. 
     */
    private int maxAge;
    /**
     * This method returns the SpanningTreeService.MaxAge property value. This 
     * property is described as follows: 
     * 
     * The current value for the maximum age of Spanning Tree information 
     * before discard, as learned from the network. 
     * 
     * @return	int	current MaxAge property value
     * @exception	Exception	
     */
    public int getMaxAge(){

    return this.maxAge;
    } // getMaxAge

    /**
     * This method sets the SpanningTreeService.MaxAge property value. This 
     * property is described as follows: 
     * 
     * The current value for the maximum age of Spanning Tree information 
     * before discard, as learned from the network. 
     * 
     * @param	int	new MaxAge property value
     * @exception	Exception	
     */
    public void setMaxAge(int maxAge) {

    this.maxAge = maxAge;
    } // setMaxAge


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property HelloTime. 
     */
    private int helloTime;
    /**
     * This method returns the SpanningTreeService.HelloTime property value. 
     * This property is described as follows: 
     * 
     * The current value of the interval between transmission of bridge PDUs 
     * by the switch, on any port for which it is the spanning tree root or 
     * trying to become so, as learned from the network. 
     * 
     * @return	int	current HelloTime property value
     * @exception	Exception	
     */
    public int getHelloTime(){

    return this.helloTime;
    } // getHelloTime

    /**
     * This method sets the SpanningTreeService.HelloTime property value. This 
     * property is described as follows: 
     * 
     * The current value of the interval between transmission of bridge PDUs 
     * by the switch, on any port for which it is the spanning tree root or 
     * trying to become so, as learned from the network. 
     * 
     * @param	int	new HelloTime property value
     * @exception	Exception	
     */
    public void setHelloTime(int helloTime) {

    this.helloTime = helloTime;
    } // setHelloTime


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property HoldTime. 
     */
    private int holdTime;
    /**
     * This method returns the SpanningTreeService.HoldTime property value. 
     * This property is described as follows: 
     * 
     * The minimum interval between transmission of bridge PDUs through a 
     * given port, as learned from the network. 
     * 
     * @return	int	current HoldTime property value
     * @exception	Exception	
     */
    public int getHoldTime(){

    return this.holdTime;
    } // getHoldTime

    /**
     * This method sets the SpanningTreeService.HoldTime property value. This 
     * property is described as follows: 
     * 
     * The minimum interval between transmission of bridge PDUs through a 
     * given port, as learned from the network. 
     * 
     * @param	int	new HoldTime property value
     * @exception	Exception	
     */
    public void setHoldTime(int holdTime) {

    this.holdTime = holdTime;
    } // setHoldTime


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ForwardDelay. 
     */
    private int forwardDelay;
    /**
     * This method returns the SpanningTreeService.ForwardDelay property 
     * value. This property is described as follows: 
     * 
     * The time spent by a port in the listening state before transitioning to 
     * the learning state, and in the learning state before transitioning to 
     * the forwarding state, as learned from the network. This value is also 
     * used during the period of a topology change as the maximum age of 
     * Spanning Tree information before discard. 
     * 
     * @return	int	current ForwardDelay property value
     * @exception	Exception	
     */
    public int getForwardDelay(){

    return this.forwardDelay;
    } // getForwardDelay

    /**
     * This method sets the SpanningTreeService.ForwardDelay property value. 
     * This property is described as follows: 
     * 
     * The time spent by a port in the listening state before transitioning to 
     * the learning state, and in the learning state before transitioning to 
     * the forwarding state, as learned from the network. This value is also 
     * used during the period of a topology change as the maximum age of 
     * Spanning Tree information before discard. 
     * 
     * @param	int	new ForwardDelay property value
     * @exception	Exception	
     */
    public void setForwardDelay(int forwardDelay) {

    this.forwardDelay = forwardDelay;
    } // setForwardDelay


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property BridgeMaxAge. 
     */
    private int bridgeMaxAge;
    /**
     * This method returns the SpanningTreeService.BridgeMaxAge property 
     * value. This property is described as follows: 
     * 
     * The MaxAge parameter to be used by all switches in the network if this 
     * switch becomes the root. 
     * 
     * @return	int	current BridgeMaxAge property value
     * @exception	Exception	
     */
    public int getBridgeMaxAge(){

    return this.bridgeMaxAge;
    } // getBridgeMaxAge

    /**
     * This method sets the SpanningTreeService.BridgeMaxAge property value. 
     * This property is described as follows: 
     * 
     * The MaxAge parameter to be used by all switches in the network if this 
     * switch becomes the root. 
     * 
     * @param	int	new BridgeMaxAge property value
     * @exception	Exception	
     */
    public void setBridgeMaxAge(int bridgeMaxAge) {

    this.bridgeMaxAge = bridgeMaxAge;
    } // setBridgeMaxAge


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property BridgeHelloTime. 
     */
    private int bridgeHelloTime;
    /**
     * This method returns the SpanningTreeService.BridgeHelloTime property 
     * value. This property is described as follows: 
     * 
     * The HelloTime parameter to be used by all switches in the network if 
     * this switch becomes the root. 
     * 
     * @return	int	current BridgeHelloTime property value
     * @exception	Exception	
     */
    public int getBridgeHelloTime(){

    return this.bridgeHelloTime;
    } // getBridgeHelloTime

    /**
     * This method sets the SpanningTreeService.BridgeHelloTime property 
     * value. This property is described as follows: 
     * 
     * The HelloTime parameter to be used by all switches in the network if 
     * this switch becomes the root. 
     * 
     * @param	int	new BridgeHelloTime property value
     * @exception	Exception	
     */
    public void setBridgeHelloTime(int bridgeHelloTime) {

    this.bridgeHelloTime = bridgeHelloTime;
    } // setBridgeHelloTime


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property BridgeForwardDelay. 
     */
    private int bridgeForwardDelay;
    /**
     * This method returns the SpanningTreeService.BridgeForwardDelay property 
     * value. This property is described as follows: 
     * 
     * The ForwardDelay parameter to be used by all switches in the network if 
     * this switch becomes the root. 
     * 
     * @return	int	current BridgeForwardDelay property value
     * @exception	Exception	
     */
    public int getBridgeForwardDelay(){

    return this.bridgeForwardDelay;
    } // getBridgeForwardDelay

    /**
     * This method sets the SpanningTreeService.BridgeForwardDelay property 
     * value. This property is described as follows: 
     * 
     * The ForwardDelay parameter to be used by all switches in the network if 
     * this switch becomes the root. 
     * 
     * @param	int	new BridgeForwardDelay property value
     * @exception	Exception	
     */
    public void setBridgeForwardDelay(int bridgeForwardDelay) {

    this.bridgeForwardDelay = bridgeForwardDelay;
    } // setBridgeForwardDelay



} // Class SpanningTreeService
