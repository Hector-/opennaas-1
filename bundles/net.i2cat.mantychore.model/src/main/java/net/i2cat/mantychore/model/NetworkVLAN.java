/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class NetworkVLAN as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * NetworkVLANBean Interface. The CIM class NetworkVLAN is described as 
 * follows: 
 * 
 * An instance of NetworkVLAN represents a collection of VLANSwitchEndpoints 
 * and/or VLANEndstationEndpoints which are members of the VLAN. There SHOULD 
 * be an instance of NetworkVLAN for every VLAN available in a switch. For 
 * example, in a switch with port-based VLANs, if there are 16 VLANs to which 
 * ports can be assigned (VLAN 1 through VLAN 16), there SHOULD be an 
 * instance of NetworkVLAN for each of VLAN 1 through VLAN 16. 
 */
public class NetworkVLAN extends ConnectivityCollection implements 
    Serializable {

    /**
     * This constructor creates a NetworkVLANBeanImpl Class which implements 
     * the NetworkVLANBean Interface, and encapsulates the CIM class 
     * NetworkVLAN in a Java Bean. The CIM class NetworkVLAN is described as 
     * follows: 
     * 
     * An instance of NetworkVLAN represents a collection of 
     * VLANSwitchEndpoints and/or VLANEndstationEndpoints which are members 
     * of the VLAN. There SHOULD be an instance of NetworkVLAN for every VLAN 
     * available in a switch. For example, in a switch with port-based VLANs, 
     * if there are 16 VLANs to which ports can be assigned (VLAN 1 through 
     * VLAN 16), there SHOULD be an instance of NetworkVLAN for each of VLAN 
     * 1 through VLAN 16. 
     */
    public NetworkVLAN(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property VLANId. 
     */
    private short vLANId;
    /**
     * This method returns the NetworkVLAN.VLANId property value. This 
     * property is described as follows: 
     * 
     * A 12-bit VLAN ID used in the VLAN Tag header.
     * 
     * @return	short	current VLANId property value
     * @exception	Exception	
     */
    public short getVLANId(){

    return this.vLANId;
    } // getVLANId

    /**
     * This method sets the NetworkVLAN.VLANId property value. This property 
     * is described as follows: 
     * 
     * A 12-bit VLAN ID used in the VLAN Tag header.
     * 
     * @param	short	new VLANId property value
     * @exception	Exception	
     */
    public void setVLANId(short vLANId) {

    this.vLANId = vLANId;
    } // setVLANId


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SAIdentifier. 
     */
    private int sAIdentifier;
    /**
     * This method returns the NetworkVLAN.SAIdentifier property value. This 
     * property is described as follows: 
     * 
     * The value of the 802.10 SAID field which would be used for this VLAN.
     * 
     * @return	int	current SAIdentifier property value
     * @exception	Exception	
     */
    public int getSAIdentifier(){

    return this.sAIdentifier;
    } // getSAIdentifier

    /**
     * This method sets the NetworkVLAN.SAIdentifier property value. This 
     * property is described as follows: 
     * 
     * The value of the 802.10 SAID field which would be used for this VLAN.
     * 
     * @param	int	new SAIdentifier property value
     * @exception	Exception	
     */
    public void setSAIdentifier(int sAIdentifier) {

    this.sAIdentifier = sAIdentifier;
    } // setSAIdentifier


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property TransmissionSize. 
     */
    private int transmissionSize;
    /**
     * This method returns the NetworkVLAN.TransmissionSize property value. 
     * This property is described as follows: 
     * 
     * The value of this property is set to a positive integer when the value 
     * of the MTU for all members (switch endpoints/endstationendpoints of 
     * the VLAN is the same, otherwise is set to -1 and the Transmission size 
     * is set on each of the individual endpoints. 
     * 
     * @return	int	current TransmissionSize property value
     * @exception	Exception	
     */
    public int getTransmissionSize(){

    return this.transmissionSize;
    } // getTransmissionSize

    /**
     * This method sets the NetworkVLAN.TransmissionSize property value. This 
     * property is described as follows: 
     * 
     * The value of this property is set to a positive integer when the value 
     * of the MTU for all members (switch endpoints/endstationendpoints of 
     * the VLAN is the same, otherwise is set to -1 and the Transmission size 
     * is set on each of the individual endpoints. 
     * 
     * @param	int	new TransmissionSize property value
     * @exception	Exception	
     */
    public void setTransmissionSize(int transmissionSize) {

    this.transmissionSize = transmissionSize;
    } // setTransmissionSize


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property TypeOfMedia. 
     */

    public enum TypeOfMedia{
    UNKNOWN,
    OTHER,
    NOT_APPLICABLE,
    ETHERNET,
    FDDI,
    DMTF_RESERVED,
    VENDOR_RESERVED
    }
 public TypeOfMedia typeOfMedia;
    /**
     * This method returns the NetworkVLAN.TypeOfMedia property value. This 
     * property is described as follows: 
     * 
     * Defines/restricts the media type of the VLAN. This information is also 
     * needed when a VLAN is not yet associated to any end point. 
     * 
     * @return	short	current TypeOfMedia property value
     * @exception	Exception	
     */
    public TypeOfMedia getTypeOfMedia(){

    return this.typeOfMedia;
    } // getTypeOfMedia

    /**
     * This method sets the NetworkVLAN.TypeOfMedia property value. This 
     * property is described as follows: 
     * 
     * Defines/restricts the media type of the VLAN. This information is also 
     * needed when a VLAN is not yet associated to any end point. 
     * 
     * @param	short	new TypeOfMedia property value
     * @exception	Exception	
     */
    public void setTypeOfMedia(TypeOfMedia typeOfMedia){

    this.typeOfMedia = typeOfMedia;
    } // setTypeOfMedia


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherTypeDescription. 
     */
    private String otherTypeDescription;
    /**
     * This method returns the NetworkVLAN.OtherTypeDescription property 
     * value. This property is described as follows: 
     * 
     * A string describing the type of media that is supported by this VLAN, 
     * when the value of the Type property is set to 1 (i.e., "Other"). This 
     * property should be set to NULL when the Type property is any value 
     * other than 1. 
     * 
     * @return	String	current OtherTypeDescription property 
     * value 
     * @exception	Exception	
     */
    public String getOtherTypeDescription(){

    return this.otherTypeDescription;
    } // getOtherTypeDescription

    /**
     * This method sets the NetworkVLAN.OtherTypeDescription property value. 
     * This property is described as follows: 
     * 
     * A string describing the type of media that is supported by this VLAN, 
     * when the value of the Type property is set to 1 (i.e., "Other"). This 
     * property should be set to NULL when the Type property is any value 
     * other than 1. 
     * 
     * @param	String	new OtherTypeDescription property value
     * @exception	Exception	
     */
    public void setOtherTypeDescription(String otherTypeDescription) {

    this.otherTypeDescription = otherTypeDescription;
    } // setOtherTypeDescription



} // Class NetworkVLAN
