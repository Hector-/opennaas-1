/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Nov 29 
 * 11:50:57 CET 2010. 
 */

package net.i2cat.mantychore.model;

import javax.wbem.cim.CIMException;
import javax.wbem.client.CIMOMHandle;
import javax.wbem.cim.CIMInstance;

/**
 * This Interface defines the methods that must be implemented by CIMBeanImpl 
 * and its subclasses. CIMBeanImpl constitutes the base class of the Java 
 * source generated by 'mofcomp -j'. 
 */
public class CIM{

    /**
     * This method returns the CIMBean's CIMOMHandle.
     * 
     * @return	CIMOMHandle	handle to the CIMOM
     */
    
    /**
     * This method sets the CIMBean's CIMOMHandle to the specifed value.
     * 
     * @param	CIMOMHandle	handle to the CIMOM
     */
    
    /**
     * This method returns the CIMBean's CIMInstance.
     * 
     * @return	CIMInstance	handle to the CIMInstance being 
     * managed 
     */
    
    /**
     * This method sets the CIMBean's CIMInstance to the specified value.
     * 
     * @param	CIMInstance	handle to the CIMInstance being 
     * managed 
     */
    
    /**
     * This method makes the remote call to update the CIMInstance in the 
     * CIMOM. 
     */
    public void update() throws CIMException { }

    /**
     * This method makes the remote call to update the specified CIMProperty 
     * of the CIMInstance in the CIMOM. 
     * 
     * @param	String	property name to update in the CIMInstance
     * @param	Object	property value to update in the CIMProperty
     */
    public void update(String propName, Object value) throws CIMException { } 
	

    /**
     * This method makes the remote call to delete the CIMInstance in the 
     * CIMOM. 
     */
    public void delete() throws CIMException { }

    /**
     * This method returns a string array of the Key qualified property 
     * name(s) in the CIMInstance. This is needed to build the CIMObjectPath 
     * for the CIMInstance if it does not contain any qualifier information. 
     * 
     * @return	String	Version qualifier value or "-1" if there 
     * isn't one 
     */
    
    /**
     * This method returns the CIM class's Version qualifier value, or '-1' if 
     * it does not have this qualifier. 
     * 
     * @return	String[]	array of the key qualified property 
     * names 
     */
    
    /**
     * This method returns a string representation of the CIMBean. This method 
     * is intended for debug purposes and the format of the string may vary 
     * from implementation to implementation. The string returned may be 
     * empty, but may not be null. 
     * 
     * @return	String	string representation of the Bean
     */
    public String toString() { return null; } 

} // CIM
