/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class DependencyContext as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * DependencyContextBean Interface. The CIM class DependencyContext is 
 * described as follows: 
 * 
 * Note: The Configuration class is being deprecated in lieu of using a 
 * ConcreteComponent relationship to indicate a hierarchy of Setting or 
 * SettingData instances. Therefore, this association is also deprecated but 
 * it is deprecated to "No value" because there are no equivalent 
 * relationships currently defined for the Setting or SettingData classes. 
 * This association is an anomaly because it defines what cannot be expressed 
 * for the components of the Configuration. Also, it singles out the 
 * Dependency association as opposed to allowing any relationships to be 
 * defined as "settings". Its use in the industry is discouraged. Deprecated 
 * description: This relationship associates a Dependency with one or more 
 * Configuration objects. For example, dependencies for a ComputerSystem 
 * could change based on the site or network to which the System is attached. 
 */
public class DependencyContext  implements Serializable {

    /**
     * This constructor creates a DependencyContextBeanImpl Class which 
     * implements the DependencyContextBean Interface, and encapsulates the 
     * CIM class DependencyContext in a Java Bean. The CIM class 
     * DependencyContext is described as follows: 
     * 
     * Note: The Configuration class is being deprecated in lieu of using a 
     * ConcreteComponent relationship to indicate a hierarchy of Setting or 
     * SettingData instances. Therefore, this association is also deprecated 
     * but it is deprecated to "No value" because there are no equivalent 
     * relationships currently defined for the Setting or SettingData 
     * classes. This association is an anomaly because it defines what cannot 
     * be expressed for the components of the Configuration. Also, it singles 
     * out the Dependency association as opposed to allowing any 
     * relationships to be defined as "settings". Its use in the industry is 
     * discouraged. Deprecated description: This relationship associates a 
     * Dependency with one or more Configuration objects. For example, 
     * dependencies for a ComputerSystem could change based on the site or 
     * network to which the System is attached. 
     */
    public DependencyContext(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Context. 
     */
    @Deprecated    private Configuration context;
    /**
     * This method returns the DependencyContext.Context property value. This 
     * property is described as follows: 
     * 
     * Note: The use of this element is deprecated. Deprecated description: 
     * The Configuration object that aggregates the Dependency. 
     * 
     * @return	CIM_Configuration	current Context property value
     * @exception	Exception	
     */
    @Deprecated
    public Configuration getContext(){

    return this.context;
    } // getContext

    /**
     * This method sets the DependencyContext.Context property value. This 
     * property is described as follows: 
     * 
     * Note: The use of this element is deprecated. Deprecated description: 
     * The Configuration object that aggregates the Dependency. 
     * 
     * @param	CIM_Configuration	new Context property value
     * @exception	Exception	
     */
    @Deprecated
    public void setContext(Configuration context) {

    this.context = context;
    } // setContext


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Dependency. 
     */
    @Deprecated    private Dependency dependency;
    /**
     * This method returns the DependencyContext.Dependency property value. 
     * This property is described as follows: 
     * 
     * Note: The use of this element is deprecated. Deprecated description: An 
     * aggregated Dependency. 
     * 
     * @return	CIM_Dependency	current Dependency property value
     * @exception	Exception	
     */
    @Deprecated
    public Dependency getDependency(){

    return this.dependency;
    } // getDependency

    /**
     * This method sets the DependencyContext.Dependency property value. This 
     * property is described as follows: 
     * 
     * Note: The use of this element is deprecated. Deprecated description: An 
     * aggregated Dependency. 
     * 
     * @param	CIM_Dependency	new Dependency property value
     * @exception	Exception	
     */
    @Deprecated
    public void setDependency(Dependency dependency) {

    this.dependency = dependency;
    } // setDependency



} // Class DependencyContext
