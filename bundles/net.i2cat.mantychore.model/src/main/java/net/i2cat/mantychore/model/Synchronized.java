/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Nov 29 
 * 11:50:57 CET 2010. 
 */

package net.i2cat.mantychore.model;

import javax.wbem.client.*;
import javax.wbem.cim.*;
import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class Synchronized as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * SynchronizedBean Interface. The CIM class Synchronized is described as 
 * follows: 
 * 
 * Indicates that two ManagedElements were aligned or made to be equivalent at 
 * the specified point in time. If the Boolean property SyncMaintained is 
 * true, then synchronization of the Elements is preserved. Both like and 
 * unlike objects can be synchronized. For example, two WatchDog timers can 
 * be aligned, or the contents of a LogicalFile can be synchronized with the 
 * contents of a StorageExtent. 
 */
public class Synchronized  implements Serializable {

    /**
     * This constructor creates a SynchronizedBeanImpl Class which implements 
     * the SynchronizedBean Interface, and encapsulates the CIM class 
     * Synchronized in a Java Bean. The CIM class Synchronized is described 
     * as follows: 
     * 
     * Indicates that two ManagedElements were aligned or made to be 
     * equivalent at the specified point in time. If the Boolean property 
     * SyncMaintained is true, then synchronization of the Elements is 
     * preserved. Both like and unlike objects can be synchronized. For 
     * example, two WatchDog timers can be aligned, or the contents of a 
     * LogicalFile can be synchronized with the contents of a StorageExtent. 
     */
    public Synchronized(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SystemElement. 
     */
    private ManagedElement systemElement;
    /**
     * This method returns the Synchronized.SystemElement property value. This 
     * property is described as follows: 
     * 
     * SystemElement represents one ManagedElement that is synchronized with 
     * the entity referenced as SyncedElement. 
     * 
     * @return	CIM_ManagedElement	current SystemElement property 
     * value 
     * @exception	Exception	
     */
    public ManagedElement getSystemElement(){

    return this.systemElement;
    } // getSystemElement

    /**
     * This method sets the Synchronized.SystemElement property value. This 
     * property is described as follows: 
     * 
     * SystemElement represents one ManagedElement that is synchronized with 
     * the entity referenced as SyncedElement. 
     * 
     * @param	CIM_ManagedElement	new SystemElement property 
     * value 
     * @exception	Exception	
     */
    public void setSystemElement(ManagedElement systemElement) {

    this.systemElement = systemElement;
    } // setSystemElement


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SyncedElement. 
     */
    private ManagedElement syncedElement;
    /**
     * This method returns the Synchronized.SyncedElement property value. This 
     * property is described as follows: 
     * 
     * SyncedElement represents another ManagedElement that is synchronized 
     * with the entity referenced as SystemElement. 
     * 
     * @return	CIM_ManagedElement	current SyncedElement property 
     * value 
     * @exception	Exception	
     */
    public ManagedElement getSyncedElement(){

    return this.syncedElement;
    } // getSyncedElement

    /**
     * This method sets the Synchronized.SyncedElement property value. This 
     * property is described as follows: 
     * 
     * SyncedElement represents another ManagedElement that is synchronized 
     * with the entity referenced as SystemElement. 
     * 
     * @param	CIM_ManagedElement	new SyncedElement property 
     * value 
     * @exception	Exception	
     */
    public void setSyncedElement(ManagedElement syncedElement) {

    this.syncedElement = syncedElement;
    } // setSyncedElement


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property WhenSynced. 
     */
    private CIMDateTime whenSynced;
    /**
     * This method returns the Synchronized.WhenSynced property value. This 
     * property is described as follows: 
     * 
     * The point in time that the Elements were synchronized.
     * 
     * @return	CIMDateTime	current WhenSynced property value
     * @exception	Exception	
     */
    public CIMDateTime getWhenSynced(){

    return this.whenSynced;
    } // getWhenSynced

    /**
     * This method sets the Synchronized.WhenSynced property value. This 
     * property is described as follows: 
     * 
     * The point in time that the Elements were synchronized.
     * 
     * @param	CIMDateTime	new WhenSynced property value
     * @exception	Exception	
     */
    public void setWhenSynced(CIMDateTime whenSynced) {

    this.whenSynced = whenSynced;
    } // setWhenSynced


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SyncMaintained. 
     */
    private boolean syncMaintained;
    /**
     * This method returns the Synchronized.SyncMaintained property value. 
     * This property is described as follows: 
     * 
     * Boolean indicating whether synchronization is maintained.
     * 
     * @return	boolean	current SyncMaintained property value
     * @exception	Exception	
     */
    public boolean isSyncMaintained(){

    return this.syncMaintained;
    } // getSyncMaintained

    /**
     * This method sets the Synchronized.SyncMaintained property value. This 
     * property is described as follows: 
     * 
     * Boolean indicating whether synchronization is maintained.
     * 
     * @param	boolean	new SyncMaintained property value
     * @exception	Exception	
     */
    public void setSyncMaintained(boolean syncMaintained) {

    this.syncMaintained = syncMaintained;
    } // setSyncMaintained



} // Class Synchronized
