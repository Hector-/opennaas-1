/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class NetworkAdapterRedundancyComponent as well as methods 
 * comparable to the invokeMethods defined for this class. This Class 
 * implements the NetworkAdapterRedundancyComponentBean Interface. The CIM 
 * class NetworkAdapterRedundancyComponent is described as follows: 
 * 
 * Note: The use of the CIM_NetworkAdapterRedundancyComponent class has been 
 * deprecated because a specific association is not needed. Instead use the 
 * CIM_ OrderedMemberOf Collection class. Deprecated description: 
 * CIM_NetworkAdapterRedundancyComponent indicates the role that a 
 * NetworkAdapter plays in an ExtraCapacityGroup, providing load balancing. 
 */
    @Deprecated
    @Entity
public class NetworkAdapterRedundancyComponent extends RedundancyComponent 
    implements Serializable {

    /**
     * This constructor creates a NetworkAdapterRedundancyComponentBeanImpl 
     * Class which implements the NetworkAdapterRedundancyComponentBean 
     * Interface, and encapsulates the CIM class 
     * NetworkAdapterRedundancyComponent in a Java Bean. The CIM class 
     * NetworkAdapterRedundancyComponent is described as follows: 
     * 
     * Note: The use of the CIM_NetworkAdapterRedundancyComponent class has 
     * been deprecated because a specific association is not needed. Instead 
     * use the CIM_ OrderedMemberOf Collection class. Deprecated description: 
     * CIM_NetworkAdapterRedundancyComponent indicates the role that a 
     * NetworkAdapter plays in an ExtraCapacityGroup, providing load 
     * balancing. 
     */
    public NetworkAdapterRedundancyComponent(){};
    /**
     * This method create an Association of the type 
     * NetworkAdapterRedundancyComponent between one ExtraCapacityGroup 
     * object and NetworkAdapter object 
     */
    @Deprecated
    public Association link(ExtraCapacityGroup groupComponent,NetworkAdapter 
	partComponent){

    return super.link(NetworkAdapterRedundancyComponent.class,groupComponent,partComponent);
    }//link
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ScopeOfBalancing. 
     */
    @Deprecated
    public enum ScopeOfBalancing{
    UNKNOWN,
    LOAD_BALANCING_TRANSMIT_ONLY,
    LOAD_BALANCING_RECEIVE_ONLY,
    FULL_LOAD_BALANCING
    }
    @Deprecated
    private ScopeOfBalancing scopeOfBalancing;
    /**
     * This method returns the 
     * NetworkAdapterRedundancyComponent.ScopeOfBalancing property value. 
     * This property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: Indicates the scope of load balancing for the 
     * NetworkAdapters that is involved in the RedundancyGroup. Load 
     * balancing can be restricted to transmitting data only (value=1), 
     * receiving data only (value=2), or used for both transmit and receive 
     * (value=3). 
     * 
     * @return	int	current ScopeOfBalancing property value
     * @exception	Exception	
     */
    @Deprecated
    public ScopeOfBalancing getScopeOfBalancing(){

    return this.scopeOfBalancing;
    } // getScopeOfBalancing

    /**
     * This method sets the NetworkAdapterRedundancyComponent.ScopeOfBalancing 
     * property value. This property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: Indicates the scope of load balancing for the 
     * NetworkAdapters that is involved in the RedundancyGroup. Load 
     * balancing can be restricted to transmitting data only (value=1), 
     * receiving data only (value=2), or used for both transmit and receive 
     * (value=3). 
     * 
     * @param	int	new ScopeOfBalancing property value
     * @exception	Exception	
     */
    @Deprecated
    public void setScopeOfBalancing(ScopeOfBalancing scopeOfBalancing){

    this.scopeOfBalancing = scopeOfBalancing;
    } // setScopeOfBalancing


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PrimaryAdapter. 
     */
    @Deprecated
    public enum PrimaryAdapter{
    UNKNOWN,
    ORIGINAL_PRIMARY,
    PREFERRED_PRIMARY,
    BOTH,
    NOT_APPLICABLE
    }
    @Deprecated
    private PrimaryAdapter primaryAdapter;
    /**
     * This method returns the 
     * NetworkAdapterRedundancyComponent.PrimaryAdapter property value. This 
     * property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: A Boolean that indicates whether the Network Adapter is 
     * an original primary adapter (value=1), a preferred primary adapter 
     * (value=2), or both (value=3). Values of "Unknown" and "Not Applicable" 
     * can also be specified. 
     * 
     * @return	int	current PrimaryAdapter property value
     * @exception	Exception	
     */
    @Deprecated
    public PrimaryAdapter getPrimaryAdapter(){

    return this.primaryAdapter;
    } // getPrimaryAdapter

    /**
     * This method sets the NetworkAdapterRedundancyComponent.PrimaryAdapter 
     * property value. This property is described as follows: 
     * 
     * Note: The use of this method has been deprecated. Deprecated 
     * description: A Boolean that indicates whether the Network Adapter is 
     * an original primary adapter (value=1), a preferred primary adapter 
     * (value=2), or both (value=3). Values of "Unknown" and "Not Applicable" 
     * can also be specified. 
     * 
     * @param	int	new PrimaryAdapter property value
     * @exception	Exception	
     */
    @Deprecated
    public void setPrimaryAdapter(PrimaryAdapter primaryAdapter){

    this.primaryAdapter = primaryAdapter;
    } // setPrimaryAdapter



} // Class NetworkAdapterRedundancyComponent
