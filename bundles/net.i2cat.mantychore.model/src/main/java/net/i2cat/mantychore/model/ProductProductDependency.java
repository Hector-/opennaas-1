/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Nov 29 
 * 11:50:57 CET 2010. 
 */

package net.i2cat.mantychore.model;

import javax.wbem.client.*;
import javax.wbem.cim.*;
import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class ProductProductDependency as well as methods comparable to 
 * the invokeMethods defined for this class. This Class implements the 
 * ProductProductDependencyBean Interface. The CIM class 
 * ProductProductDependency is described as follows: 
 * 
 * CIM_ProductProductDependency is an association between two Products, 
 * indicating that one must be installed, or must be absent, for the other to 
 * function. This is conceptually equivalent to the ServiceServiceDependency 
 * association. 
 */
public class ProductProductDependency  implements Serializable {

    /**
     * This constructor creates a ProductProductDependencyBeanImpl Class which 
     * implements the ProductProductDependencyBean Interface, and 
     * encapsulates the CIM class ProductProductDependency in a Java Bean. 
     * The CIM class ProductProductDependency is described as follows: 
     * 
     * CIM_ProductProductDependency is an association between two Products, 
     * indicating that one must be installed, or must be absent, for the 
     * other to function. This is conceptually equivalent to the 
     * ServiceServiceDependency association. 
     */
    public ProductProductDependency(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RequiredProduct. 
     */
    private Product requiredProduct;
    /**
     * This method returns the ProductProductDependency.RequiredProduct 
     * property value. This property is described as follows: 
     * 
     * The required Product.
     * 
     * @return	CIM_Product	current RequiredProduct property 
     * value 
     * @exception	Exception	
     */
    public Product getRequiredProduct(){

    return this.requiredProduct;
    } // getRequiredProduct

    /**
     * This method sets the ProductProductDependency.RequiredProduct property 
     * value. This property is described as follows: 
     * 
     * The required Product.
     * 
     * @param	CIM_Product	new RequiredProduct property value
     * @exception	Exception	
     */
    public void setRequiredProduct(Product requiredProduct) {

    this.requiredProduct = requiredProduct;
    } // setRequiredProduct


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property DependentProduct. 
     */
    private Product dependentProduct;
    /**
     * This method returns the ProductProductDependency.DependentProduct 
     * property value. This property is described as follows: 
     * 
     * The Product that is dependent on another Product.
     * 
     * @return	CIM_Product	current DependentProduct property 
     * value 
     * @exception	Exception	
     */
    public Product getDependentProduct(){

    return this.dependentProduct;
    } // getDependentProduct

    /**
     * This method sets the ProductProductDependency.DependentProduct property 
     * value. This property is described as follows: 
     * 
     * The Product that is dependent on another Product.
     * 
     * @param	CIM_Product	new DependentProduct property value
     * @exception	Exception	
     */
    public void setDependentProduct(Product dependentProduct) {

    this.dependentProduct = dependentProduct;
    } // setDependentProduct


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property TypeOfDependency. 
     */

    public enum TypeOfDependency{
    UNKNOWN,
    OTHER,
    PRODUCT_MUST_BE_INSTALLED,
    PRODUCT_MUST_NOT_BE_INSTALLED
    }TypeOfDependency typeOfDependency;
    /**
     * This method returns the ProductProductDependency.TypeOfDependency 
     * property value. This property is described as follows: 
     * 
     * The nature of the Product dependency. This property describes that the 
     * associated Product must be installed (value=2) or must be absent 
     * (value=3) in order for the Product to function. 
     * 
     * @return	short	current TypeOfDependency property value
     * @exception	Exception	
     */
    public TypeOfDependency getTypeOfDependency(){

    return this.typeOfDependency;
    } // getTypeOfDependency

    /**
     * This method sets the ProductProductDependency.TypeOfDependency property 
     * value. This property is described as follows: 
     * 
     * The nature of the Product dependency. This property describes that the 
     * associated Product must be installed (value=2) or must be absent 
     * (value=3) in order for the Product to function. 
     * 
     * @param	short	new TypeOfDependency property value
     * @exception	Exception	
     */
    public void setTypeOfDependency(TypeOfDependency typeOfDependency){

    this.typeOfDependency = typeOfDependency;
    } // setTypeOfDependency



} // Class ProductProductDependency
