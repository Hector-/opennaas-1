/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 17 
 * 13:56:59 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class CalculationServiceForDropper as well as methods 
 * comparable to the invokeMethods defined for this class. This Class 
 * implements the CalculationServiceForDropperBean Interface. The CIM class 
 * CalculationServiceForDropper is described as follows: 
 * 
 * This association is a subclass of ServiceServiceDependency, and represents 
 * the reliance of a REDDropperService on one or more 
 * DropThresholdCalculationServices. The latter calculate average queue 
 * depth, based on the observed depths of a queue. The specific queue 
 * examined by each CalculationService is defined using the 
 * CalculationBasedOnQueue association. 
 */
public class CalculationServiceForDropper extends ServiceServiceDependency 
    implements Serializable {

    /**
     * This constructor creates a CalculationServiceForDropperBeanImpl Class 
     * which implements the CalculationServiceForDropperBean Interface, and 
     * encapsulates the CIM class CalculationServiceForDropper in a Java 
     * Bean. The CIM class CalculationServiceForDropper is described as 
     * follows: 
     * 
     * This association is a subclass of ServiceServiceDependency, and 
     * represents the reliance of a REDDropperService on one or more 
     * DropThresholdCalculationServices. The latter calculate average queue 
     * depth, based on the observed depths of a queue. The specific queue 
     * examined by each CalculationService is defined using the 
     * CalculationBasedOnQueue association. 
     */
    public CalculationServiceForDropper(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Antecedent. 
     */
    private DropThresholdCalculationService antecedent;
    /**
     * This method returns the CalculationServiceForDropper.Antecedent 
     * property value. This property is described as follows: 
     * 
     * A calculation service for the dropper.
     * 
     * @return	CIM_DropThresholdCalculationService	current 
     * Antecedent property value 
     * @exception	Exception	
     */
    public DropThresholdCalculationService getAntecedent(){

    return (DropThresholdCalculationService)antecedent;
    } // getAntecedent

    /**
     * This method sets the CalculationServiceForDropper.Antecedent property 
     * value. This property is described as follows: 
     * 
     * A calculation service for the dropper.
     * 
     * @param	CIM_DropThresholdCalculationService	new Antecedent 
     * property value 
     * @exception	Exception	
     */
    public void setAntecedent(DropThresholdCalculationService antecedent) {

    this.antecedent = antecedent;
    } // setAntecedent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Dependent. 
     */
    private REDDropperService dependent;
    /**
     * This method returns the CalculationServiceForDropper.Dependent property 
     * value. This property is described as follows: 
     * 
     * The RED dropper which is dependent on average queue depth calculations 
     * by the Antecedent Service. 
     * 
     * @return	CIM_REDDropperService	current Dependent property 
     * value 
     * @exception	Exception	
     */
    public REDDropperService getDependent(){

    return (REDDropperService)dependent;
    } // getDependent

    /**
     * This method sets the CalculationServiceForDropper.Dependent property 
     * value. This property is described as follows: 
     * 
     * The RED dropper which is dependent on average queue depth calculations 
     * by the Antecedent Service. 
     * 
     * @param	CIM_REDDropperService	new Dependent property value
     * @exception	Exception	
     */
    public void setDependent(REDDropperService dependent) {

    this.dependent = dependent;
    } // setDependent



} // Class CalculationServiceForDropper
