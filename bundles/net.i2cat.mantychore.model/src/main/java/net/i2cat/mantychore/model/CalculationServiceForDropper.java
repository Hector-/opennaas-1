/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class CalculationServiceForDropper as well as methods 
 * comparable to the invokeMethods defined for this class. This Class 
 * implements the CalculationServiceForDropperBean Interface. The CIM class 
 * CalculationServiceForDropper is described as follows: 
 * 
 * This association is a subclass of ServiceServiceDependency, and represents 
 * the reliance of a REDDropperService on one or more 
 * DropThresholdCalculationServices. The latter calculate average queue 
 * depth, based on the observed depths of a queue. The specific queue 
 * examined by each CalculationService is defined using the 
 * CalculationBasedOnQueue association. 
 */
    @Entity
public class CalculationServiceForDropper extends ServiceServiceDependency 
    implements Serializable {

    /**
     * This constructor creates a CalculationServiceForDropperBeanImpl Class 
     * which implements the CalculationServiceForDropperBean Interface, and 
     * encapsulates the CIM class CalculationServiceForDropper in a Java 
     * Bean. The CIM class CalculationServiceForDropper is described as 
     * follows: 
     * 
     * This association is a subclass of ServiceServiceDependency, and 
     * represents the reliance of a REDDropperService on one or more 
     * DropThresholdCalculationServices. The latter calculate average queue 
     * depth, based on the observed depths of a queue. The specific queue 
     * examined by each CalculationService is defined using the 
     * CalculationBasedOnQueue association. 
     */
    public CalculationServiceForDropper(){};
    /**
     * This method create an Association of the type 
     * CalculationServiceForDropper between one 
     * DropThresholdCalculationService object and REDDropperService object 
     */
    public Association link(DropThresholdCalculationService 
	antecedent,REDDropperService dependent){

    return 
	super.link(CalculationServiceForDropper.class,antecedent,dependent);
    }//link

} // Class CalculationServiceForDropper
