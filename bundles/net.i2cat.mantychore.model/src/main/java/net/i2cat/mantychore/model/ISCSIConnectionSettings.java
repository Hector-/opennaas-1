/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Nov 29 
 * 11:50:57 CET 2010. 
 */

package net.i2cat.mantychore.model;

import javax.wbem.client.*;
import javax.wbem.cim.*;
import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class ISCSIConnectionSettings as well as methods comparable to 
 * the invokeMethods defined for this class. This Class implements the 
 * ISCSIConnectionSettingsBean Interface. The CIM class 
 * ISCSIConnectionSettings is described as follows: 
 * 
 * The settings for the usage of an iSCSI NetworkPortal by an 
 * iSCSIProtcolEndpoint. These settings are the starting point for 
 * negotiation for connection establishment. If an implmentation supports 
 * different connections settings for a NetworkPortal for each 
 * iSCSIProtocolEndpoint that is bound to it, an instance of this class will 
 * be associated by ElementSettingData to an instance of 
 * iSCSIProtocolEndpoint. If an implementation supports the same connection 
 * settings for a NetworkPortal for all iSCSIProtocolEndpoints then an 
 * instance of this class will be associated by ElementSettingData to an 
 * instance of either TCPProtocolEndpoint (When the NetworkPortal is a 
 * target) or IPProtocolEndpoint (When the NetworkPortal is an initiator). 
 * The properties that reflect the actual outcome of the negotiation are 
 * found in the iSCSIConnection class. 
 */
public class ISCSIConnectionSettings extends SettingData implements 
    Serializable {

    /**
     * This constructor creates a ISCSIConnectionSettingsBeanImpl Class which 
     * implements the ISCSIConnectionSettingsBean Interface, and encapsulates 
     * the CIM class ISCSIConnectionSettings in a Java Bean. The CIM class 
     * ISCSIConnectionSettings is described as follows: 
     * 
     * The settings for the usage of an iSCSI NetworkPortal by an 
     * iSCSIProtcolEndpoint. These settings are the starting point for 
     * negotiation for connection establishment. If an implmentation supports 
     * different connections settings for a NetworkPortal for each 
     * iSCSIProtocolEndpoint that is bound to it, an instance of this class 
     * will be associated by ElementSettingData to an instance of 
     * iSCSIProtocolEndpoint. If an implementation supports the same 
     * connection settings for a NetworkPortal for all iSCSIProtocolEndpoints 
     * then an instance of this class will be associated by 
     * ElementSettingData to an instance of either TCPProtocolEndpoint (When 
     * the NetworkPortal is a target) or IPProtocolEndpoint (When the 
     * NetworkPortal is an initiator). The properties that reflect the actual 
     * outcome of the negotiation are found in the iSCSIConnection class. 
     */
    public ISCSIConnectionSettings(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property MaxReceiveDataSegmentLength. 
     */
    private int maxReceiveDataSegmentLength;
    /**
     * This method returns the 
     * iSCSIConnectionSettings.MaxReceiveDataSegmentLength property value. 
     * This property is described as follows: 
     * 
     * The maximum PDU length this portal can receive. This MAY be constrained 
     * by hardware characteristics and individual implementations MAY choose 
     * not to allow this property to be changed. 
     * 
     * @return	int	current MaxReceiveDataSegmentLength property 
     * value 
     * @exception	Exception	
     */
    public int getMaxReceiveDataSegmentLength(){

    return this.maxReceiveDataSegmentLength;
    } // getMaxReceiveDataSegmentLength

    /**
     * This method sets the 
     * iSCSIConnectionSettings.MaxReceiveDataSegmentLength property value. 
     * This property is described as follows: 
     * 
     * The maximum PDU length this portal can receive. This MAY be constrained 
     * by hardware characteristics and individual implementations MAY choose 
     * not to allow this property to be changed. 
     * 
     * @param	int	new MaxReceiveDataSegmentLength property value
     * @exception	Exception	
     */
    public void setMaxReceiveDataSegmentLength(int 
	maxReceiveDataSegmentLength) {

    this.maxReceiveDataSegmentLength = maxReceiveDataSegmentLength;
    } // setMaxReceiveDataSegmentLength


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PrimaryHeaderDigestMethod. 
     */

    public enum PrimaryHeaderDigestMethod{
    OTHER,
    NO_DIGEST,
    CRC32C
    }PrimaryHeaderDigestMethod primaryHeaderDigestMethod;
    /**
     * This method returns the 
     * iSCSIConnectionSettings.PrimaryHeaderDigestMethod property value. This 
     * property is described as follows: 
     * 
     * The preferred header digest for this portal.
     * 
     * @return	short	current PrimaryHeaderDigestMethod property 
     * value 
     * @exception	Exception	
     */
    public PrimaryHeaderDigestMethod getPrimaryHeaderDigestMethod(){

    return this.primaryHeaderDigestMethod;
    } // getPrimaryHeaderDigestMethod

    /**
     * This method sets the iSCSIConnectionSettings.PrimaryHeaderDigestMethod 
     * property value. This property is described as follows: 
     * 
     * The preferred header digest for this portal.
     * 
     * @param	short	new PrimaryHeaderDigestMethod property value
     * @exception	Exception	
     */
    public void setPrimaryHeaderDigestMethod(PrimaryHeaderDigestMethod 
	primaryHeaderDigestMethod){

    this.primaryHeaderDigestMethod = primaryHeaderDigestMethod;
    } // setPrimaryHeaderDigestMethod


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherPrimaryHeaderDigestMethod. 
     */
    private String otherPrimaryHeaderDigestMethod;
    /**
     * This method returns the 
     * iSCSIConnectionSettings.OtherPrimaryHeaderDigestMethod property value. 
     * This property is described as follows: 
     * 
     * A string describing the preferred Header Digest method when 
     * PrimaryHeaderDigestMethod is equal to the value 1, "Other". 
     * 
     * @return	String	current OtherPrimaryHeaderDigestMethod 
     * property value 
     * @exception	Exception	
     */
    public String getOtherPrimaryHeaderDigestMethod(){

    return this.otherPrimaryHeaderDigestMethod;
    } // getOtherPrimaryHeaderDigestMethod

    /**
     * This method sets the 
     * iSCSIConnectionSettings.OtherPrimaryHeaderDigestMethod property value. 
     * This property is described as follows: 
     * 
     * A string describing the preferred Header Digest method when 
     * PrimaryHeaderDigestMethod is equal to the value 1, "Other". 
     * 
     * @param	String	new OtherPrimaryHeaderDigestMethod property 
     * value 
     * @exception	Exception	
     */
    public void setOtherPrimaryHeaderDigestMethod(String 
	otherPrimaryHeaderDigestMethod) {

    this.otherPrimaryHeaderDigestMethod = otherPrimaryHeaderDigestMethod;
    } // setOtherPrimaryHeaderDigestMethod


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PrimaryDataDigestMethod. 
     */

    public enum PrimaryDataDigestMethod{
    OTHER,
    NO_DIGEST,
    CRC32C
    }PrimaryDataDigestMethod primaryDataDigestMethod;
    /**
     * This method returns the iSCSIConnectionSettings.PrimaryDataDigestMethod 
     * property value. This property is described as follows: 
     * 
     * The preferred data digest method for this portal.
     * 
     * @return	short	current PrimaryDataDigestMethod property 
     * value 
     * @exception	Exception	
     */
    public PrimaryDataDigestMethod getPrimaryDataDigestMethod(){

    return this.primaryDataDigestMethod;
    } // getPrimaryDataDigestMethod

    /**
     * This method sets the iSCSIConnectionSettings.PrimaryDataDigestMethod 
     * property value. This property is described as follows: 
     * 
     * The preferred data digest method for this portal.
     * 
     * @param	short	new PrimaryDataDigestMethod property value
     * @exception	Exception	
     */
    public void setPrimaryDataDigestMethod(PrimaryDataDigestMethod 
	primaryDataDigestMethod){

    this.primaryDataDigestMethod = primaryDataDigestMethod;
    } // setPrimaryDataDigestMethod


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherPrimaryDataDigestMethod. 
     */
    private String otherPrimaryDataDigestMethod;
    /**
     * This method returns the 
     * iSCSIConnectionSettings.OtherPrimaryDataDigestMethod property value. 
     * This property is described as follows: 
     * 
     * A string describing the preferred Data Digest method when 
     * PrimaryDataDigestMethod is equal to the value 1, "Other". 
     * 
     * @return	String	current OtherPrimaryDataDigestMethod 
     * property value 
     * @exception	Exception	
     */
    public String getOtherPrimaryDataDigestMethod(){

    return this.otherPrimaryDataDigestMethod;
    } // getOtherPrimaryDataDigestMethod

    /**
     * This method sets the 
     * iSCSIConnectionSettings.OtherPrimaryDataDigestMethod property value. 
     * This property is described as follows: 
     * 
     * A string describing the preferred Data Digest method when 
     * PrimaryDataDigestMethod is equal to the value 1, "Other". 
     * 
     * @param	String	new OtherPrimaryDataDigestMethod property 
     * value 
     * @exception	Exception	
     */
    public void setOtherPrimaryDataDigestMethod(String 
	otherPrimaryDataDigestMethod) {

    this.otherPrimaryDataDigestMethod = otherPrimaryDataDigestMethod;
    } // setOtherPrimaryDataDigestMethod


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SecondaryHeaderDigestMethod. 
     */

    public enum SecondaryHeaderDigestMethod{
    OTHER,
    NO_DIGEST,
    CRC32C,
    NO_SECONDARY_PREFERENCE
    }SecondaryHeaderDigestMethod secondaryHeaderDigestMethod;
    /**
     * This method returns the 
     * iSCSIConnectionSettings.SecondaryHeaderDigestMethod property value. 
     * This property is described as follows: 
     * 
     * The secondary header digest preference for this portal.
     * 
     * @return	short	current SecondaryHeaderDigestMethod 
     * property value 
     * @exception	Exception	
     */
    public SecondaryHeaderDigestMethod getSecondaryHeaderDigestMethod(){

    return this.secondaryHeaderDigestMethod;
    } // getSecondaryHeaderDigestMethod

    /**
     * This method sets the 
     * iSCSIConnectionSettings.SecondaryHeaderDigestMethod property value. 
     * This property is described as follows: 
     * 
     * The secondary header digest preference for this portal.
     * 
     * @param	short	new SecondaryHeaderDigestMethod property 
     * value 
     * @exception	Exception	
     */
    public void setSecondaryHeaderDigestMethod(SecondaryHeaderDigestMethod 
	secondaryHeaderDigestMethod){

    this.secondaryHeaderDigestMethod = secondaryHeaderDigestMethod;
    } // setSecondaryHeaderDigestMethod


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherSecondaryHeaderDigestMethod. 
     */
    private String otherSecondaryHeaderDigestMethod;
    /**
     * This method returns the 
     * iSCSIConnectionSettings.OtherSecondaryHeaderDigestMethod property 
     * value. This property is described as follows: 
     * 
     * A string describing the alternate Header Digest method preference when 
     * SecondaryHeaderDigestMethod is equal to the value 1, "Other". 
     * 
     * @return	String	current OtherSecondaryHeaderDigestMethod 
     * property value 
     * @exception	Exception	
     */
    public String getOtherSecondaryHeaderDigestMethod(){

    return this.otherSecondaryHeaderDigestMethod;
    } // getOtherSecondaryHeaderDigestMethod

    /**
     * This method sets the 
     * iSCSIConnectionSettings.OtherSecondaryHeaderDigestMethod property 
     * value. This property is described as follows: 
     * 
     * A string describing the alternate Header Digest method preference when 
     * SecondaryHeaderDigestMethod is equal to the value 1, "Other". 
     * 
     * @param	String	new OtherSecondaryHeaderDigestMethod 
     * property value 
     * @exception	Exception	
     */
    public void setOtherSecondaryHeaderDigestMethod(String 
	otherSecondaryHeaderDigestMethod) {

    this.otherSecondaryHeaderDigestMethod = otherSecondaryHeaderDigestMethod;
    } // setOtherSecondaryHeaderDigestMethod


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SecondaryDataDigestMethod. 
     */

    public enum SecondaryDataDigestMethod{
    OTHER,
    NO_DIGEST,
    CRC32C,
    NO_SECONDARY_PREFERENCE
    }SecondaryDataDigestMethod secondaryDataDigestMethod;
    /**
     * This method returns the 
     * iSCSIConnectionSettings.SecondaryDataDigestMethod property value. This 
     * property is described as follows: 
     * 
     * The secondary data digest preference for this portal.
     * 
     * @return	short	current SecondaryDataDigestMethod property 
     * value 
     * @exception	Exception	
     */
    public SecondaryDataDigestMethod getSecondaryDataDigestMethod(){

    return this.secondaryDataDigestMethod;
    } // getSecondaryDataDigestMethod

    /**
     * This method sets the iSCSIConnectionSettings.SecondaryDataDigestMethod 
     * property value. This property is described as follows: 
     * 
     * The secondary data digest preference for this portal.
     * 
     * @param	short	new SecondaryDataDigestMethod property value
     * @exception	Exception	
     */
    public void setSecondaryDataDigestMethod(SecondaryDataDigestMethod 
	secondaryDataDigestMethod){

    this.secondaryDataDigestMethod = secondaryDataDigestMethod;
    } // setSecondaryDataDigestMethod


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherSecondaryDataDigestMethod. 
     */
    private String otherSecondaryDataDigestMethod;
    /**
     * This method returns the 
     * iSCSIConnectionSettings.OtherSecondaryDataDigestMethod property value. 
     * This property is described as follows: 
     * 
     * A string describing the alternate Data Digest method preference when 
     * SecondaryDataDigestMethod is equal to the value 1, "Other". 
     * 
     * @return	String	current OtherSecondaryDataDigestMethod 
     * property value 
     * @exception	Exception	
     */
    public String getOtherSecondaryDataDigestMethod(){

    return this.otherSecondaryDataDigestMethod;
    } // getOtherSecondaryDataDigestMethod

    /**
     * This method sets the 
     * iSCSIConnectionSettings.OtherSecondaryDataDigestMethod property value. 
     * This property is described as follows: 
     * 
     * A string describing the alternate Data Digest method preference when 
     * SecondaryDataDigestMethod is equal to the value 1, "Other". 
     * 
     * @param	String	new OtherSecondaryDataDigestMethod property 
     * value 
     * @exception	Exception	
     */
    public void setOtherSecondaryDataDigestMethod(String 
	otherSecondaryDataDigestMethod) {

    this.otherSecondaryDataDigestMethod = otherSecondaryDataDigestMethod;
    } // setOtherSecondaryDataDigestMethod


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RequestingMarkersOnReceive. 
     */
    private boolean requestingMarkersOnReceive;
    /**
     * This method returns the 
     * iSCSIConnectionSettings.RequestingMarkersOnReceive property value. 
     * This property is described as follows: 
     * 
     * This property indicates whether or not this portal will request markers 
     * in it's incoming data stream. 
     * 
     * @return	boolean	current RequestingMarkersOnReceive 
     * property value 
     * @exception	Exception	
     */
    public boolean isRequestingMarkersOnReceive(){

    return this.requestingMarkersOnReceive;
    } // getRequestingMarkersOnReceive

    /**
     * This method sets the iSCSIConnectionSettings.RequestingMarkersOnReceive 
     * property value. This property is described as follows: 
     * 
     * This property indicates whether or not this portal will request markers 
     * in it's incoming data stream. 
     * 
     * @param	boolean	new RequestingMarkersOnReceive property 
     * value 
     * @exception	Exception	
     */
    public void setRequestingMarkersOnReceive(boolean 
	requestingMarkersOnReceive) {

    this.requestingMarkersOnReceive = requestingMarkersOnReceive;
    } // setRequestingMarkersOnReceive


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property PrimaryAuthenticationMethod. 
     */

    public enum PrimaryAuthenticationMethod{
    NONE,
    NO_AUTHENTICATION,
    SRP,
    CHAP,
    KERBEROS
    }PrimaryAuthenticationMethod primaryAuthenticationMethod;
    /**
     * This method returns the 
     * iSCSIConnectionSettings.PrimaryAuthenticationMethod property value. 
     * This property is described as follows: 
     * 
     * The preferred primary authentication method for connections, as 
     * communicated during the login phase. 
     * 
     * @return	short	current PrimaryAuthenticationMethod 
     * property value 
     * @exception	Exception	
     */
    public PrimaryAuthenticationMethod getPrimaryAuthenticationMethod(){

    return this.primaryAuthenticationMethod;
    } // getPrimaryAuthenticationMethod

    /**
     * This method sets the 
     * iSCSIConnectionSettings.PrimaryAuthenticationMethod property value. 
     * This property is described as follows: 
     * 
     * The preferred primary authentication method for connections, as 
     * communicated during the login phase. 
     * 
     * @param	short	new PrimaryAuthenticationMethod property 
     * value 
     * @exception	Exception	
     */
    public void setPrimaryAuthenticationMethod(PrimaryAuthenticationMethod 
	primaryAuthenticationMethod){

    this.primaryAuthenticationMethod = primaryAuthenticationMethod;
    } // setPrimaryAuthenticationMethod


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SecondaryAuthenticationMethod. 
     */

    public enum SecondaryAuthenticationMethod{
    NONE,
    NO_AUTHENTICATION,
    SRP,
    CHAP,
    KERBEROS
    }SecondaryAuthenticationMethod secondaryAuthenticationMethod;
    /**
     * This method returns the 
     * iSCSIConnectionSettings.SecondaryAuthenticationMethod property value. 
     * This property is described as follows: 
     * 
     * The preferred secondary authentication method for connections, as 
     * communicated during the login phase. 
     * 
     * @return	short	current SecondaryAuthenticationMethod 
     * property value 
     * @exception	Exception	
     */
    public SecondaryAuthenticationMethod getSecondaryAuthenticationMethod(){

    return this.secondaryAuthenticationMethod;
    } // getSecondaryAuthenticationMethod

    /**
     * This method sets the 
     * iSCSIConnectionSettings.SecondaryAuthenticationMethod property value. 
     * This property is described as follows: 
     * 
     * The preferred secondary authentication method for connections, as 
     * communicated during the login phase. 
     * 
     * @param	short	new SecondaryAuthenticationMethod property 
     * value 
     * @exception	Exception	
     */
    public void setSecondaryAuthenticationMethod(SecondaryAuthenticationMethod 
	secondaryAuthenticationMethod){

    this.secondaryAuthenticationMethod = secondaryAuthenticationMethod;
    } // setSecondaryAuthenticationMethod



} // Class ISCSIConnectionSettings
