/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Fri Dec 03 
 * 14:18:55 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class SchedulerUsed as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * SchedulerUsedBean Interface. The CIM class SchedulerUsed is described as 
 * follows: 
 * 
 * In order to remove queued packets, a process or Service (identified as a 
 * PacketSchedulingService) runs. This association describes the Dependency 
 * of the queue and its QueuingService on a SchedulingService, which empties 
 * it. The association is deprecated in lieu of associating Queuing Services 
 * to SchedulingElements, and SchedulingElements into SchedulingServices. The 
 * latter approach is very flexible regarding the implementations that can be 
 * modeled, and removes the need to track individual traffic streams using an 
 * artificial model property, TrafficClass. 
 */
public class SchedulerUsed extends ServiceServiceDependency implements 
    Serializable {

    /**
     * This constructor creates a SchedulerUsedBeanImpl Class which implements 
     * the SchedulerUsedBean Interface, and encapsulates the CIM class 
     * SchedulerUsed in a Java Bean. The CIM class SchedulerUsed is described 
     * as follows: 
     * 
     * In order to remove queued packets, a process or Service (identified as 
     * a PacketSchedulingService) runs. This association describes the 
     * Dependency of the queue and its QueuingService on a SchedulingService, 
     * which empties it. The association is deprecated in lieu of associating 
     * Queuing Services to SchedulingElements, and SchedulingElements into 
     * SchedulingServices. The latter approach is very flexible regarding the 
     * implementations that can be modeled, and removes the need to track 
     * individual traffic streams using an artificial model property, 
     * TrafficClass. 
     */
    public SchedulerUsed(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Antecedent. 
     */
    @Deprecated    private PacketSchedulingService antecedent;
    /**
     * This method returns the SchedulerUsed.Antecedent property value. This 
     * property is described as follows: 
     * 
     * The PacketSchedulingService which empties the Queuing Service's queue.
     * 
     * @return	CIM_PacketSchedulingService	current Antecedent 
     * property value 
     * @exception	Exception	
     */
    @Deprecated
    public PacketSchedulingService getAntecedent(){

    return (PacketSchedulingService)antecedent;
    } // getAntecedent

    /**
     * This method sets the SchedulerUsed.Antecedent property value. This 
     * property is described as follows: 
     * 
     * The PacketSchedulingService which empties the Queuing Service's queue.
     * 
     * @param	CIM_PacketSchedulingService	new Antecedent 
     * property value 
     * @exception	Exception	
     */
    @Deprecated
    public void setAntecedent(PacketSchedulingService antecedent) {

    this.antecedent = antecedent;
    } // setAntecedent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Dependent. 
     */
    @Deprecated    private QueuingService dependent;
    /**
     * This method returns the SchedulerUsed.Dependent property value. This 
     * property is described as follows: 
     * 
     * The queue and its QueuingService from which packets are emptied.
     * 
     * @return	CIM_QueuingService	current Dependent property 
     * value 
     * @exception	Exception	
     */
    @Deprecated
    public QueuingService getDependent(){

    return (QueuingService)dependent;
    } // getDependent

    /**
     * This method sets the SchedulerUsed.Dependent property value. This 
     * property is described as follows: 
     * 
     * The queue and its QueuingService from which packets are emptied.
     * 
     * @param	CIM_QueuingService	new Dependent property value
     * @exception	Exception	
     */
    @Deprecated
    public void setDependent(QueuingService dependent) {

    this.dependent = dependent;
    } // setDependent



} // Class SchedulerUsed
