/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Tue Nov 30 
 * 10:54:51 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class Spared as well as methods comparable to the invokeMethods 
 * defined for this class. This Class implements the SparedBean Interface. 
 * The CIM class Spared is described as follows: 
 * 
 * The Spared association indicates an element that is acting as a replacement 
 * for another element. If the Dependent references a Collection, this 
 * indicates that 'spared' element is a member of that collection and the 
 * actual mapping between the spare and the spared is un-important. 
 */
public class Spared extends Dependency implements Serializable {

    /**
     * This constructor creates a SparedBeanImpl Class which implements the 
     * SparedBean Interface, and encapsulates the CIM class Spared in a Java 
     * Bean. The CIM class Spared is described as follows: 
     * 
     * The Spared association indicates an element that is acting as a 
     * replacement for another element. If the Dependent references a 
     * Collection, this indicates that 'spared' element is a member of that 
     * collection and the actual mapping between the spare and the spared is 
     * un-important. 
     */
    public Spared(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Antecedent. 
     */
    private ManagedElement antecedent;
    /**
     * This method returns the Spared.Antecedent property value. This property 
     * is described as follows: 
     * 
     * A ManagedElement that has replaced/spared another the reference 
     * Dependent element. 
     * 
     * @return	CIM_ManagedElement	current Antecedent property 
     * value 
     * @exception	Exception	
     */
    public ManagedElement getAntecedent(){

    return (ManagedElement)antecedent;
    } // getAntecedent

    /**
     * This method sets the Spared.Antecedent property value. This property is 
     * described as follows: 
     * 
     * A ManagedElement that has replaced/spared another the reference 
     * Dependent element. 
     * 
     * @param	CIM_ManagedElement	new Antecedent property value
     * @exception	Exception	
     */
    public void setAntecedent(ManagedElement antecedent) {

    this.antecedent = antecedent;
    } // setAntecedent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Dependent. 
     */
    private ManagedElement dependent;
    /**
     * This method returns the Spared.Dependent property value. This property 
     * is described as follows: 
     * 
     * The Element or Elements (in the case of a collection) that have been 
     * replaced/spared. 
     * 
     * @return	CIM_ManagedElement	current Dependent property 
     * value 
     * @exception	Exception	
     */
    public ManagedElement getDependent(){

    return (ManagedElement)dependent;
    } // getDependent

    /**
     * This method sets the Spared.Dependent property value. This property is 
     * described as follows: 
     * 
     * The Element or Elements (in the case of a collection) that have been 
     * replaced/spared. 
     * 
     * @param	CIM_ManagedElement	new Dependent property value
     * @exception	Exception	
     */
    public void setDependent(ManagedElement dependent) {

    this.dependent = dependent;
    } // setDependent



} // Class Spared
