/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Tue Nov 30 
 * 10:54:51 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class DynamicForwardingEntry as well as methods comparable to 
 * the invokeMethods defined for this class. This Class implements the 
 * DynamicForwardingEntryBean Interface. The CIM class DynamicForwardingEntry 
 * is described as follows: 
 * 
 * A DynamicForwardingEntry represents an entry in the forwarding (filtering) 
 * database associated with the TransparentBridgingService. The entry is Weak 
 * to the Service as specified by TransparentBridgingDynamicForwarding. 
 */
public class DynamicForwardingEntry extends LogicalElement implements 
    Serializable {

    /**
     * This constructor creates a DynamicForwardingEntryBeanImpl Class which 
     * implements the DynamicForwardingEntryBean Interface, and encapsulates 
     * the CIM class DynamicForwardingEntry in a Java Bean. The CIM class 
     * DynamicForwardingEntry is described as follows: 
     * 
     * A DynamicForwardingEntry represents an entry in the forwarding 
     * (filtering) database associated with the TransparentBridgingService. 
     * The entry is Weak to the Service as specified by 
     * TransparentBridgingDynamicForwarding. 
     */
    public DynamicForwardingEntry(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SystemCreationClassName. 
     */
    private String systemCreationClassName;
    /**
     * This method returns the DynamicForwardingEntry.SystemCreationClassName 
     * property value. This property is described as follows: 
     * 
     * The scoping System's CreationClassName.
     * 
     * @return	String	current SystemCreationClassName property 
     * value 
     * @exception	Exception	
     */
    public String getSystemCreationClassName(){

    return this.systemCreationClassName;
    } // getSystemCreationClassName

    /**
     * This method sets the DynamicForwardingEntry.SystemCreationClassName 
     * property value. This property is described as follows: 
     * 
     * The scoping System's CreationClassName.
     * 
     * @param	String	new SystemCreationClassName property value
     * @exception	Exception	
     */
    public void setSystemCreationClassName(String systemCreationClassName) {

    this.systemCreationClassName = systemCreationClassName;
    } // setSystemCreationClassName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SystemName. 
     */
    private String systemName;
    /**
     * This method returns the DynamicForwardingEntry.SystemName property 
     * value. This property is described as follows: 
     * 
     * The scoping System's Name.
     * 
     * @return	String	current SystemName property value
     * @exception	Exception	
     */
    public String getSystemName(){

    return this.systemName;
    } // getSystemName

    /**
     * This method sets the DynamicForwardingEntry.SystemName property value. 
     * This property is described as follows: 
     * 
     * The scoping System's Name.
     * 
     * @param	String	new SystemName property value
     * @exception	Exception	
     */
    public void setSystemName(String systemName) {

    this.systemName = systemName;
    } // setSystemName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ServiceCreationClassName. 
     */
    private String serviceCreationClassName;
    /**
     * This method returns the DynamicForwardingEntry.ServiceCreationClassName 
     * property value. This property is described as follows: 
     * 
     * The scoping Service's CreationClassName.
     * 
     * @return	String	current ServiceCreationClassName property 
     * value 
     * @exception	Exception	
     */
    public String getServiceCreationClassName(){

    return this.serviceCreationClassName;
    } // getServiceCreationClassName

    /**
     * This method sets the DynamicForwardingEntry.ServiceCreationClassName 
     * property value. This property is described as follows: 
     * 
     * The scoping Service's CreationClassName.
     * 
     * @param	String	new ServiceCreationClassName property value
     * @exception	Exception	
     */
    public void setServiceCreationClassName(String serviceCreationClassName) 
	{

    this.serviceCreationClassName = serviceCreationClassName;
    } // setServiceCreationClassName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ServiceName. 
     */
    private String serviceName;
    /**
     * This method returns the DynamicForwardingEntry.ServiceName property 
     * value. This property is described as follows: 
     * 
     * The scoping Service's Name.
     * 
     * @return	String	current ServiceName property value
     * @exception	Exception	
     */
    public String getServiceName(){

    return this.serviceName;
    } // getServiceName

    /**
     * This method sets the DynamicForwardingEntry.ServiceName property value. 
     * This property is described as follows: 
     * 
     * The scoping Service's Name.
     * 
     * @param	String	new ServiceName property value
     * @exception	Exception	
     */
    public void setServiceName(String serviceName) {

    this.serviceName = serviceName;
    } // setServiceName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property CreationClassName. 
     */
    private String creationClassName;
    /**
     * This method returns the DynamicForwardingEntry.CreationClassName 
     * property value. This property is described as follows: 
     * 
     * CreationClassName indicates the name of the class or the subclass used 
     * in the creation of an instance. When used with the other key 
     * properties of this class, this property allows all instances of this 
     * class and its subclasses to be uniquely identified. 
     * 
     * @return	String	current CreationClassName property value
     * @exception	Exception	
     */
    public String getCreationClassName(){

    return this.creationClassName;
    } // getCreationClassName

    /**
     * This method sets the DynamicForwardingEntry.CreationClassName property 
     * value. This property is described as follows: 
     * 
     * CreationClassName indicates the name of the class or the subclass used 
     * in the creation of an instance. When used with the other key 
     * properties of this class, this property allows all instances of this 
     * class and its subclasses to be uniquely identified. 
     * 
     * @param	String	new CreationClassName property value
     * @exception	Exception	
     */
    public void setCreationClassName(String creationClassName) {

    this.creationClassName = creationClassName;
    } // setCreationClassName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property MACAddress. 
     */
    private String mACAddress;
    /**
     * This method returns the DynamicForwardingEntry.MACAddress property 
     * value. This property is described as follows: 
     * 
     * Unicast MAC address for which the TransparentBridging Service has 
     * forwarding and/or filtering information. Note that the MAC address is 
     * formatted as twelve hexadecimal digits (e.g., "010203040506"), with 
     * each pair representing one of the six octets of the MAC address in 
     * "canonical" bit order according to RFC 2469. 
     * 
     * @return	String	current MACAddress property value
     * @exception	Exception	
     */
    public String getMACAddress(){

    return this.mACAddress;
    } // getMACAddress

    /**
     * This method sets the DynamicForwardingEntry.MACAddress property value. 
     * This property is described as follows: 
     * 
     * Unicast MAC address for which the TransparentBridging Service has 
     * forwarding and/or filtering information. Note that the MAC address is 
     * formatted as twelve hexadecimal digits (e.g., "010203040506"), with 
     * each pair representing one of the six octets of the MAC address in 
     * "canonical" bit order according to RFC 2469. 
     * 
     * @param	String	new MACAddress property value
     * @exception	Exception	
     */
    public void setMACAddress(String mACAddress) {

    this.mACAddress = mACAddress;
    } // setMACAddress


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property DynamicStatus. 
     */

    public enum DynamicStatus{
    OTHER,
    INVALID,
    LEARNED,
    SELF,
    MGMT
    }DynamicStatus dynamicStatus;
    /**
     * This method returns the DynamicForwardingEntry.DynamicStatus property 
     * value. This property is described as follows: 
     * 
     * The status of the entry.
     * 
     * @return	short	current DynamicStatus property value
     * @exception	Exception	
     */
    public DynamicStatus getDynamicStatus(){

    return this.dynamicStatus;
    } // getDynamicStatus

    /**
     * This method sets the DynamicForwardingEntry.DynamicStatus property 
     * value. This property is described as follows: 
     * 
     * The status of the entry.
     * 
     * @param	short	new DynamicStatus property value
     * @exception	Exception	
     */
    public void setDynamicStatus(DynamicStatus dynamicStatus){

    this.dynamicStatus = dynamicStatus;
    } // setDynamicStatus



} // Class DynamicForwardingEntry
