/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Jan 03 
 * 16:22:03 CET 2011. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import javax.persistence.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class RoutingPolicy as well as methods comparable to the 
 * invokeMethods defined for this class. This Class implements the 
 * RoutingPolicyBean Interface. The CIM class RoutingPolicy is described as 
 * follows: 
 * 
 * This class is used to implement routing policies. It aggregates a set of 
 * FilterLists, along with other appropriate constructs, into a unit. One of 
 * the most important uses of this class is to change the routing policy by 
 * changing values of various attributes in a consistent manner. A 
 * RoutingPolicy is weak to the network device (i.e., the ComputerSystem) 
 * that contains it. Hence, the ComputerSystem keys are propagated to this 
 * class. Note that this class was defined before the Policy Model and hence 
 * is not positioned in that hierarchy. The class will be repositioned in a 
 * later release of the Network Model. 
 */
    @Entity
public class RoutingPolicy extends LogicalElement implements Serializable {

    /**
     * This constructor creates a RoutingPolicyBeanImpl Class which implements 
     * the RoutingPolicyBean Interface, and encapsulates the CIM class 
     * RoutingPolicy in a Java Bean. The CIM class RoutingPolicy is described 
     * as follows: 
     * 
     * This class is used to implement routing policies. It aggregates a set 
     * of FilterLists, along with other appropriate constructs, into a unit. 
     * One of the most important uses of this class is to change the routing 
     * policy by changing values of various attributes in a consistent 
     * manner. A RoutingPolicy is weak to the network device (i.e., the 
     * ComputerSystem) that contains it. Hence, the ComputerSystem keys are 
     * propagated to this class. Note that this class was defined before the 
     * Policy Model and hence is not positioned in that hierarchy. The class 
     * will be repositioned in a later release of the Network Model. 
     */
    public RoutingPolicy(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SystemCreationClassName. 
     */
    private String systemCreationClassName;
    /**
     * This method returns the RoutingPolicy.systemCreationClassName property 
     * value. This property is described as follows: 
     * 
     * The scoping ComputerSystem's CreationClassName.
     * 
     * @return	String	current systemCreationClassName property 
     * value 
     * @exception	Exception	
     */
    public String getsystemCreationClassName(){

    return this.systemCreationClassName;
    } // getsystemCreationClassName

    /**
     * This method sets the RoutingPolicy.systemCreationClassName property 
     * value. This property is described as follows: 
     * 
     * The scoping ComputerSystem's CreationClassName.
     * 
     * @param	String	new systemCreationClassName property value
     * @exception	Exception	
     */
    public void setsystemCreationClassName(String systemCreationClassName) {

    this.systemCreationClassName = systemCreationClassName;
    } // setsystemCreationClassName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SystemName. 
     */
    private String systemName;
    /**
     * This method returns the RoutingPolicy.systemName property value. This 
     * property is described as follows: 
     * 
     * The scoping ComputerSystem's Name.
     * 
     * @return	String	current systemName property value
     * @exception	Exception	
     */
    public String getsystemName(){

    return this.systemName;
    } // getsystemName

    /**
     * This method sets the RoutingPolicy.systemName property value. This 
     * property is described as follows: 
     * 
     * The scoping ComputerSystem's Name.
     * 
     * @param	String	new systemName property value
     * @exception	Exception	
     */
    public void setsystemName(String systemName) {

    this.systemName = systemName;
    } // setsystemName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property CreationClassName. 
     */
    private String creationClassName;
    /**
     * This method returns the RoutingPolicy.creationClassName property value. 
     * This property is described as follows: 
     * 
     * CreationClassName indicates the name of the class or the subclass used 
     * in the creation of an instance. When used with the other key 
     * properties of this class, this property allows all instances of this 
     * class and its subclasses to be uniquely identified. 
     * 
     * @return	String	current creationClassName property value
     * @exception	Exception	
     */
    public String getcreationClassName(){

    return this.creationClassName;
    } // getcreationClassName

    /**
     * This method sets the RoutingPolicy.creationClassName property value. 
     * This property is described as follows: 
     * 
     * CreationClassName indicates the name of the class or the subclass used 
     * in the creation of an instance. When used with the other key 
     * properties of this class, this property allows all instances of this 
     * class and its subclasses to be uniquely identified. 
     * 
     * @param	String	new creationClassName property value
     * @exception	Exception	
     */
    public void setcreationClassName(String creationClassName) {

    this.creationClassName = creationClassName;
    } // setcreationClassName


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Name. 
     */
    private String name;
    /**
     * This method returns the RoutingPolicy.name property value. This 
     * property is described as follows: 
     * 
     * This is the name of the Routing Policy.
     * 
     * @return	String	current name property value
     * @exception	Exception	
     */
    public String getname(){

    return (String)name;
    } // getname

    /**
     * This method sets the RoutingPolicy.name property value. This property 
     * is described as follows: 
     * 
     * This is the name of the Routing Policy.
     * 
     * @param	String	new name property value
     * @exception	Exception	
     */
    public void setname(String name) {

    this.name = name;
    } // setname


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Action. 
     */

    public enum Action{
    ACCEPT_AS_IS,
    ACCEPT_WITH_PROTOCOL_ATTRIBUTE_CHANGES,
    ACCEPT_AND_REMARK_PACKET,
    ACCEPT_WITH_PROTOCOL_ATTRIBUTE_CHANGES_AND_REMARK,
    ACCEPT_WITH_OTHER_ACTION,
    ACCEPT_WITH_PROTOCOL_ATTRIBUTE_CHANGES_AND_OTHER_ACTION,
    ACCEPT_WITH_REMARK_AND_OTHER_ACTION,
    ACCEPT_WITH_PROTOCOL_ATTRIBUTE_CHANGES_REMARK_AND_OTHER_ACTION,
    DENY
    }
    private Action action;
    /**
     * This method returns the RoutingPolicy.Action property value. This 
     * property is described as follows: 
     * 
     * This defines the type of action that will be performed if the match 
     * conditions of the policy are met. The match conditions are defined by 
     * the associated ListsIn RoutingPolicy. There are essentially three 
     * choices: forward the traffic unmodified, forward the traffic but 
     * modify either the attributes describing the route and/or other 
     * attributes that define how to condition the traffic (e.g., its ToS 
     * byte settings), or prevent the traffic from being forwarded. 
     * 
     * @return	int	current Action property value
     * @exception	Exception	
     */
    public Action getAction(){

    return this.action;
    } // getAction

    /**
     * This method sets the RoutingPolicy.Action property value. This property 
     * is described as follows: 
     * 
     * This defines the type of action that will be performed if the match 
     * conditions of the policy are met. The match conditions are defined by 
     * the associated ListsIn RoutingPolicy. There are essentially three 
     * choices: forward the traffic unmodified, forward the traffic but 
     * modify either the attributes describing the route and/or other 
     * attributes that define how to condition the traffic (e.g., its ToS 
     * byte settings), or prevent the traffic from being forwarded. 
     * 
     * @param	int	new Action property value
     * @exception	Exception	
     */
    public void setAction(Action action){

    this.action = action;
    } // setAction


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property AttributeAction. 
     */

    public enum AttributeAction{
    REPLACE,
    PREPEND,
    APPEND
    }
    private AttributeAction attributeAction;
    /**
     * This method returns the RoutingPolicy.AttributeAction property value. 
     * This property is described as follows: 
     * 
     * This controls whether protocol-specific attributes replace, get 
     * prepended, or get appended to their existing values. 
     * 
     * @return	int	current AttributeAction property value
     * @exception	Exception	
     */
    public AttributeAction getAttributeAction(){

    return this.attributeAction;
    } // getAttributeAction

    /**
     * This method sets the RoutingPolicy.AttributeAction property value. This 
     * property is described as follows: 
     * 
     * This controls whether protocol-specific attributes replace, get 
     * prepended, or get appended to their existing values. 
     * 
     * @param	int	new AttributeAction property value
     * @exception	Exception	
     */
    public void setAttributeAction(AttributeAction attributeAction){

    this.attributeAction = attributeAction;
    } // setAttributeAction


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property BGPAction. 
     */

    public enum BGPAction{
    ORIGIN,
    AS_PATH,
    NEXT_HOP,
    MULTI_EXIT_DISC,
    LOCAL_PREF,
    ATOMIC_AGGREGATE,
    AGGREGATOR,
    COMMUNITY,
    ORIGINATOR_ID,
    CLUSTER_LIST
    }
    private BGPAction bGPAction;
    /**
     * This method returns the RoutingPolicy.BGPAction property value. This 
     * property is described as follows: 
     * 
     * This defines one or more BGP-specific attributes that should be used to 
     * modify this routing update. 
     * 
     * @return	int	current BGPAction property value
     * @exception	Exception	
     */
    public BGPAction getBGPAction(){

    return this.bGPAction;
    } // getBGPAction

    /**
     * This method sets the RoutingPolicy.BGPAction property value. This 
     * property is described as follows: 
     * 
     * This defines one or more BGP-specific attributes that should be used to 
     * modify this routing update. 
     * 
     * @param	int	new BGPAction property value
     * @exception	Exception	
     */
    public void setBGPAction(BGPAction bGPAction){

    this.bGPAction = bGPAction;
    } // setBGPAction


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property BGPValue. 
     */
    private String bGPValue;
    /**
     * This method returns the RoutingPolicy.bGPValue property value. This 
     * property is described as follows: 
     * 
     * The value for the corresponding BGPAction.
     * 
     * @return	String	current bGPValue property value
     * @exception	Exception	
     */
    public String getbGPValue(){

    return this.bGPValue;
    } // getbGPValue

    /**
     * This method sets the RoutingPolicy.bGPValue property value. This 
     * property is described as follows: 
     * 
     * The value for the corresponding BGPAction.
     * 
     * @param	String	new bGPValue property value
     * @exception	Exception	
     */
    public void setbGPValue(String bGPValue) {

    this.bGPValue = bGPValue;
    } // setbGPValue


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RemarkAction. 
     */

    public enum RemarkAction{
    CHANGE_DSCP,
    CHANGE_TOS,
    CHANGE_802_1Q_VALUE,
    CHANGE_CIR,
    CHANGE_CBR,
    CHANGE_ABR,
    CHANGE_VBR
    }
    private RemarkAction remarkAction;
    /**
     * This method returns the RoutingPolicy.RemarkAction property value. This 
     * property is described as follows: 
     * 
     * This defines a remarking action for this traffic.
     * 
     * @return	int	current RemarkAction property value
     * @exception	Exception	
     */
    public RemarkAction getRemarkAction(){

    return this.remarkAction;
    } // getRemarkAction

    /**
     * This method sets the RoutingPolicy.RemarkAction property value. This 
     * property is described as follows: 
     * 
     * This defines a remarking action for this traffic.
     * 
     * @param	int	new RemarkAction property value
     * @exception	Exception	
     */
    public void setRemarkAction(RemarkAction remarkAction){

    this.remarkAction = remarkAction;
    } // setRemarkAction


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property RemarkValue. 
     */
    private String remarkValue;
    /**
     * This method returns the RoutingPolicy.remarkValue property value. This 
     * property is described as follows: 
     * 
     * The value for the corresponding RemarkAction.
     * 
     * @return	String	current remarkValue property value
     * @exception	Exception	
     */
    public String getremarkValue(){

    return this.remarkValue;
    } // getremarkValue

    /**
     * This method sets the RoutingPolicy.remarkValue property value. This 
     * property is described as follows: 
     * 
     * The value for the corresponding RemarkAction.
     * 
     * @param	String	new remarkValue property value
     * @exception	Exception	
     */
    public void setremarkValue(String remarkValue) {

    this.remarkValue = remarkValue;
    } // setremarkValue


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ConditioningAction. 
     */

    public enum ConditioningAction{
    OTHER,
    INPUT_FLOW_POLICING,
    OUTPUT_FLOW_POLICING,
    INPUT_AGGREGATE_POLICING,
    OUTPUT_AGGREGATE_POLICING,
    POLICE_BY_MARKING_DOWN,
    POLICE_BY_DROPPING_DOWN
    }
    private ConditioningAction conditioningAction;
    /**
     * This method returns the RoutingPolicy.ConditioningAction property 
     * value. This property is described as follows: 
     * 
     * This defines another action to be taken for this traffic.
     * 
     * @return	int	current ConditioningAction property value
     * @exception	Exception	
     */
    public ConditioningAction getConditioningAction(){

    return this.conditioningAction;
    } // getConditioningAction

    /**
     * This method sets the RoutingPolicy.ConditioningAction property value. 
     * This property is described as follows: 
     * 
     * This defines another action to be taken for this traffic.
     * 
     * @param	int	new ConditioningAction property value
     * @exception	Exception	
     */
    public void setConditioningAction(ConditioningAction 
	conditioningAction){

    this.conditioningAction = conditioningAction;
    } // setConditioningAction


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property OtherConditioningAction. 
     */
    private String otherConditioningAction;
    /**
     * This method returns the RoutingPolicy.otherConditioningAction property 
     * value. This property is described as follows: 
     * 
     * If the value of the ConditioningAction property of this class is 1, 
     * this contains an application-specific type of conditioning that is to 
     * be performed. Otherwise, if the ConditioningAction property is any 
     * other value, the value of this property should be NULL. 
     * 
     * @return	String	current otherConditioningAction property 
     * value 
     * @exception	Exception	
     */
    public String getotherConditioningAction(){

    return this.otherConditioningAction;
    } // getotherConditioningAction

    /**
     * This method sets the RoutingPolicy.otherConditioningAction property 
     * value. This property is described as follows: 
     * 
     * If the value of the ConditioningAction property of this class is 1, 
     * this contains an application-specific type of conditioning that is to 
     * be performed. Otherwise, if the ConditioningAction property is any 
     * other value, the value of this property should be NULL. 
     * 
     * @param	String	new otherConditioningAction property value
     * @exception	Exception	
     */
    public void setotherConditioningAction(String otherConditioningAction) {

    this.otherConditioningAction = otherConditioningAction;
    } // setotherConditioningAction


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property ConditioningValue. 
     */
    private String conditioningValue;
    /**
     * This method returns the RoutingPolicy.conditioningValue property value. 
     * This property is described as follows: 
     * 
     * The value for the corresponding ConditioningAction, if appropriate.
     * 
     * @return	String	current conditioningValue property value
     * @exception	Exception	
     */
    public String getconditioningValue(){

    return this.conditioningValue;
    } // getconditioningValue

    /**
     * This method sets the RoutingPolicy.conditioningValue property value. 
     * This property is described as follows: 
     * 
     * The value for the corresponding ConditioningAction, if appropriate.
     * 
     * @param	String	new conditioningValue property value
     * @exception	Exception	
     */
    public void setconditioningValue(String conditioningValue) {

    this.conditioningValue = conditioningValue;
    } // setconditioningValue



} // Class RoutingPolicy
