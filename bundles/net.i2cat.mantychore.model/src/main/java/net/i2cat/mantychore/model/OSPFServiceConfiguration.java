/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Tue Nov 30 
 * 10:54:51 CET 2010. 
 */

package net.i2cat.mantychore.model;

import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class OSPFServiceConfiguration as well as methods comparable to 
 * the invokeMethods defined for this class. This Class implements the 
 * OSPFServiceConfigurationBean Interface. The CIM class 
 * OSPFServiceConfiguration is described as follows: 
 * 
 * OSPFServiceConfiguration connects an OSPF service to its area 
 * configurations. The configurations are defined for the OSPF Service, and 
 * so do not make sense as stand alone objects. This is the reason for the 
 * Min (1), Max (1) cardinalities on OSPFService. They mandate the 
 * instantiation of the service and of this association for the referenced 
 * instance of OSPFAreaConfiguration. The area configuration acts as a focal 
 * point to bring together the router (indicated as a ComputerSystem with an 
 * instance of OSPFService, associated to the AreaConfiguration using this 
 * relationship), the area (indicated as an OSPFArea, associated to the 
 * AreaConfiguration using AreaOfConfiguration) and the address ranges for 
 * advertising (indicated as instances of RangeOfIPAddresses, associated to 
 * the AreaConfiguration using RangesOfConfiguration). There would be an 
 * instance of OSPFAreaConfiguration for each connected area of a 
 * router/OSPFService. 
 */
public class OSPFServiceConfiguration extends Dependency implements 
    Serializable {

    /**
     * This constructor creates a OSPFServiceConfigurationBeanImpl Class which 
     * implements the OSPFServiceConfigurationBean Interface, and 
     * encapsulates the CIM class OSPFServiceConfiguration in a Java Bean. 
     * The CIM class OSPFServiceConfiguration is described as follows: 
     * 
     * OSPFServiceConfiguration connects an OSPF service to its area 
     * configurations. The configurations are defined for the OSPF Service, 
     * and so do not make sense as stand alone objects. This is the reason 
     * for the Min (1), Max (1) cardinalities on OSPFService. They mandate 
     * the instantiation of the service and of this association for the 
     * referenced instance of OSPFAreaConfiguration. The area configuration 
     * acts as a focal point to bring together the router (indicated as a 
     * ComputerSystem with an instance of OSPFService, associated to the 
     * AreaConfiguration using this relationship), the area (indicated as an 
     * OSPFArea, associated to the AreaConfiguration using 
     * AreaOfConfiguration) and the address ranges for advertising (indicated 
     * as instances of RangeOfIPAddresses, associated to the 
     * AreaConfiguration using RangesOfConfiguration). There would be an 
     * instance of OSPFAreaConfiguration for each connected area of a 
     * router/OSPFService. 
     */
    public OSPFServiceConfiguration(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Antecedent. 
     */
    private OSPFService antecedent;
    /**
     * This method returns the OSPFServiceConfiguration.Antecedent property 
     * value. This property is described as follows: 
     * 
     * The OSPF service.
     * 
     * @return	CIM_OSPFService	current Antecedent property value
     * @exception	Exception	
     */
    public OSPFService getAntecedent(){

    return (OSPFService)antecedent;
    } // getAntecedent

    /**
     * This method sets the OSPFServiceConfiguration.Antecedent property 
     * value. This property is described as follows: 
     * 
     * The OSPF service.
     * 
     * @param	CIM_OSPFService	new Antecedent property value
     * @exception	Exception	
     */
    public void setAntecedent(OSPFService antecedent) {

    this.antecedent = antecedent;
    } // setAntecedent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Dependent. 
     */
    private OSPFAreaConfiguration dependent;
    /**
     * This method returns the OSPFServiceConfiguration.Dependent property 
     * value. This property is described as follows: 
     * 
     * The area configuration.
     * 
     * @return	CIM_OSPFAreaConfiguration	current Dependent 
     * property value 
     * @exception	Exception	
     */
    public OSPFAreaConfiguration getDependent(){

    return (OSPFAreaConfiguration)dependent;
    } // getDependent

    /**
     * This method sets the OSPFServiceConfiguration.Dependent property value. 
     * This property is described as follows: 
     * 
     * The area configuration.
     * 
     * @param	CIM_OSPFAreaConfiguration	new Dependent property 
     * value 
     * @exception	Exception	
     */
    public void setDependent(OSPFAreaConfiguration dependent) {

    this.dependent = dependent;
    } // setDependent



} // Class OSPFServiceConfiguration
