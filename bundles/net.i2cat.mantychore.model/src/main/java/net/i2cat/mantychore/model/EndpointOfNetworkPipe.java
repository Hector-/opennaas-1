/**
 * This file was auto-generated by mofcomp -j version 1.0.0 on Mon Nov 29 
 * 11:50:57 CET 2010. 
 */

package net.i2cat.mantychore.model;

import javax.wbem.client.*;
import javax.wbem.cim.*;
import java.util.*;
import java.io.*;
import java.lang.Exception;

/**
 * This Class contains accessor and mutator methods for all properties defined 
 * in the CIM class EndpointOfNetworkPipe as well as methods comparable to 
 * the invokeMethods defined for this class. This Class implements the 
 * EndpointOfNetworkPipeBean Interface. The CIM class EndpointOfNetworkPipe 
 * is described as follows: 
 * 
 * EndpointOfNetworkPipe describes the endpoints between which a pipe 
 * transfers information. Whether an endpoint is a source or sink is 
 * indicated by a property of the association, SourceOrSink. 
 */
public class EndpointOfNetworkPipe extends Dependency implements Serializable 
    {

    /**
     * This constructor creates a EndpointOfNetworkPipeBeanImpl Class which 
     * implements the EndpointOfNetworkPipeBean Interface, and encapsulates 
     * the CIM class EndpointOfNetworkPipe in a Java Bean. The CIM class 
     * EndpointOfNetworkPipe is described as follows: 
     * 
     * EndpointOfNetworkPipe describes the endpoints between which a pipe 
     * transfers information. Whether an endpoint is a source or sink is 
     * indicated by a property of the association, SourceOrSink. 
     */
    public EndpointOfNetworkPipe(){};
    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Antecedent. 
     */
    private ProtocolEndpoint antecedent;
    /**
     * This method returns the EndpointOfNetworkPipe.Antecedent property 
     * value. This property is described as follows: 
     * 
     * One of the endpoints of the pipe.
     * 
     * @return	CIM_ProtocolEndpoint	current Antecedent property 
     * value 
     * @exception	Exception	
     */
    public ProtocolEndpoint getAntecedent(){

    return (ProtocolEndpoint)antecedent;
    } // getAntecedent

    /**
     * This method sets the EndpointOfNetworkPipe.Antecedent property value. 
     * This property is described as follows: 
     * 
     * One of the endpoints of the pipe.
     * 
     * @param	CIM_ProtocolEndpoint	new Antecedent property value
     * @exception	Exception	
     */
    public void setAntecedent(ProtocolEndpoint antecedent) {

    this.antecedent = antecedent;
    } // setAntecedent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property Dependent. 
     */
    private NetworkPipe dependent;
    /**
     * This method returns the EndpointOfNetworkPipe.Dependent property value. 
     * This property is described as follows: 
     * 
     * The pipe which is dependent on the endpoints as the source or sink of 
     * the transferred information. 
     * 
     * @return	CIM_NetworkPipe	current Dependent property value
     * @exception	Exception	
     */
    public NetworkPipe getDependent(){

    return (NetworkPipe)dependent;
    } // getDependent

    /**
     * This method sets the EndpointOfNetworkPipe.Dependent property value. 
     * This property is described as follows: 
     * 
     * The pipe which is dependent on the endpoints as the source or sink of 
     * the transferred information. 
     * 
     * @param	CIM_NetworkPipe	new Dependent property value
     * @exception	Exception	
     */
    public void setDependent(NetworkPipe dependent) {

    this.dependent = dependent;
    } // setDependent


    /**
     * The following constants are defined for use with the ValueMap/Values 
     * qualified property SourceOrSink. 
     */

    public enum SourceOrSink{
    UNKNOWN,
    SOURCE,
    SINK,
    NOT_APPLICABLE
    }SourceOrSink sourceOrSink;
    /**
     * This method returns the EndpointOfNetworkPipe.SourceOrSink property 
     * value. This property is described as follows: 
     * 
     * Indicates whether the endpoint is a source (value = 2), or sink (value 
     * = 3) for the pipe. If this information is not applicable, the property 
     * is set to 4. If the information is not known, the property is set to 
     * 0. 
     * 
     * @return	short	current SourceOrSink property value
     * @exception	Exception	
     */
    public SourceOrSink getSourceOrSink(){

    return this.sourceOrSink;
    } // getSourceOrSink

    /**
     * This method sets the EndpointOfNetworkPipe.SourceOrSink property value. 
     * This property is described as follows: 
     * 
     * Indicates whether the endpoint is a source (value = 2), or sink (value 
     * = 3) for the pipe. If this information is not applicable, the property 
     * is set to 4. If the information is not known, the property is set to 
     * 0. 
     * 
     * @param	short	new SourceOrSink property value
     * @exception	Exception	
     */
    public void setSourceOrSink(SourceOrSink sourceOrSink){

    this.sourceOrSink = sourceOrSink;
    } // setSourceOrSink



} // Class EndpointOfNetworkPipe
